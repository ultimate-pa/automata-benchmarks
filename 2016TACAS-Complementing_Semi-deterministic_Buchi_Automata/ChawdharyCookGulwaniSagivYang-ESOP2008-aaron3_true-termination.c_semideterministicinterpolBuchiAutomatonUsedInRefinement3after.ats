// Testfile dumped by Ultimate at 2015/10/05 03:43:35
//
// RefinementSetting [m_InterpolantAutomaton=ScroogeNondeterminism, m_BouncerStem=true, m_BouncerLoop=false, m_ScroogeNondeterminismStem=true, m_ScroogeNondeterminismLoop=false, m_CannibalizeLoop=false, m_UsedDefinedMaxRank=-3]

NestedWordAutomaton nwa = (
	callAlphabet = {},
	internalAlphabet = {"assume !!(main_~x~2 >= main_~y~2 && main_~x~2 <= main_~tx~2 + main_~z~2);" "assume true;" "assume true;" "assume !(main_#t~nondet4 != 0);havoc main_#t~nondet4;main_~y~2 := main_~y~2 + 1;" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_#t~nondet3, main_#t~nondet4, main_#t~nondet5, main_~x~2, main_~y~2, main_~z~2, main_~tx~2;main_~x~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~y~2 := main_#t~nondet1;havoc main_#t~nondet1;main_~z~2 := main_#t~nondet2;havoc main_#t~nondet2;main_~tx~2 := main_#t~nondet3;havoc main_#t~nondet3;" "assume !(main_~x~2 >= main_~y~2 && main_~x~2 <= main_~tx~2 + main_~z~2);" "assume main_#t~nondet4 != 0;havoc main_#t~nondet4;main_~z~2 := main_~z~2 - 1;main_~tx~2 := main_~x~2;main_~x~2 := main_#t~nondet5;havoc main_#t~nondet5;" "assume !true;" "main_#res := 0;#t~ret6 := main_#res;assume true;" },
	returnAlphabet = {},
	states = {"428#unseeded" "453#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= ULTIMATE.start_main_~y~2 ULTIMATE.start_main_~x~2))" "437#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 2) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= 0 oldRank0))" "438#(<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0))" },
	initialStates = {"428#unseeded" },
	finalStates = {"437#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 2) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= 0 oldRank0))" },
	callTransitions = {
	},
	internalTransitions = {
		 ("428#unseeded" "assume !!(main_~x~2 >= main_~y~2 && main_~x~2 <= main_~tx~2 + main_~z~2);" "428#unseeded")
		 ("428#unseeded" "assume true;" "428#unseeded")
		 ("428#unseeded" "assume true;" "428#unseeded")
		 ("428#unseeded" "assume !(main_#t~nondet4 != 0);havoc main_#t~nondet4;main_~y~2 := main_~y~2 + 1;" "428#unseeded")
		 ("428#unseeded" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_#t~nondet3, main_#t~nondet4, main_#t~nondet5, main_~x~2, main_~y~2, main_~z~2, main_~tx~2;main_~x~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~y~2 := main_#t~nondet1;havoc main_#t~nondet1;main_~z~2 := main_#t~nondet2;havoc main_#t~nondet2;main_~tx~2 := main_#t~nondet3;havoc main_#t~nondet3;" "428#unseeded")
		 ("428#unseeded" "assume main_#t~nondet4 != 0;havoc main_#t~nondet4;main_~z~2 := main_~z~2 - 1;main_~tx~2 := main_~x~2;main_~x~2 := main_#t~nondet5;havoc main_#t~nondet5;" "428#unseeded")
		 ("428#unseeded" "assume main_#t~nondet4 != 0;havoc main_#t~nondet4;main_~z~2 := main_~z~2 - 1;main_~tx~2 := main_~x~2;main_~x~2 := main_#t~nondet5;havoc main_#t~nondet5;" "437#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 2) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= 0 oldRank0))")
		 ("453#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= ULTIMATE.start_main_~y~2 ULTIMATE.start_main_~x~2))" "assume !(main_#t~nondet4 != 0);havoc main_#t~nondet4;main_~y~2 := main_~y~2 + 1;" "437#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 2) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= 0 oldRank0))")
		 ("437#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 2) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= 0 oldRank0))" "assume true;" "438#(<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0))")
		 ("438#(<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0))" "assume !!(main_~x~2 >= main_~y~2 && main_~x~2 <= main_~tx~2 + main_~z~2);" "453#(and (<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0)) (<= ULTIMATE.start_main_~y~2 ULTIMATE.start_main_~x~2))")
		 ("438#(<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0))" "assume true;" "438#(<= (+ (* 2 ULTIMATE.start_main_~x~2) 1) (+ (* 2 ULTIMATE.start_main_~y~2) oldRank0))")
	},
	returnTransitions = {
	}
);
