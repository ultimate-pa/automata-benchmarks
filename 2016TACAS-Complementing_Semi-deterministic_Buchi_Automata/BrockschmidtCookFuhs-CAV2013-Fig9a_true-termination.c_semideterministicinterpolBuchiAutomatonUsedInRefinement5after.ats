// Testfile dumped by Ultimate at 2015/10/05 03:43:31
//
// RefinementSetting [m_InterpolantAutomaton=ScroogeNondeterminism, m_BouncerStem=true, m_BouncerLoop=false, m_ScroogeNondeterminismStem=true, m_ScroogeNondeterminismLoop=false, m_CannibalizeLoop=false, m_UsedDefinedMaxRank=-3]

NestedWordAutomaton nwa = (
	callAlphabet = {},
	internalAlphabet = {"assume true;assume !!(main_~i~2 < main_~n~2);main_~j~2 := 0;" "assume !true;" "assume true;assume !!(main_~j~2 <= main_~i~2);main_~j~2 := main_~j~2 + main_~k~2;" "assume !true;" "main_~i~2 := main_~i~2 + 1;" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_#t~nondet3, main_~k~2, main_~i~2, main_~j~2, main_~n~2;main_~k~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~i~2 := main_#t~nondet1;havoc main_#t~nondet1;main_~j~2 := main_#t~nondet2;havoc main_#t~nondet2;main_~n~2 := main_#t~nondet3;havoc main_#t~nondet3;assume !(main_~k~2 >= 1);" "assume true;assume !(main_~j~2 <= main_~i~2);" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_#t~nondet3, main_~k~2, main_~i~2, main_~j~2, main_~n~2;main_~k~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~i~2 := main_#t~nondet1;havoc main_#t~nondet1;main_~j~2 := main_#t~nondet2;havoc main_#t~nondet2;main_~n~2 := main_#t~nondet3;havoc main_#t~nondet3;assume main_~k~2 >= 1;main_~i~2 := 0;" "assume true;" "assume true;assume !(main_~i~2 < main_~n~2);" "main_#res := 0;#t~ret4 := main_#res;assume true;" },
	returnAlphabet = {},
	states = {"567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)" "564#unseeded" "573#(and (<= 1 ULTIMATE.start_main_~k~2) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 1) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))" "572#(and (<= 1 ULTIMATE.start_main_~k~2) (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 2) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))" },
	initialStates = {"564#unseeded" },
	finalStates = {"572#(and (<= 1 ULTIMATE.start_main_~k~2) (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 2) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))" },
	callTransitions = {
	},
	internalTransitions = {
		 ("567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)" "assume true;assume !!(main_~i~2 < main_~n~2);main_~j~2 := 0;" "567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)")
		 ("567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)" "assume true;assume !!(main_~j~2 <= main_~i~2);main_~j~2 := main_~j~2 + main_~k~2;" "567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)")
		 ("567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)" "assume true;assume !!(main_~j~2 <= main_~i~2);main_~j~2 := main_~j~2 + main_~k~2;" "572#(and (<= 1 ULTIMATE.start_main_~k~2) (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 2) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))")
		 ("567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)" "main_~i~2 := main_~i~2 + 1;" "567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)")
		 ("567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)" "assume true;assume !(main_~j~2 <= main_~i~2);" "567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)")
		 ("564#unseeded" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_#t~nondet3, main_~k~2, main_~i~2, main_~j~2, main_~n~2;main_~k~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~i~2 := main_#t~nondet1;havoc main_#t~nondet1;main_~j~2 := main_#t~nondet2;havoc main_#t~nondet2;main_~n~2 := main_#t~nondet3;havoc main_#t~nondet3;assume main_~k~2 >= 1;main_~i~2 := 0;" "567#(and (<= 1 ULTIMATE.start_main_~k~2) unseeded)")
		 ("572#(and (<= 1 ULTIMATE.start_main_~k~2) (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 2) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))" "assume true;assume !!(main_~j~2 <= main_~i~2);main_~j~2 := main_~j~2 + main_~k~2;" "572#(and (<= 1 ULTIMATE.start_main_~k~2) (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 2) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))")
		 ("572#(and (<= 1 ULTIMATE.start_main_~k~2) (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 2) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))" "assume true;assume !(main_~j~2 <= main_~i~2);" "573#(and (<= 1 ULTIMATE.start_main_~k~2) (<= (+ (* 2 ULTIMATE.start_main_~i~2) 1) (+ (* 2 ULTIMATE.start_main_~j~2) oldRank0)))")
	},
	returnTransitions = {
	}
);
