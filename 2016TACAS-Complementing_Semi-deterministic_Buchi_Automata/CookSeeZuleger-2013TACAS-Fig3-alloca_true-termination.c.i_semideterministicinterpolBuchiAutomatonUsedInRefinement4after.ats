// Testfile dumped by Ultimate at 2015/10/05 05:17:12
//
// RefinementSetting [m_InterpolantAutomaton=ScroogeNondeterminism, m_BouncerStem=true, m_BouncerLoop=false, m_ScroogeNondeterminismStem=true, m_ScroogeNondeterminismLoop=false, m_CannibalizeLoop=false, m_UsedDefinedMaxRank=-3]

NestedWordAutomaton nwa = (
	callAlphabet = {},
	internalAlphabet = {"assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume !#valid[read~int_#ptr.base];" "#NULL.base, #NULL.offset := 0, 0;#valid := #valid[0 := false];havoc main_#res;havoc main_#t~malloc0.base, main_#t~malloc0.offset, main_#t~malloc1.base, main_#t~malloc1.offset, main_#t~nondet5, main_#t~mem6, main_#t~nondet8, main_#t~mem10, main_#t~mem2, main_#t~mem3, main_#t~short4, main_~x~2.base, main_~x~2.offset, main_~y~2.base, main_~y~2.offset;~malloc_old_#valid, ~malloc_old_#length := #valid, #length;~malloc_~size := 4;havoc ~malloc_#res.base, ~malloc_#res.offset;havoc #valid, #length;assume ~malloc_old_#valid[~malloc_#res.base] == false;assume #valid == ~malloc_old_#valid[~malloc_#res.base := true];assume ~malloc_#res.offset == 0;assume ~malloc_#res.base != 0;assume #length == ~malloc_old_#length[~malloc_#res.base := ~malloc_~size];main_#t~malloc0.base, main_#t~malloc0.offset := ~malloc_#res.base, ~malloc_#res.offset;main_~x~2.base, main_~x~2.offset := main_#t~malloc0.base, main_#t~malloc0.offset;~malloc_old_#valid, ~malloc_old_#length := #valid, #length;~malloc_~size := 4;havoc ~malloc_#res.base, ~malloc_#res.offset;havoc #valid, #length;assume ~malloc_old_#valid[~malloc_#res.base] == false;assume #valid == ~malloc_old_#valid[~malloc_#res.base := true];assume ~malloc_#res.offset == 0;assume ~malloc_#res.base != 0;assume #length == ~malloc_old_#length[~malloc_#res.base := ~malloc_~size];main_#t~malloc1.base, main_#t~malloc1.offset := ~malloc_#res.base, ~malloc_#res.offset;main_~y~2.base, main_~y~2.offset := main_#t~malloc1.base, main_#t~malloc1.offset;" "assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem6 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem6 - 1, main_~x~2.base, main_~x~2.offset, 4;assume !#valid[write~int_#ptr.base];" "assume !true;" "assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume true;assume !(read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base]);" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem10 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem10 - 1, main_~y~2.base, main_~y~2.offset, 4;assume true;assume !(write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base]);" "~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc0.base, main_#t~malloc0.offset;assume true;assume true;assume ~free_~addr.offset == 0;assume #valid[~free_~addr.base];havoc #valid;assume #valid == ~free_old_#valid[~free_~addr.base := false];havoc main_#t~malloc0.base, main_#t~malloc0.offset;~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc1.base, main_#t~malloc1.offset;assume true;assume !#valid[~free_~addr.base];" "~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc0.base, main_#t~malloc0.offset;assume true;assume true;assume ~free_~addr.offset == 0;assume #valid[~free_~addr.base];havoc #valid;assume #valid == ~free_old_#valid[~free_~addr.base := false];havoc main_#t~malloc0.base, main_#t~malloc0.offset;~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc1.base, main_#t~malloc1.offset;assume true;assume true;assume ~free_~addr.offset == 0;assume #valid[~free_~addr.base];havoc #valid;assume #valid == ~free_old_#valid[~free_~addr.base := false];havoc main_#t~malloc1.base, main_#t~malloc1.offset;#t~ret12 := main_#res;assume true;" "~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc0.base, main_#t~malloc0.offset;assume true;assume true;assume ~free_~addr.offset == 0;assume #valid[~free_~addr.base];havoc #valid;assume #valid == ~free_old_#valid[~free_~addr.base := false];havoc main_#t~malloc0.base, main_#t~malloc0.offset;~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc1.base, main_#t~malloc1.offset;assume !(~free_~addr.offset == 0);" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem10 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem10 - 1, main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~mem10;" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume !#valid[read~int_#ptr.base];" "assume !#valid[read~int_#ptr.base];" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume !(write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base]);" "~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc0.base, main_#t~malloc0.offset;assume !(~free_~addr.offset == 0);" "~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc0.base, main_#t~malloc0.offset;assume true;assume !#valid[~free_~addr.base];" "assume main_#t~short4;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem3 := read~int_#value;main_#t~short4 := main_#t~mem3 > 0;" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem10 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem10 - 1, main_~y~2.base, main_~y~2.offset, 4;assume !#valid[write~int_#ptr.base];" "assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem2 := read~int_#value;main_#t~short4 := main_#t~mem2 > 0;" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume !(read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base]);" "assume true;" "assume !(read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base]);" "assume true;" "assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem6 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem6 - 1, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~mem6;" "assume main_#t~short4;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume !#valid[read~int_#ptr.base];" "assume main_#t~short4;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume !(read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base]);" "assume !!main_#t~short4;havoc main_#t~mem2;havoc main_#t~mem3;havoc main_#t~short4;" "assume !main_#t~short4;" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume !#valid[write~int_#ptr.base];" "assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem6 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem6 - 1, main_~x~2.base, main_~x~2.offset, 4;assume true;assume !(write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base]);" "assume !main_#t~short4;havoc main_#t~mem2;havoc main_#t~mem3;havoc main_#t~short4;" },
	returnAlphabet = {},
	states = {"1153#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))" "1130#(<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0)" "1115#unseeded" "1129#(and (<= (+ (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) 1) oldRank0) (<= 0 oldRank0))" "1142#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))" "1160#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset)))" },
	initialStates = {"1115#unseeded" },
	finalStates = {"1129#(and (<= (+ (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) 1) oldRank0) (<= 0 oldRank0))" },
	callTransitions = {
	},
	internalTransitions = {
		 ("1153#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))" "assume main_#t~short4;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem3 := read~int_#value;main_#t~short4 := main_#t~mem3 > 0;" "1160#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset)))")
		 ("1130#(<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0)" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;" "1142#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))")
		 ("1115#unseeded" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;" "1115#unseeded")
		 ("1115#unseeded" "assume true;" "1115#unseeded")
		 ("1115#unseeded" "assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem6 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem6 - 1, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~mem6;" "1115#unseeded")
		 ("1115#unseeded" "#NULL.base, #NULL.offset := 0, 0;#valid := #valid[0 := false];havoc main_#res;havoc main_#t~malloc0.base, main_#t~malloc0.offset, main_#t~malloc1.base, main_#t~malloc1.offset, main_#t~nondet5, main_#t~mem6, main_#t~nondet8, main_#t~mem10, main_#t~mem2, main_#t~mem3, main_#t~short4, main_~x~2.base, main_~x~2.offset, main_~y~2.base, main_~y~2.offset;~malloc_old_#valid, ~malloc_old_#length := #valid, #length;~malloc_~size := 4;havoc ~malloc_#res.base, ~malloc_#res.offset;havoc #valid, #length;assume ~malloc_old_#valid[~malloc_#res.base] == false;assume #valid == ~malloc_old_#valid[~malloc_#res.base := true];assume ~malloc_#res.offset == 0;assume ~malloc_#res.base != 0;assume #length == ~malloc_old_#length[~malloc_#res.base := ~malloc_~size];main_#t~malloc0.base, main_#t~malloc0.offset := ~malloc_#res.base, ~malloc_#res.offset;main_~x~2.base, main_~x~2.offset := main_#t~malloc0.base, main_#t~malloc0.offset;~malloc_old_#valid, ~malloc_old_#length := #valid, #length;~malloc_~size := 4;havoc ~malloc_#res.base, ~malloc_#res.offset;havoc #valid, #length;assume ~malloc_old_#valid[~malloc_#res.base] == false;assume #valid == ~malloc_old_#valid[~malloc_#res.base := true];assume ~malloc_#res.offset == 0;assume ~malloc_#res.base != 0;assume #length == ~malloc_old_#length[~malloc_#res.base := ~malloc_~size];main_#t~malloc1.base, main_#t~malloc1.offset := ~malloc_#res.base, ~malloc_#res.offset;main_~y~2.base, main_~y~2.offset := main_#t~malloc1.base, main_#t~malloc1.offset;" "1115#unseeded")
		 ("1115#unseeded" "assume !!main_#t~short4;havoc main_#t~mem2;havoc main_#t~mem3;havoc main_#t~short4;" "1115#unseeded")
		 ("1115#unseeded" "assume main_#t~short4;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem3 := read~int_#value;main_#t~short4 := main_#t~mem3 > 0;" "1115#unseeded")
		 ("1115#unseeded" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem10 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem10 - 1, main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~mem10;" "1115#unseeded")
		 ("1115#unseeded" "assume !(main_#t~nondet5 != 0);havoc main_#t~nondet5;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~nondet8, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~nondet8;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem10 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem10 - 1, main_~y~2.base, main_~y~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~mem10;" "1129#(and (<= (+ (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) 1) oldRank0) (<= 0 oldRank0))")
		 ("1115#unseeded" "assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem2 := read~int_#value;main_#t~short4 := main_#t~mem2 > 0;" "1115#unseeded")
		 ("1115#unseeded" "assume true;" "1115#unseeded")
		 ("1129#(and (<= (+ (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) 1) oldRank0) (<= 0 oldRank0))" "assume true;" "1130#(<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0)")
		 ("1160#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset)))" "assume main_#t~nondet5 != 0;havoc main_#t~nondet5;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem6 := read~int_#value;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := main_#t~mem6 - 1, main_~x~2.base, main_~x~2.offset, 4;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc main_#t~mem6;" "1129#(and (<= (+ (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) 1) oldRank0) (<= 0 oldRank0))")
		 ("1160#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset)))" "assume !!main_#t~short4;havoc main_#t~mem2;havoc main_#t~mem3;havoc main_#t~short4;" "1160#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset)))")
		 ("1142#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))" "assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];main_#t~mem2 := read~int_#value;main_#t~short4 := main_#t~mem2 > 0;" "1153#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (or (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) |ULTIMATE.start_main_#t~short4| (<= 1 (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset))) (and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (not |ULTIMATE.start_main_#t~short4|))) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))")
		 ("1142#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))" "assume true;" "1142#(and (<= (select (select |#memory_int| ULTIMATE.start_main_~x~2.base) ULTIMATE.start_main_~x~2.offset) oldRank0) (= |ULTIMATE.start_read~int_#ptr.offset| ULTIMATE.start_main_~x~2.offset) (= |ULTIMATE.start_read~int_#ptr.base| ULTIMATE.start_main_~x~2.base))")
	},
	returnTransitions = {
	}
);
