// Testfile dumped by Ultimate at 2015/10/05 12:40:17
//
// RefinementSetting [m_InterpolantAutomaton=ScroogeNondeterminism, m_BouncerStem=true, m_BouncerLoop=false, m_ScroogeNondeterminismStem=true, m_ScroogeNondeterminismLoop=false, m_CannibalizeLoop=false, m_UsedDefinedMaxRank=-3]

NestedWordAutomaton nwa = (
	callAlphabet = {},
	internalAlphabet = {"assume true;assume !!(sumOfThirdBytes_~i~2 < sumOfThirdBytes_~array_size);sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset := sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset + sumOfThirdBytes_~i~2 * 4;sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset + 2;" "sumOfThirdBytes_#res := sumOfThirdBytes_~sum~2;main_#t~ret7 := sumOfThirdBytes_#res;main_#res := main_#t~ret7;havoc main_#t~ret7;~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc6.base, main_#t~malloc6.offset;assume !(~free_~addr.offset == 0);" "assume !true;" "~malloc_old_#valid, ~malloc_old_#length := #valid, #length;~malloc_~size := main_~array_size~5 * 4;havoc ~malloc_#res.base, ~malloc_#res.offset;havoc #valid, #length;assume ~malloc_old_#valid[~malloc_#res.base] == false;assume #valid == ~malloc_old_#valid[~malloc_#res.base := true];assume ~malloc_#res.offset == 0;assume ~malloc_#res.base != 0;assume #length == ~malloc_old_#length[~malloc_#res.base := ~malloc_~size];main_#t~malloc6.base, main_#t~malloc6.offset := ~malloc_#res.base, ~malloc_#res.offset;main_~numbers~5.base, main_~numbers~5.offset := main_#t~malloc6.base, main_#t~malloc6.offset;sumOfThirdBytes_#in~numbers.base, sumOfThirdBytes_#in~numbers.offset, sumOfThirdBytes_#in~array_size := main_~numbers~5.base, main_~numbers~5.offset, main_~array_size~5;havoc sumOfThirdBytes_#res;havoc sumOfThirdBytes_#t~post2, sumOfThirdBytes_#t~mem3, sumOfThirdBytes_#t~post4, sumOfThirdBytes_#t~mem1, sumOfThirdBytes_#t~post0, sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset, sumOfThirdBytes_~array_size, sumOfThirdBytes_~i~2, sumOfThirdBytes_~sum~2, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset;sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset := sumOfThirdBytes_#in~numbers.base, sumOfThirdBytes_#in~numbers.offset;sumOfThirdBytes_~array_size := sumOfThirdBytes_#in~array_size;havoc sumOfThirdBytes_~i~2;havoc sumOfThirdBytes_~sum~2;havoc sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset;sumOfThirdBytes_~sum~2 := 0;sumOfThirdBytes_~i~2 := 0;" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem3 := read~int_#value;sumOfThirdBytes_#t~post4 := sumOfThirdBytes_#t~mem3;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := sumOfThirdBytes_#t~post4 - 1, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume !#valid[write~int_#ptr.base];" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem3 := read~int_#value;sumOfThirdBytes_#t~post4 := sumOfThirdBytes_#t~mem3;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := sumOfThirdBytes_#t~post4 - 1, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc sumOfThirdBytes_#t~mem3;havoc sumOfThirdBytes_#t~post4;" "sumOfThirdBytes_#res := sumOfThirdBytes_~sum~2;main_#t~ret7 := sumOfThirdBytes_#res;main_#res := main_#t~ret7;havoc main_#t~ret7;~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc6.base, main_#t~malloc6.offset;assume true;assume true;assume ~free_~addr.offset == 0;assume #valid[~free_~addr.base];havoc #valid;assume #valid == ~free_old_#valid[~free_~addr.base := false];havoc main_#t~malloc6.base, main_#t~malloc6.offset;#t~ret8 := main_#res;assume true;" "sumOfThirdBytes_#res := sumOfThirdBytes_~sum~2;main_#t~ret7 := sumOfThirdBytes_#res;main_#res := main_#t~ret7;havoc main_#t~ret7;~free_old_#valid := #valid;~free_~addr.base, ~free_~addr.offset := main_#t~malloc6.base, main_#t~malloc6.offset;assume true;assume !#valid[~free_~addr.base];" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume !(read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base]);" "assume !true;" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;" "assume main_~array_size~5 < 1;main_~array_size~5 := 1;" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume !#valid[read~int_#ptr.base];" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume !(read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base]);" "assume !(main_~array_size~5 < 1);" "assume true;assume !(sumOfThirdBytes_~i~2 < sumOfThirdBytes_~array_size);" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem3 := read~int_#value;sumOfThirdBytes_#t~post4 := sumOfThirdBytes_#t~mem3;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := sumOfThirdBytes_#t~post4 - 1, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume !(write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base]);" "#NULL.base, #NULL.offset := 0, 0;#valid := #valid[0 := false];havoc main_#res;havoc main_#t~nondet5, main_#t~malloc6.base, main_#t~malloc6.offset, main_#t~ret7, main_~array_size~5, main_~numbers~5.base, main_~numbers~5.offset;main_~array_size~5 := main_#t~nondet5;havoc main_#t~nondet5;" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume !#valid[read~int_#ptr.base];" "sumOfThirdBytes_#t~post0 := sumOfThirdBytes_~i~2;sumOfThirdBytes_~i~2 := sumOfThirdBytes_#t~post0 + 1;havoc sumOfThirdBytes_#t~post0;" },
	returnAlphabet = {},
	states = {"512#(and (<= 0 oldRank0) (<= (+ (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) 1) oldRank0))" "513#(<= (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) oldRank0)" "506#unseeded" },
	initialStates = {"506#unseeded" },
	finalStates = {"512#(and (<= 0 oldRank0) (<= (+ (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) 1) oldRank0))" },
	callTransitions = {
	},
	internalTransitions = {
		 ("512#(and (<= 0 oldRank0) (<= (+ (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) 1) oldRank0))" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;" "513#(<= (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) oldRank0)")
		 ("512#(and (<= 0 oldRank0) (<= (+ (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) 1) oldRank0))" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem3 := read~int_#value;sumOfThirdBytes_#t~post4 := sumOfThirdBytes_#t~mem3;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := sumOfThirdBytes_#t~post4 - 1, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc sumOfThirdBytes_#t~mem3;havoc sumOfThirdBytes_#t~post4;" "512#(and (<= 0 oldRank0) (<= (+ (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) 1) oldRank0))")
		 ("513#(<= (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) oldRank0)" "sumOfThirdBytes_#t~post0 := sumOfThirdBytes_~i~2;sumOfThirdBytes_~i~2 := sumOfThirdBytes_#t~post0 + 1;havoc sumOfThirdBytes_#t~post0;" "513#(<= (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) oldRank0)")
		 ("506#unseeded" "assume true;assume !!(sumOfThirdBytes_~i~2 < sumOfThirdBytes_~array_size);sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset := sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset + sumOfThirdBytes_~i~2 * 4;sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset + 2;" "512#(and (<= 0 oldRank0) (<= (+ (select (select |#memory_int| ULTIMATE.start_sumOfThirdBytes_~p~2.base) ULTIMATE.start_sumOfThirdBytes_~p~2.offset) 1) oldRank0))")
		 ("506#unseeded" "assume true;assume !!(sumOfThirdBytes_~i~2 < sumOfThirdBytes_~array_size);sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset := sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset + sumOfThirdBytes_~i~2 * 4;sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset + 2;" "506#unseeded")
		 ("506#unseeded" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;" "506#unseeded")
		 ("506#unseeded" "assume main_~array_size~5 < 1;main_~array_size~5 := 1;" "506#unseeded")
		 ("506#unseeded" "~malloc_old_#valid, ~malloc_old_#length := #valid, #length;~malloc_~size := main_~array_size~5 * 4;havoc ~malloc_#res.base, ~malloc_#res.offset;havoc #valid, #length;assume ~malloc_old_#valid[~malloc_#res.base] == false;assume #valid == ~malloc_old_#valid[~malloc_#res.base := true];assume ~malloc_#res.offset == 0;assume ~malloc_#res.base != 0;assume #length == ~malloc_old_#length[~malloc_#res.base := ~malloc_~size];main_#t~malloc6.base, main_#t~malloc6.offset := ~malloc_#res.base, ~malloc_#res.offset;main_~numbers~5.base, main_~numbers~5.offset := main_#t~malloc6.base, main_#t~malloc6.offset;sumOfThirdBytes_#in~numbers.base, sumOfThirdBytes_#in~numbers.offset, sumOfThirdBytes_#in~array_size := main_~numbers~5.base, main_~numbers~5.offset, main_~array_size~5;havoc sumOfThirdBytes_#res;havoc sumOfThirdBytes_#t~post2, sumOfThirdBytes_#t~mem3, sumOfThirdBytes_#t~post4, sumOfThirdBytes_#t~mem1, sumOfThirdBytes_#t~post0, sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset, sumOfThirdBytes_~array_size, sumOfThirdBytes_~i~2, sumOfThirdBytes_~sum~2, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset;sumOfThirdBytes_~#numbers.base, sumOfThirdBytes_~#numbers.offset := sumOfThirdBytes_#in~numbers.base, sumOfThirdBytes_#in~numbers.offset;sumOfThirdBytes_~array_size := sumOfThirdBytes_#in~array_size;havoc sumOfThirdBytes_~i~2;havoc sumOfThirdBytes_~sum~2;havoc sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset;sumOfThirdBytes_~sum~2 := 0;sumOfThirdBytes_~i~2 := 0;" "506#unseeded")
		 ("506#unseeded" "assume true;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem1 := read~int_#value;assume !!(sumOfThirdBytes_#t~mem1 > 0);havoc sumOfThirdBytes_#t~mem1;sumOfThirdBytes_#t~post2 := sumOfThirdBytes_~sum~2;sumOfThirdBytes_~sum~2 := sumOfThirdBytes_#t~post2 + 1;havoc sumOfThirdBytes_#t~post2;read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[read~int_#ptr.base];assume read~int_#sizeOfReadType + read~int_#ptr.offset <= #length[read~int_#ptr.base];havoc read~int_#value;assume read~int_#value == #memory_int[read~int_#ptr.base,read~int_#ptr.offset];sumOfThirdBytes_#t~mem3 := read~int_#value;sumOfThirdBytes_#t~post4 := sumOfThirdBytes_#t~mem3;write~int_old_#memory_int := #memory_int;write~int_#value, write~int_#ptr.base, write~int_#ptr.offset, write~int_#sizeOfWrittenType := sumOfThirdBytes_#t~post4 - 1, sumOfThirdBytes_~p~2.base, sumOfThirdBytes_~p~2.offset, 1;assume true;assume true;assume #valid[write~int_#ptr.base];assume write~int_#sizeOfWrittenType + write~int_#ptr.offset <= #length[write~int_#ptr.base];havoc #memory_int;assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base,write~int_#ptr.offset := write~int_#value];havoc sumOfThirdBytes_#t~mem3;havoc sumOfThirdBytes_#t~post4;" "506#unseeded")
		 ("506#unseeded" "assume !(main_~array_size~5 < 1);" "506#unseeded")
		 ("506#unseeded" "#NULL.base, #NULL.offset := 0, 0;#valid := #valid[0 := false];havoc main_#res;havoc main_#t~nondet5, main_#t~malloc6.base, main_#t~malloc6.offset, main_#t~ret7, main_~array_size~5, main_~numbers~5.base, main_~numbers~5.offset;main_~array_size~5 := main_#t~nondet5;havoc main_#t~nondet5;" "506#unseeded")
		 ("506#unseeded" "sumOfThirdBytes_#t~post0 := sumOfThirdBytes_~i~2;sumOfThirdBytes_~i~2 := sumOfThirdBytes_#t~post0 + 1;havoc sumOfThirdBytes_#t~post0;" "506#unseeded")
	},
	returnTransitions = {
	}
);
