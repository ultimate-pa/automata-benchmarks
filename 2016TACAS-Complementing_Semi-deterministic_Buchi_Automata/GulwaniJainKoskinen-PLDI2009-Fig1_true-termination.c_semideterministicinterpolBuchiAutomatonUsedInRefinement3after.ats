// Testfile dumped by Ultimate at 2015/10/05 03:49:10
//
// RefinementSetting [m_InterpolantAutomaton=ScroogeNondeterminism, m_BouncerStem=true, m_BouncerLoop=false, m_ScroogeNondeterminismStem=true, m_ScroogeNondeterminismLoop=false, m_CannibalizeLoop=false, m_UsedDefinedMaxRank=-3]

NestedWordAutomaton nwa = (
	callAlphabet = {},
	internalAlphabet = {"assume main_~tmp~3 <= main_~maxId~2;main_~tmp~3 := main_~tmp~3 + 1;" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_~tmp~3, main_~id~2, main_~maxId~2;main_~id~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~maxId~2 := main_#t~nondet1;havoc main_#t~nondet1;assume !(0 <= main_~id~2 && main_~id~2 < main_~maxId~2);" "assume true;" "assume !(main_~tmp~3 <= main_~maxId~2);main_~tmp~3 := 0;" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_~tmp~3, main_~id~2, main_~maxId~2;main_~id~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~maxId~2 := main_#t~nondet1;havoc main_#t~nondet1;assume 0 <= main_~id~2 && main_~id~2 < main_~maxId~2;main_~tmp~3 := main_~id~2 + 1;" "main_#res := 0;#t~ret3 := main_#res;assume true;" "assume !(main_~tmp~3 != main_~id~2 && main_#t~nondet2 != 0);havoc main_#t~nondet2;" "assume true;" "assume !true;" "assume !!(main_~tmp~3 != main_~id~2 && main_#t~nondet2 != 0);havoc main_#t~nondet2;" "assume true;" },
	returnAlphabet = {},
	states = {"577#(and (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 2) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0)))" "578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))" "564#unseeded" },
	initialStates = {"564#unseeded" },
	finalStates = {"577#(and (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 2) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0)))" },
	callTransitions = {
	},
	internalTransitions = {
		 ("577#(and (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 2) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0)))" "assume true;" "578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))")
		 ("578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))" "assume main_~tmp~3 <= main_~maxId~2;main_~tmp~3 := main_~tmp~3 + 1;" "577#(and (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 2) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0)))")
		 ("578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))" "assume !!(main_~tmp~3 != main_~id~2 && main_#t~nondet2 != 0);havoc main_#t~nondet2;" "578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))")
		 ("578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))" "assume true;" "578#(<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 1) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0))")
		 ("564#unseeded" "assume main_~tmp~3 <= main_~maxId~2;main_~tmp~3 := main_~tmp~3 + 1;" "564#unseeded")
		 ("564#unseeded" "assume true;" "564#unseeded")
		 ("564#unseeded" "assume !(main_~tmp~3 <= main_~maxId~2);main_~tmp~3 := 0;" "577#(and (<= 0 oldRank0) (<= (+ (* 2 ULTIMATE.start_main_~maxId~2) 2) (+ (* 2 ULTIMATE.start_main_~tmp~3) oldRank0)))")
		 ("564#unseeded" "assume !(main_~tmp~3 <= main_~maxId~2);main_~tmp~3 := 0;" "564#unseeded")
		 ("564#unseeded" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~nondet2, main_~tmp~3, main_~id~2, main_~maxId~2;main_~id~2 := main_#t~nondet0;havoc main_#t~nondet0;main_~maxId~2 := main_#t~nondet1;havoc main_#t~nondet1;assume 0 <= main_~id~2 && main_~id~2 < main_~maxId~2;main_~tmp~3 := main_~id~2 + 1;" "564#unseeded")
		 ("564#unseeded" "assume !!(main_~tmp~3 != main_~id~2 && main_#t~nondet2 != 0);havoc main_#t~nondet2;" "564#unseeded")
		 ("564#unseeded" "assume true;" "564#unseeded")
	},
	returnTransitions = {
	}
);
