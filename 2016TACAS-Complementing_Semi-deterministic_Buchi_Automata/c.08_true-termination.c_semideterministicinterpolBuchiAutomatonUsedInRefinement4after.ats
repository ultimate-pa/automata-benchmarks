// Testfile dumped by Ultimate at 2015/10/05 13:12:11
//
// RefinementSetting [m_InterpolantAutomaton=ScroogeNondeterminism, m_BouncerStem=true, m_BouncerLoop=false, m_ScroogeNondeterminismStem=true, m_ScroogeNondeterminismLoop=false, m_CannibalizeLoop=false, m_UsedDefinedMaxRank=-3]

NestedWordAutomaton nwa = (
	callAlphabet = {},
	internalAlphabet = {"havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~ret2;test_fun_#in~i, test_fun_#in~j := main_#t~nondet0, main_#t~nondet1;havoc test_fun_#res;havoc test_fun_~i, test_fun_~j, test_fun_~c~2;test_fun_~i := test_fun_#in~i;test_fun_~j := test_fun_#in~j;test_fun_~c~2 := 0;" "assume true;assume !(test_fun_~i >= 0);" "assume true;assume !!(test_fun_~i >= 0);test_fun_~j := 0;" "test_fun_#res := test_fun_~c~2;main_#t~ret2 := test_fun_#res;main_#res := main_#t~ret2;havoc main_#t~nondet0;havoc main_#t~nondet1;havoc main_#t~ret2;#t~ret3 := main_#res;assume true;" "assume !true;" "assume true;assume !!(test_fun_~j <= test_fun_~i - 1);test_fun_~j := test_fun_~j + 1;test_fun_~c~2 := test_fun_~c~2 + 1;" "assume !true;" "test_fun_~i := test_fun_~i - 1;" "assume true;assume !(test_fun_~j <= test_fun_~i - 1);" },
	returnAlphabet = {},
	states = {"291#unseeded" "295#(and (<= 0 oldRank0) (<= (+ ULTIMATE.start_test_fun_~i 1) (+ ULTIMATE.start_test_fun_~j oldRank0)))" "296#(<= ULTIMATE.start_test_fun_~i (+ ULTIMATE.start_test_fun_~j oldRank0))" },
	initialStates = {"291#unseeded" },
	finalStates = {"295#(and (<= 0 oldRank0) (<= (+ ULTIMATE.start_test_fun_~i 1) (+ ULTIMATE.start_test_fun_~j oldRank0)))" },
	callTransitions = {
	},
	internalTransitions = {
		 ("291#unseeded" "havoc main_#res;havoc main_#t~nondet0, main_#t~nondet1, main_#t~ret2;test_fun_#in~i, test_fun_#in~j := main_#t~nondet0, main_#t~nondet1;havoc test_fun_#res;havoc test_fun_~i, test_fun_~j, test_fun_~c~2;test_fun_~i := test_fun_#in~i;test_fun_~j := test_fun_#in~j;test_fun_~c~2 := 0;" "291#unseeded")
		 ("291#unseeded" "assume true;assume !!(test_fun_~i >= 0);test_fun_~j := 0;" "291#unseeded")
		 ("291#unseeded" "assume true;assume !!(test_fun_~i >= 0);test_fun_~j := 0;" "295#(and (<= 0 oldRank0) (<= (+ ULTIMATE.start_test_fun_~i 1) (+ ULTIMATE.start_test_fun_~j oldRank0)))")
		 ("291#unseeded" "assume true;assume !!(test_fun_~j <= test_fun_~i - 1);test_fun_~j := test_fun_~j + 1;test_fun_~c~2 := test_fun_~c~2 + 1;" "291#unseeded")
		 ("291#unseeded" "test_fun_~i := test_fun_~i - 1;" "291#unseeded")
		 ("291#unseeded" "assume true;assume !(test_fun_~j <= test_fun_~i - 1);" "291#unseeded")
		 ("295#(and (<= 0 oldRank0) (<= (+ ULTIMATE.start_test_fun_~i 1) (+ ULTIMATE.start_test_fun_~j oldRank0)))" "assume true;assume !!(test_fun_~j <= test_fun_~i - 1);test_fun_~j := test_fun_~j + 1;test_fun_~c~2 := test_fun_~c~2 + 1;" "295#(and (<= 0 oldRank0) (<= (+ ULTIMATE.start_test_fun_~i 1) (+ ULTIMATE.start_test_fun_~j oldRank0)))")
		 ("295#(and (<= 0 oldRank0) (<= (+ ULTIMATE.start_test_fun_~i 1) (+ ULTIMATE.start_test_fun_~j oldRank0)))" "assume true;assume !(test_fun_~j <= test_fun_~i - 1);" "296#(<= ULTIMATE.start_test_fun_~i (+ ULTIMATE.start_test_fun_~j oldRank0))")
		 ("296#(<= ULTIMATE.start_test_fun_~i (+ ULTIMATE.start_test_fun_~j oldRank0))" "test_fun_~i := test_fun_~i - 1;" "296#(<= ULTIMATE.start_test_fun_~i (+ ULTIMATE.start_test_fun_~j oldRank0))")
	},
	returnTransitions = {
	}
);
