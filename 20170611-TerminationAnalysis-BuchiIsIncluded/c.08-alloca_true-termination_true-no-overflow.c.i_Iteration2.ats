// Testfile dumped by Ultimate at 2017/06/12 01:37:21
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 },
	initialStates = {s18 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 },
	transitions = {
		(s0 a21 s1)
		(s1 a5 s10)
		(s2 a10 s3)
		(s3 a11 s4)
		(s4 a12 s9)
		(s5 a15 s6)
		(s6 a16 s11)
		(s7 a1 s8)
		(s8 a2 s15)
		(s9 a13 s14)
		(s9 a14 s5)
		(s10 a6 s12)
		(s11 a17 s2)
		(s12 a8 s13)
		(s13 a9 s2)
		(s14 a19 s17)
		(s15 a3 s16)
		(s16 a4 s1)
		(s17 a20 s0)
		(s18 a0 s7)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:24
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 },
	initialStates = {s26 },
	finalStates = {s0 s9 s18 s22 s30 s32 s40 },
	transitions = {
		(s0 a10 s3)
		(s1 a6 s20)
		(s2 a20 s5)
		(s3 a11 s4)
		(s3 a15 s3)
		(s4 a12 s24)
		(s5 a21 s5)
		(s5 a5 s5)
		(s5 a6 s16)
		(s6 a10 s6)
		(s6 a11 s10)
		(s6 a15 s6)
		(s8 a12 s25)
		(s9 a20 s5)
		(s10 a12 s27)
		(s11 a8 s15)
		(s12 a12 s29)
		(s14 a20 s5)
		(s15 a9 s19)
		(s16 a8 s32)
		(s17 a20 s30)
		(s18 a8 s15)
		(s19 a10 s19)
		(s19 a11 s8)
		(s19 a15 s19)
		(s20 a8 s31)
		(s21 a8 s33)
		(s22 a13 s28)
		(s22 a14 s28)
		(s23 a13 s28)
		(s23 a14 s28)
		(s24 a13 s39)
		(s24 a14 s3)
		(s25 a13 s35)
		(s25 a14 s19)
		(s26 a0 s26)
		(s26 a0 s30)
		(s26 a17 s26)
		(s26 a17 s30)
		(s26 a1 s26)
		(s26 a1 s30)
		(s26 a2 s26)
		(s26 a2 s30)
		(s26 a3 s26)
		(s26 a3 s30)
		(s26 a19 s26)
		(s26 a19 s9)
		(s26 a4 s26)
		(s26 a4 s40)
		(s26 a20 s26)
		(s26 a20 s30)
		(s26 a21 s26)
		(s26 a21 s30)
		(s26 a5 s26)
		(s26 a5 s30)
		(s26 a6 s26)
		(s26 a6 s18)
		(s26 a8 s26)
		(s26 a8 s30)
		(s26 a9 s0)
		(s26 a9 s26)
		(s26 a10 s26)
		(s26 a10 s30)
		(s26 a11 s26)
		(s26 a11 s30)
		(s26 a12 s26)
		(s26 a12 s22)
		(s26 a13 s26)
		(s26 a13 s30)
		(s26 a14 s26)
		(s26 a14 s30)
		(s26 a15 s26)
		(s26 a15 s30)
		(s26 a16 s26)
		(s26 a16 s30)
		(s27 a13 s36)
		(s27 a14 s6)
		(s28 a19 s2)
		(s28 a10 s28)
		(s28 a11 s28)
		(s28 a12 s23)
		(s28 a5 s28)
		(s28 a6 s11)
		(s28 a15 s28)
		(s29 a13 s37)
		(s29 a14 s34)
		(s30 a17 s28)
		(s30 a9 s34)
		(s30 a19 s2)
		(s30 a4 s38)
		(s30 a10 s28)
		(s30 a21 s28)
		(s30 a11 s28)
		(s30 a12 s23)
		(s30 a5 s28)
		(s30 a6 s11)
		(s30 a15 s28)
		(s31 a9 s19)
		(s32 a9 s19)
		(s33 a9 s6)
		(s34 a10 s34)
		(s34 a11 s12)
		(s34 a15 s34)
		(s35 a19 s17)
		(s36 a19 s7)
		(s37 a19 s13)
		(s38 a5 s38)
		(s38 a6 s21)
		(s39 a19 s14)
		(s40 a5 s1)
	}
);
