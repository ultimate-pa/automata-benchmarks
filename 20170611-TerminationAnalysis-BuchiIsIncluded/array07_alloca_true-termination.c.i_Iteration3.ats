// Testfile dumped by Ultimate at 2017/06/11 22:57:57
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s6 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s13 s15 s17 s18 s19 },
	transitions = {
		(s0 a6 s15)
		(s1 a21 s2)
		(s2 a15 s7)
		(s3 a18 s4)
		(s4 a19 s5)
		(s5 a20 s1)
		(s6 a0 s17)
		(s7 a17 s3)
		(s8 a8 s9)
		(s9 a14 s2)
		(s10 a9 s11)
		(s11 a10 s16)
		(s12 a12 s13)
		(s12 a12 s14)
		(s13 a7 s8)
		(s14 a7 s10)
		(s15 a7 s10)
		(s16 a11 s12)
		(s17 a1 s18)
		(s18 a2 s19)
		(s18 a3 s19)
		(s19 a4 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 22:58:19
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 },
	initialStates = {s21 },
	finalStates = {s1 s11 s28 s33 s41 s47 s49 s52 },
	transitions = {
		(s0 a15 s0)
		(s0 a17 s38)
		(s1 a21 s46)
		(s2 a15 s2)
		(s2 a17 s37)
		(s3 a15 s3)
		(s3 a17 s39)
		(s4 a21 s51)
		(s5 a21 s0)
		(s6 a18 s8)
		(s7 a21 s45)
		(s8 a19 s20)
		(s9 a21 s49)
		(s10 a2 s10)
		(s10 a3 s10)
		(s10 a4 s34)
		(s11 a19 s19)
		(s12 a19 s22)
		(s13 a19 s25)
		(s14 a20 s5)
		(s15 a20 s4)
		(s16 a20 s9)
		(s17 a21 s18)
		(s18 a15 s18)
		(s18 a17 s47)
		(s19 a20 s17)
		(s20 a20 s9)
		(s21 a0 s28)
		(s21 a0 s21)
		(s21 a1 s28)
		(s21 a1 s21)
		(s21 a2 s28)
		(s21 a2 s21)
		(s21 a3 s28)
		(s21 a3 s21)
		(s21 a4 s31)
		(s21 a4 s41)
		(s22 a20 s4)
		(s23 a19 s14)
		(s24 a19 s15)
		(s25 a20 s5)
		(s26 a4 s36)
		(s27 a19 s16)
		(s28 a1 s10)
		(s28 a2 s30)
		(s28 a3 s26)
		(s28 a4 s36)
		(s29 a7 s29)
		(s29 a8 s29)
		(s29 a9 s29)
		(s29 a10 s29)
		(s29 a11 s29)
		(s29 a12 s29)
		(s29 a14 s3)
		(s30 a4 s34)
		(s31 a15 s31)
		(s31 a15 s52)
		(s31 a17 s31)
		(s31 a17 s33)
		(s31 a18 s31)
		(s31 a18 s11)
		(s31 a19 s31)
		(s31 a19 s52)
		(s31 a20 s31)
		(s31 a20 s1)
		(s31 a21 s31)
		(s31 a21 s52)
		(s31 a6 s31)
		(s31 a6 s52)
		(s31 a7 s31)
		(s31 a7 s52)
		(s31 a8 s31)
		(s31 a8 s52)
		(s31 a9 s31)
		(s31 a9 s52)
		(s31 a10 s31)
		(s31 a10 s52)
		(s31 a11 s31)
		(s31 a11 s52)
		(s31 a12 s31)
		(s31 a12 s52)
		(s31 a14 s31)
		(s31 a14 s52)
		(s32 a7 s32)
		(s32 a8 s32)
		(s32 a9 s32)
		(s32 a10 s29)
		(s32 a17 s6)
		(s32 a12 s32)
		(s32 a14 s2)
		(s33 a18 s8)
		(s34 a7 s34)
		(s34 a15 s34)
		(s34 a8 s34)
		(s34 a9 s34)
		(s34 a10 s34)
		(s34 a11 s34)
		(s34 a17 s35)
		(s34 a12 s34)
		(s34 a6 s34)
		(s34 a14 s34)
		(s35 a18 s12)
		(s36 a7 s36)
		(s36 a8 s36)
		(s36 a9 s36)
		(s36 a10 s36)
		(s36 a11 s36)
		(s36 a12 s36)
		(s36 a6 s36)
		(s36 a14 s34)
		(s37 a18 s13)
		(s38 a18 s23)
		(s39 a18 s12)
		(s40 a18 s24)
		(s41 a6 s43)
		(s42 a18 s27)
		(s43 a7 s43)
		(s43 a9 s43)
		(s43 a10 s36)
		(s44 a18 s8)
		(s45 a15 s45)
		(s45 a17 s40)
		(s46 a15 s46)
		(s46 a17 s42)
		(s47 a18 s8)
		(s48 a18 s12)
		(s49 a15 s50)
		(s50 a17 s44)
		(s51 a15 s51)
		(s51 a17 s48)
		(s52 a7 s32)
		(s52 a15 s32)
		(s52 a8 s32)
		(s52 a9 s32)
		(s52 a10 s29)
		(s52 a11 s32)
		(s52 a17 s6)
		(s52 a12 s32)
		(s52 a20 s7)
		(s52 a14 s2)
	}
);
