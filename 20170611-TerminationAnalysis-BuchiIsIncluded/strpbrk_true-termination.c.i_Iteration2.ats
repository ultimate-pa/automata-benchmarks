// Testfile dumped by Ultimate at 2017/06/12 01:02:39
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 },
	initialStates = {s18 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 },
	transitions = {
		(s0 a14 s1)
		(s1 a15 s6)
		(s2 a1 s3)
		(s3 a3 s15)
		(s4 a7 s5)
		(s5 a8 s13)
		(s6 a16 s14)
		(s6 a17 s11)
		(s7 a10 s8)
		(s8 a11 s17)
		(s9 a21 s10)
		(s10 a22 s0)
		(s11 a18 s12)
		(s12 a19 s9)
		(s13 a9 s7)
		(s14 a24 s7)
		(s15 a4 s16)
		(s16 a5 s4)
		(s17 a13 s0)
		(s18 a0 s2)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:02:40
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 },
	initialStates = {s0 },
	finalStates = {s3 s6 s10 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s6)
		(s0 a1 s0)
		(s0 a1 s6)
		(s0 a3 s1)
		(s0 a3 s6)
		(s1 a16 s1)
		(s1 a16 s6)
		(s1 a17 s1)
		(s1 a17 s6)
		(s1 a18 s1)
		(s1 a18 s3)
		(s1 a19 s1)
		(s1 a19 s6)
		(s1 a4 s1)
		(s1 a4 s6)
		(s1 a5 s1)
		(s1 a5 s6)
		(s1 a21 s1)
		(s1 a21 s6)
		(s1 a22 s1)
		(s1 a22 s6)
		(s1 a7 s1)
		(s1 a7 s6)
		(s1 a8 s1)
		(s1 a8 s6)
		(s1 a9 s1)
		(s1 a9 s10)
		(s1 a24 s1)
		(s1 a24 s6)
		(s1 a10 s1)
		(s1 a10 s6)
		(s1 a11 s1)
		(s1 a11 s3)
		(s1 a13 s1)
		(s1 a13 s6)
		(s1 a14 s1)
		(s1 a14 s6)
		(s1 a15 s1)
		(s1 a15 s6)
		(s2 a24 s9)
		(s2 a16 s2)
		(s2 a17 s2)
		(s2 a18 s7)
		(s2 a11 s7)
		(s2 a5 s2)
		(s2 a22 s2)
		(s2 a14 s2)
		(s2 a15 s2)
		(s3 a19 s7)
		(s3 a13 s7)
		(s4 a24 s9)
		(s4 a16 s4)
		(s4 a17 s4)
		(s4 a18 s4)
		(s4 a19 s4)
		(s4 a13 s4)
		(s4 a21 s4)
		(s4 a22 s4)
		(s4 a14 s4)
		(s4 a15 s4)
		(s5 a11 s8)
		(s6 a16 s2)
		(s6 a17 s2)
		(s6 a18 s7)
		(s6 a4 s2)
		(s6 a5 s2)
		(s6 a21 s2)
		(s6 a22 s2)
		(s6 a8 s2)
		(s6 a24 s9)
		(s6 a10 s2)
		(s6 a11 s7)
		(s6 a14 s2)
		(s6 a15 s2)
		(s7 a24 s9)
		(s7 a16 s7)
		(s7 a17 s7)
		(s7 a18 s7)
		(s7 a19 s7)
		(s7 a13 s7)
		(s7 a21 s7)
		(s7 a22 s7)
		(s7 a14 s7)
		(s7 a15 s7)
		(s8 a24 s10)
		(s8 a16 s8)
		(s8 a17 s8)
		(s8 a18 s8)
		(s8 a19 s8)
		(s8 a13 s8)
		(s8 a21 s8)
		(s8 a22 s8)
		(s8 a14 s8)
		(s8 a15 s8)
		(s9 a10 s9)
		(s9 a11 s4)
		(s10 a10 s5)
	}
);
