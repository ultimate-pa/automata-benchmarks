// Testfile dumped by Ultimate at 2017/06/11 23:28:58
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 s107 s108 s109 s110 s111 s112 s113 s114 s115 s116 s117 s118 s119 s120 s121 s122 s123 s124 s125 s126 s127 s128 s129 s130 s131 s132 s133 s134 s135 s136 s137 s138 s139 s140 s141 s142 s143 s144 s145 s146 s147 s148 s149 s150 s151 s152 s153 s154 s155 s156 s157 s158 s159 s160 s161 s162 s163 s164 s165 s166 s167 s168 s169 },
	initialStates = {s13 },
	finalStates = {s0 s1 s4 s7 s13 s15 s16 s26 s33 s68 s69 s142 },
	transitions = {
		(s0 a5 s1)
		(s1 a10 s15)
		(s2 a5 s3)
		(s3 a10 s9)
		(s4 a2 s0)
		(s5 a0 s6)
		(s6 a5 s79)
		(s6 a5 s168)
		(s7 a10 s8)
		(s8 a2 s2)
		(s9 a0 s83)
		(s10 a3 s12)
		(s10 a3 s11)
		(s11 a5 s93)
		(s12 a5 s96)
		(s13 a1 s14)
		(s13 a1 s10)
		(s14 a3 s42)
		(s14 a3 s43)
		(s15 a0 s16)
		(s16 a5 s69)
		(s17 a0 s16)
		(s17 a0 s18)
		(s18 a5 s34)
		(s18 a5 s35)
		(s19 a2 s0)
		(s19 a2 s20)
		(s20 a5 s21)
		(s21 a10 s17)
		(s22 a10 s19)
		(s23 a5 s24)
		(s23 a5 s25)
		(s23 a5 s26)
		(s23 a5 s27)
		(s24 a10 s88)
		(s25 a10 s19)
		(s25 a10 s4)
		(s26 a10 s4)
		(s27 a10 s103)
		(s28 a0 s29)
		(s28 a0 s30)
		(s29 a5 s36)
		(s29 a5 s38)
		(s29 a5 s25)
		(s29 a5 s26)
		(s30 a5 s140)
		(s30 a5 s144)
		(s30 a5 s134)
		(s31 a0 s32)
		(s31 a0 s33)
		(s32 a5 s36)
		(s32 a5 s38)
		(s32 a5 s22)
		(s33 a5 s26)
		(s34 a10 s31)
		(s35 a10 s44)
		(s36 a10 s28)
		(s37 a5 s36)
		(s37 a5 s38)
		(s38 a10 s45)
		(s39 a0 s23)
		(s39 a0 s40)
		(s40 a5 s140)
		(s41 a10 s39)
		(s42 a5 s41)
		(s42 a5 s27)
		(s43 a5 s65)
		(s43 a5 s27)
		(s44 a0 s37)
		(s45 a0 s82)
		(s45 a0 s37)
		(s46 a5 s47)
		(s46 a5 s35)
		(s47 a10 s48)
		(s48 a0 s49)
		(s48 a0 s50)
		(s49 a5 s60)
		(s49 a5 s54)
		(s49 a5 s38)
		(s50 a5 s58)
		(s51 a2 s52)
		(s51 a2 s53)
		(s52 a5 s66)
		(s52 a5 s21)
		(s53 a5 s1)
		(s53 a5 s70)
		(s54 a10 s51)
		(s55 a5 s56)
		(s55 a5 s57)
		(s55 a5 s58)
		(s55 a5 s27)
		(s56 a10 s125)
		(s57 a10 s51)
		(s57 a10 s73)
		(s58 a10 s73)
		(s59 a5 s60)
		(s59 a5 s38)
		(s59 a5 s57)
		(s59 a5 s58)
		(s60 a10 s67)
		(s61 a0 s62)
		(s61 a0 s55)
		(s62 a5 s130)
		(s63 a0 s46)
		(s63 a0 s64)
		(s64 a5 s76)
		(s65 a10 s61)
		(s66 a10 s63)
		(s66 a10 s17)
		(s67 a0 s74)
		(s67 a0 s59)
		(s68 a0 s33)
		(s69 a10 s68)
		(s70 a10 s77)
		(s70 a10 s15)
		(s71 a0 s72)
		(s72 a5 s78)
		(s72 a5 s79)
		(s72 a5 s7)
		(s73 a2 s53)
		(s74 a5 s146)
		(s74 a5 s130)
		(s74 a5 s134)
		(s75 a0 s50)
		(s76 a10 s75)
		(s77 a0 s64)
		(s78 a10 s71)
		(s79 a10 s81)
		(s80 a5 s78)
		(s80 a5 s79)
		(s81 a0 s80)
		(s82 a5 s144)
		(s82 a5 s134)
		(s83 a5 s79)
		(s84 a0 s85)
		(s85 a5 s165)
		(s86 a2 s87)
		(s87 a5 s3)
		(s87 a5 s169)
		(s88 a0 s90)
		(s89 a5 s24)
		(s89 a5 s27)
		(s90 a5 s124)
		(s90 a5 s24)
		(s90 a5 s123)
		(s90 a5 s27)
		(s91 a2 s92)
		(s91 a2 s2)
		(s92 a5 s120)
		(s93 a10 s94)
		(s94 a0 s160)
		(s95 a10 s91)
		(s96 a10 s84)
		(s97 a5 s95)
		(s97 a5 s98)
		(s97 a5 s99)
		(s98 a10 s126)
		(s99 a10 s107)
		(s100 a5 s101)
		(s100 a5 s102)
		(s100 a5 s56)
		(s100 a5 s27)
		(s101 a10 s86)
		(s101 a10 s121)
		(s102 a10 s86)
		(s103 a0 s89)
		(s104 a0 s105)
		(s104 a0 s106)
		(s105 a5 s109)
		(s105 a5 s110)
		(s105 a5 s98)
		(s106 a5 s79)
		(s106 a5 s129)
		(s106 a5 s102)
		(s107 a0 s108)
		(s107 a0 s97)
		(s108 a5 s124)
		(s108 a5 s78)
		(s108 a5 s79)
		(s109 a10 s104)
		(s110 a10 s121)
		(s111 a5 s109)
		(s111 a5 s98)
		(s112 a0 s111)
		(s113 a10 s112)
		(s114 a5 s113)
		(s114 a5 s115)
		(s115 a10 s127)
		(s116 a0 s114)
		(s117 a10 s116)
		(s117 a10 s118)
		(s118 a0 s128)
		(s119 a5 s117)
		(s119 a5 s120)
		(s120 a10 s118)
		(s121 a2 s119)
		(s121 a2 s87)
		(s122 a5 s98)
		(s122 a5 s99)
		(s123 a10 s8)
		(s123 a10 s91)
		(s124 a10 s8)
		(s125 a0 s100)
		(s126 a0 s80)
		(s126 a0 s122)
		(s127 a0 s122)
		(s128 a5 s115)
		(s129 a10 s153)
		(s130 a10 s138)
		(s131 a0 s30)
		(s132 a10 s131)
		(s133 a5 s132)
		(s133 a5 s134)
		(s134 a10 s152)
		(s135 a0 s133)
		(s136 a10 s135)
		(s137 a5 s136)
		(s138 a2 s139)
		(s139 a5 s151)
		(s139 a5 s136)
		(s140 a10 s141)
		(s141 a2 s137)
		(s142 a10 s141)
		(s143 a5 s142)
		(s143 a5 s144)
		(s143 a5 s134)
		(s144 a10 s145)
		(s145 a0 s143)
		(s146 a10 s162)
		(s147 a0 s74)
		(s148 a10 s147)
		(s149 a5 s148)
		(s149 a5 s134)
		(s150 a0 s149)
		(s151 a10 s150)
		(s151 a10 s135)
		(s152 a0 s82)
		(s153 a0 s106)
		(s154 a5 s134)
		(s155 a0 s156)
		(s156 a5 s146)
		(s156 a5 s134)
		(s157 a2 s158)
		(s158 a5 s163)
		(s158 a5 s134)
		(s159 a10 s157)
		(s160 a5 s159)
		(s161 a5 s159)
		(s161 a5 s146)
		(s161 a5 s134)
		(s162 a0 s161)
		(s163 a10 s152)
		(s163 a10 s155)
		(s164 a2 s154)
		(s165 a10 s164)
		(s166 a5 s79)
		(s166 a5 s129)
		(s167 a0 s166)
		(s168 a10 s167)
		(s169 a10 s5)
		(s169 a10 s9)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:29:01
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 },
	initialStates = {s13 },
	finalStates = {s0 s6 s11 s14 s23 s28 },
	transitions = {
		(s0 a5 s4)
		(s1 a5 s1)
		(s1 a10 s32)
		(s2 a0 s15)
		(s3 a5 s3)
		(s3 a10 s12)
		(s4 a0 s32)
		(s4 a10 s4)
		(s5 a0 s17)
		(s5 a2 s27)
		(s5 a5 s5)
		(s5 a10 s5)
		(s6 a0 s24)
		(s6 a2 s28)
		(s6 a5 s21)
		(s7 a0 s25)
		(s7 a2 s23)
		(s8 a0 s25)
		(s8 a2 s23)
		(s9 a0 s25)
		(s9 a2 s0)
		(s10 a0 s19)
		(s10 a2 s28)
		(s11 a5 s18)
		(s11 a10 s21)
		(s12 a0 s19)
		(s12 a2 s28)
		(s13 a1 s13)
		(s13 a1 s14)
		(s13 a3 s6)
		(s13 a3 s26)
		(s14 a3 s5)
		(s15 a5 s15)
		(s15 a10 s7)
		(s16 a5 s16)
		(s16 a10 s8)
		(s17 a5 s17)
		(s17 a10 s5)
		(s18 a10 s21)
		(s19 a5 s19)
		(s19 a10 s10)
		(s20 a0 s31)
		(s21 a0 s24)
		(s21 a2 s28)
		(s21 a10 s21)
		(s22 a0 s1)
		(s23 a0 s23)
		(s23 a2 s23)
		(s23 a5 s23)
		(s23 a10 s23)
		(s24 a5 s24)
		(s24 a10 s29)
		(s25 a5 s25)
		(s25 a10 s9)
		(s26 a0 s11)
		(s26 a0 s26)
		(s26 a2 s26)
		(s26 a2 s28)
		(s26 a5 s11)
		(s26 a5 s26)
		(s26 a10 s6)
		(s26 a10 s26)
		(s27 a5 s27)
		(s27 a10 s20)
		(s28 a5 s30)
		(s29 a0 s3)
		(s29 a2 s28)
		(s30 a10 s22)
		(s31 a5 s31)
		(s31 a10 s2)
		(s32 a0 s16)
		(s32 a5 s32)
		(s32 a10 s32)
	}
);
