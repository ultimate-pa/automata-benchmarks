// Testfile dumped by Ultimate at 2017/06/11 23:19:24
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 },
	initialStates = {s34 },
	finalStates = {s0 s1 s4 s6 s7 s10 s11 s12 s13 s16 s19 s20 s21 s22 s25 s26 s27 s30 s31 s32 s34 },
	transitions = {
		(s0 a25 s1)
		(s1 a28 s22)
		(s2 a25 s3)
		(s3 a27 s24)
		(s3 a28 s23)
		(s4 a24 s0)
		(s5 a24 s2)
		(s6 a18 s7)
		(s7 a19 s22)
		(s8 a18 s9)
		(s9 a19 s23)
		(s10 a5 s11)
		(s10 a7 s11)
		(s11 a8 s19)
		(s11 a9 s19)
		(s12 a21 s13)
		(s13 a22 s16)
		(s14 a21 s15)
		(s15 a22 s17)
		(s16 a23 s4)
		(s17 a23 s5)
		(s17 a26 s18)
		(s18 a27 s24)
		(s19 a10 s20)
		(s20 a11 s25)
		(s21 a2 s10)
		(s22 a20 s12)
		(s23 a20 s14)
		(s24 a30 s35)
		(s25 a12 s30)
		(s26 a15 s27)
		(s27 a17 s6)
		(s28 a15 s29)
		(s29 a17 s8)
		(s30 a13 s31)
		(s31 a14 s26)
		(s31 a14 s32)
		(s32 a15 s29)
		(s33 a14 s26)
		(s33 a14 s28)
		(s34 a0 s21)
		(s35 a32 s36)
		(s36 a33 s33)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:26
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s0 },
	finalStates = {s2 s3 s6 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s2)
		(s0 a2 s0)
		(s0 a2 s2)
		(s0 a5 s0)
		(s0 a5 s2)
		(s0 a7 s0)
		(s0 a7 s2)
		(s0 a8 s0)
		(s0 a8 s2)
		(s0 a9 s0)
		(s0 a9 s2)
		(s0 a10 s2)
		(s0 a10 s11)
		(s1 a22 s1)
		(s1 a23 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a28 s5)
		(s1 a30 s1)
		(s1 a14 s1)
		(s1 a15 s1)
		(s1 a32 s1)
		(s1 a17 s5)
		(s1 a33 s1)
		(s2 a11 s4)
		(s2 a5 s4)
		(s2 a7 s4)
		(s2 a8 s4)
		(s2 a9 s4)
		(s3 a22 s9)
		(s3 a25 s9)
		(s3 a32 s9)
		(s4 a12 s4)
		(s4 a8 s4)
		(s4 a9 s4)
		(s5 a20 s5)
		(s5 a21 s1)
		(s5 a14 s5)
		(s5 a15 s5)
		(s5 a17 s5)
		(s5 a18 s5)
		(s5 a19 s5)
		(s6 a20 s8)
		(s6 a21 s9)
		(s6 a23 s8)
		(s6 a24 s9)
		(s6 a26 s8)
		(s6 a27 s8)
		(s6 a12 s8)
		(s6 a13 s5)
		(s6 a28 s7)
		(s6 a14 s8)
		(s6 a30 s9)
		(s6 a15 s8)
		(s6 a17 s5)
		(s6 a18 s8)
		(s6 a33 s8)
		(s6 a19 s8)
		(s7 a20 s7)
		(s7 a21 s3)
		(s8 a27 s8)
		(s8 a13 s5)
		(s8 a20 s8)
		(s8 a21 s9)
		(s8 a30 s9)
		(s8 a14 s8)
		(s8 a15 s8)
		(s8 a24 s9)
		(s8 a17 s5)
		(s8 a19 s8)
		(s9 a22 s9)
		(s9 a23 s9)
		(s9 a24 s9)
		(s9 a25 s9)
		(s9 a26 s9)
		(s9 a27 s9)
		(s9 a28 s6)
		(s9 a30 s9)
		(s9 a14 s9)
		(s9 a15 s9)
		(s9 a32 s9)
		(s9 a17 s5)
		(s9 a33 s9)
		(s10 a20 s6)
		(s10 a20 s10)
		(s10 a21 s3)
		(s10 a21 s10)
		(s10 a22 s6)
		(s10 a22 s10)
		(s10 a23 s6)
		(s10 a23 s10)
		(s10 a24 s3)
		(s10 a24 s10)
		(s10 a25 s6)
		(s10 a25 s10)
		(s10 a26 s6)
		(s10 a26 s10)
		(s10 a27 s6)
		(s10 a27 s10)
		(s10 a12 s6)
		(s10 a12 s10)
		(s10 a13 s6)
		(s10 a13 s10)
		(s10 a28 s6)
		(s10 a28 s10)
		(s10 a14 s6)
		(s10 a14 s10)
		(s10 a30 s3)
		(s10 a30 s10)
		(s10 a15 s6)
		(s10 a15 s10)
		(s10 a32 s6)
		(s10 a32 s10)
		(s10 a17 s6)
		(s10 a17 s10)
		(s10 a18 s6)
		(s10 a18 s10)
		(s10 a33 s6)
		(s10 a33 s10)
		(s10 a19 s6)
		(s10 a19 s10)
		(s11 a11 s6)
		(s11 a11 s10)
	}
);
