// Testfile dumped by Ultimate at 2017/06/12 01:37:07
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s22 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	transitions = {
		(s0 a20 s1)
		(s1 a21 s14)
		(s2 a11 s3)
		(s3 a12 s16)
		(s4 a7 s5)
		(s5 a8 s15)
		(s6 a16 s7)
		(s7 a17 s17)
		(s8 a24 s9)
		(s9 a25 s14)
		(s10 a1 s11)
		(s11 a2 s21)
		(s12 a4 s13)
		(s13 a5 s14)
		(s14 a6 s4)
		(s15 a9 s18)
		(s16 a15 s6)
		(s17 a18 s19)
		(s17 a22 s20)
		(s18 a10 s2)
		(s19 a19 s0)
		(s20 a23 s8)
		(s21 a3 s12)
		(s22 a0 s10)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:11
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 },
	initialStates = {s13 },
	finalStates = {s0 s5 s7 s9 },
	transitions = {
		(s0 a18 s14)
		(s0 a19 s6)
		(s0 a21 s14)
		(s0 a22 s14)
		(s0 a23 s14)
		(s0 a25 s14)
		(s0 a6 s14)
		(s0 a7 s14)
		(s0 a8 s14)
		(s0 a9 s14)
		(s0 a10 s14)
		(s0 a11 s11)
		(s0 a15 s14)
		(s0 a16 s4)
		(s1 a23 s1)
		(s1 a16 s3)
		(s2 a19 s8)
		(s3 a17 s10)
		(s4 a18 s14)
		(s4 a22 s14)
		(s4 a17 s4)
		(s5 a17 s4)
		(s6 a20 s14)
		(s7 a12 s12)
		(s8 a20 s0)
		(s9 a20 s14)
		(s10 a18 s2)
		(s10 a22 s1)
		(s11 a12 s12)
		(s12 a15 s1)
		(s13 a0 s0)
		(s13 a0 s13)
		(s13 a18 s0)
		(s13 a18 s13)
		(s13 a19 s9)
		(s13 a19 s13)
		(s13 a1 s0)
		(s13 a1 s13)
		(s13 a20 s0)
		(s13 a20 s13)
		(s13 a2 s0)
		(s13 a2 s13)
		(s13 a21 s0)
		(s13 a21 s13)
		(s13 a3 s0)
		(s13 a3 s13)
		(s13 a4 s0)
		(s13 a4 s13)
		(s13 a22 s0)
		(s13 a22 s13)
		(s13 a5 s0)
		(s13 a5 s13)
		(s13 a23 s0)
		(s13 a23 s13)
		(s13 a24 s0)
		(s13 a24 s13)
		(s13 a25 s0)
		(s13 a25 s13)
		(s13 a6 s0)
		(s13 a6 s13)
		(s13 a7 s0)
		(s13 a7 s13)
		(s13 a8 s0)
		(s13 a8 s13)
		(s13 a9 s0)
		(s13 a9 s13)
		(s13 a10 s0)
		(s13 a10 s13)
		(s13 a11 s7)
		(s13 a11 s13)
		(s13 a12 s0)
		(s13 a12 s13)
		(s13 a15 s0)
		(s13 a15 s13)
		(s13 a16 s13)
		(s13 a16 s5)
		(s13 a17 s0)
		(s13 a17 s13)
		(s14 a10 s14)
		(s14 a19 s6)
		(s14 a11 s11)
		(s14 a21 s14)
		(s14 a23 s14)
		(s14 a6 s14)
		(s14 a7 s14)
		(s14 a16 s4)
		(s14 a8 s14)
		(s14 a9 s14)
	}
);
