// Testfile dumped by Ultimate at 2017/06/11 19:49:30
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 },
	initialStates = {s83 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 },
	transitions = {
		(s0 a81 s70)
		(s0 a82 s78)
		(s1 a80 s0)
		(s2 a79 s1)
		(s3 a74 s2)
		(s4 a78 s2)
		(s5 a72 s3)
		(s5 a71 s3)
		(s6 a73 s3)
		(s6 a68 s7)
		(s7 a69 s3)
		(s7 a70 s5)
		(s8 a76 s4)
		(s8 a77 s4)
		(s9 a67 s6)
		(s9 a75 s8)
		(s10 a61 s53)
		(s11 a65 s53)
		(s12 a59 s10)
		(s12 a58 s10)
		(s13 a60 s10)
		(s13 a55 s14)
		(s14 a56 s10)
		(s14 a57 s12)
		(s15 a63 s11)
		(s15 a64 s11)
		(s16 a90 s21)
		(s17 a50 s29)
		(s17 a51 s29)
		(s18 a41 s62)
		(s18 a49 s17)
		(s19 a95 s43)
		(s20 a94 s19)
		(s21 a91 s20)
		(s22 a94 s23)
		(s23 a95 s40)
		(s24 a67 s25)
		(s24 a75 s26)
		(s25 a73 s60)
		(s25 a68 s64)
		(s26 a76 s27)
		(s26 a77 s27)
		(s27 a78 s28)
		(s28 a79 s44)
		(s29 a52 s30)
		(s30 a53 s63)
		(s31 a61 s32)
		(s32 a66 s9)
		(s33 a18 s34)
		(s34 a19 s35)
		(s35 a36 s42)
		(s36 a54 s37)
		(s36 a62 s38)
		(s37 a60 s31)
		(s37 a55 s69)
		(s38 a63 s47)
		(s38 a64 s47)
		(s39 a91 s22)
		(s40 a38 s65)
		(s41 a17 s33)
		(s42 a37 s43)
		(s43 a38 s72)
		(s44 a80 s68)
		(s45 a10 s46)
		(s46 a11 s48)
		(s47 a65 s32)
		(s48 a12 s49)
		(s49 a13 s76)
		(s50 a2 s51)
		(s51 a4 s80)
		(s52 a90 s39)
		(s53 a66 s24)
		(s54 a7 s55)
		(s55 a8 s56)
		(s56 a9 s45)
		(s57 a50 s58)
		(s57 a51 s58)
		(s58 a52 s75)
		(s59 a72 s60)
		(s59 a71 s60)
		(s60 a74 s28)
		(s61 a41 s62)
		(s61 a49 s57)
		(s62 a47 s67)
		(s62 a42 s71)
		(s63 a54 s13)
		(s63 a62 s15)
		(s64 a69 s60)
		(s64 a70 s59)
		(s65 a40 s18)
		(s66 a45 s67)
		(s66 a46 s67)
		(s67 a48 s75)
		(s68 a81 s70)
		(s69 a56 s31)
		(s69 a57 s81)
		(s70 a85 s77)
		(s71 a43 s67)
		(s71 a44 s66)
		(s72 a40 s61)
		(s73 a15 s74)
		(s74 a16 s41)
		(s75 a53 s36)
		(s76 a14 s73)
		(s77 a86 s52)
		(s78 a83 s79)
		(s79 a84 s16)
		(s79 a85 s77)
		(s80 a5 s82)
		(s81 a59 s31)
		(s81 a58 s31)
		(s82 a6 s54)
		(s83 a0 s50)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 19:49:33
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s1 },
	finalStates = {s4 s5 },
	transitions = {
		(s0 a38 s0)
		(s0 a40 s5)
		(s1 a0 s1)
		(s1 a0 s4)
		(s1 a2 s1)
		(s1 a2 s4)
		(s1 a47 s1)
		(s1 a47 s4)
		(s1 a48 s1)
		(s1 a48 s4)
		(s1 a4 s1)
		(s1 a4 s4)
		(s1 a49 s1)
		(s1 a49 s4)
		(s1 a5 s1)
		(s1 a5 s4)
		(s1 a50 s1)
		(s1 a50 s4)
		(s1 a6 s1)
		(s1 a6 s4)
		(s1 a51 s1)
		(s1 a51 s4)
		(s1 a52 s1)
		(s1 a52 s4)
		(s1 a7 s1)
		(s1 a7 s4)
		(s1 a53 s1)
		(s1 a53 s4)
		(s1 a8 s1)
		(s1 a8 s4)
		(s1 a54 s1)
		(s1 a54 s4)
		(s1 a9 s1)
		(s1 a9 s4)
		(s1 a55 s1)
		(s1 a55 s4)
		(s1 a10 s1)
		(s1 a10 s4)
		(s1 a56 s1)
		(s1 a56 s4)
		(s1 a11 s1)
		(s1 a11 s4)
		(s1 a57 s1)
		(s1 a57 s4)
		(s1 a12 s1)
		(s1 a12 s4)
		(s1 a58 s1)
		(s1 a58 s4)
		(s1 a13 s1)
		(s1 a13 s4)
		(s1 a59 s1)
		(s1 a59 s4)
		(s1 a14 s1)
		(s1 a14 s4)
		(s1 a60 s1)
		(s1 a60 s4)
		(s1 a61 s1)
		(s1 a61 s4)
		(s1 a15 s1)
		(s1 a15 s4)
		(s1 a62 s1)
		(s1 a62 s4)
		(s1 a16 s1)
		(s1 a16 s4)
		(s1 a63 s1)
		(s1 a63 s4)
		(s1 a17 s1)
		(s1 a17 s4)
		(s1 a64 s1)
		(s1 a64 s4)
		(s1 a65 s1)
		(s1 a65 s4)
		(s1 a18 s1)
		(s1 a18 s4)
		(s1 a66 s1)
		(s1 a66 s4)
		(s1 a19 s1)
		(s1 a19 s4)
		(s1 a67 s1)
		(s1 a67 s4)
		(s1 a68 s1)
		(s1 a68 s4)
		(s1 a69 s1)
		(s1 a69 s4)
		(s1 a70 s1)
		(s1 a70 s4)
		(s1 a71 s1)
		(s1 a71 s4)
		(s1 a72 s1)
		(s1 a72 s4)
		(s1 a73 s1)
		(s1 a73 s4)
		(s1 a74 s1)
		(s1 a74 s4)
		(s1 a75 s1)
		(s1 a75 s4)
		(s1 a76 s1)
		(s1 a76 s4)
		(s1 a77 s1)
		(s1 a77 s4)
		(s1 a78 s1)
		(s1 a78 s4)
		(s1 a79 s1)
		(s1 a79 s4)
		(s1 a80 s1)
		(s1 a80 s4)
		(s1 a81 s1)
		(s1 a81 s4)
		(s1 a82 s1)
		(s1 a82 s4)
		(s1 a83 s1)
		(s1 a83 s4)
		(s1 a84 s1)
		(s1 a84 s4)
		(s1 a36 s1)
		(s1 a36 s4)
		(s1 a85 s1)
		(s1 a85 s4)
		(s1 a37 s1)
		(s1 a37 s5)
		(s1 a86 s1)
		(s1 a86 s4)
		(s1 a38 s1)
		(s1 a38 s4)
		(s1 a40 s1)
		(s1 a40 s5)
		(s1 a90 s1)
		(s1 a90 s4)
		(s1 a41 s1)
		(s1 a41 s4)
		(s1 a91 s1)
		(s1 a91 s4)
		(s1 a42 s1)
		(s1 a42 s4)
		(s1 a43 s1)
		(s1 a43 s4)
		(s1 a94 s1)
		(s1 a94 s4)
		(s1 a44 s1)
		(s1 a44 s4)
		(s1 a95 s1)
		(s1 a95 s4)
		(s1 a45 s1)
		(s1 a45 s4)
		(s1 a46 s1)
		(s1 a46 s4)
		(s2 a47 s2)
		(s2 a48 s2)
		(s2 a49 s2)
		(s2 a50 s2)
		(s2 a51 s2)
		(s2 a52 s2)
		(s2 a53 s2)
		(s2 a54 s2)
		(s2 a55 s2)
		(s2 a56 s2)
		(s2 a57 s2)
		(s2 a58 s2)
		(s2 a59 s2)
		(s2 a60 s2)
		(s2 a61 s2)
		(s2 a62 s2)
		(s2 a63 s2)
		(s2 a64 s2)
		(s2 a65 s2)
		(s2 a66 s2)
		(s2 a67 s2)
		(s2 a68 s2)
		(s2 a69 s2)
		(s2 a70 s2)
		(s2 a71 s2)
		(s2 a72 s2)
		(s2 a73 s2)
		(s2 a74 s2)
		(s2 a75 s2)
		(s2 a76 s2)
		(s2 a77 s2)
		(s2 a78 s2)
		(s2 a79 s2)
		(s2 a80 s2)
		(s2 a81 s2)
		(s2 a82 s2)
		(s2 a83 s2)
		(s2 a84 s2)
		(s2 a85 s2)
		(s2 a86 s2)
		(s2 a38 s2)
		(s2 a40 s2)
		(s2 a90 s2)
		(s2 a41 s2)
		(s2 a91 s2)
		(s2 a42 s2)
		(s2 a43 s2)
		(s2 a94 s2)
		(s2 a44 s2)
		(s2 a45 s2)
		(s2 a46 s2)
		(s3 a48 s3)
		(s3 a5 s3)
		(s3 a6 s3)
		(s3 a52 s3)
		(s3 a7 s3)
		(s3 a53 s3)
		(s3 a8 s3)
		(s3 a54 s3)
		(s3 a9 s3)
		(s3 a55 s3)
		(s3 a10 s3)
		(s3 a56 s3)
		(s3 a11 s3)
		(s3 a57 s3)
		(s3 a12 s3)
		(s3 a58 s3)
		(s3 a13 s3)
		(s3 a59 s3)
		(s3 a14 s3)
		(s3 a60 s3)
		(s3 a61 s3)
		(s3 a15 s3)
		(s3 a62 s3)
		(s3 a16 s3)
		(s3 a63 s3)
		(s3 a17 s3)
		(s3 a64 s3)
		(s3 a65 s3)
		(s3 a18 s3)
		(s3 a66 s3)
		(s3 a19 s3)
		(s3 a67 s3)
		(s3 a68 s3)
		(s3 a69 s3)
		(s3 a70 s3)
		(s3 a71 s3)
		(s3 a72 s3)
		(s3 a73 s3)
		(s3 a74 s3)
		(s3 a75 s3)
		(s3 a76 s3)
		(s3 a77 s3)
		(s3 a78 s3)
		(s3 a79 s3)
		(s3 a80 s3)
		(s3 a81 s3)
		(s3 a82 s3)
		(s3 a83 s3)
		(s3 a84 s3)
		(s3 a36 s3)
		(s3 a85 s3)
		(s3 a37 s2)
		(s3 a86 s3)
		(s3 a40 s6)
		(s3 a90 s3)
		(s3 a91 s3)
		(s3 a43 s3)
		(s3 a94 s3)
		(s3 a44 s3)
		(s3 a95 s0)
		(s3 a45 s3)
		(s3 a46 s3)
		(s4 a47 s3)
		(s4 a48 s3)
		(s4 a4 s3)
		(s4 a5 s3)
		(s4 a50 s3)
		(s4 a6 s3)
		(s4 a51 s3)
		(s4 a52 s3)
		(s4 a7 s3)
		(s4 a53 s3)
		(s4 a8 s3)
		(s4 a54 s3)
		(s4 a9 s3)
		(s4 a55 s3)
		(s4 a10 s3)
		(s4 a56 s3)
		(s4 a11 s3)
		(s4 a57 s3)
		(s4 a12 s3)
		(s4 a58 s3)
		(s4 a13 s3)
		(s4 a59 s3)
		(s4 a14 s3)
		(s4 a60 s3)
		(s4 a61 s3)
		(s4 a15 s3)
		(s4 a62 s3)
		(s4 a16 s3)
		(s4 a63 s3)
		(s4 a17 s3)
		(s4 a64 s3)
		(s4 a65 s3)
		(s4 a18 s3)
		(s4 a66 s3)
		(s4 a19 s3)
		(s4 a67 s3)
		(s4 a68 s3)
		(s4 a69 s3)
		(s4 a70 s3)
		(s4 a71 s3)
		(s4 a72 s3)
		(s4 a73 s3)
		(s4 a74 s3)
		(s4 a75 s3)
		(s4 a76 s3)
		(s4 a77 s3)
		(s4 a78 s3)
		(s4 a79 s3)
		(s4 a80 s3)
		(s4 a81 s3)
		(s4 a82 s3)
		(s4 a83 s3)
		(s4 a84 s3)
		(s4 a36 s3)
		(s4 a85 s3)
		(s4 a37 s2)
		(s4 a86 s3)
		(s4 a38 s3)
		(s4 a40 s6)
		(s4 a90 s3)
		(s4 a91 s3)
		(s4 a42 s3)
		(s4 a43 s3)
		(s4 a94 s3)
		(s4 a44 s3)
		(s4 a95 s0)
		(s4 a45 s3)
		(s4 a46 s3)
		(s5 a41 s6)
		(s5 a49 s6)
		(s5 a38 s6)
		(s6 a47 s6)
		(s6 a48 s6)
		(s6 a49 s6)
		(s6 a50 s6)
		(s6 a51 s6)
		(s6 a52 s6)
		(s6 a53 s6)
		(s6 a54 s6)
		(s6 a55 s6)
		(s6 a56 s6)
		(s6 a57 s6)
		(s6 a58 s6)
		(s6 a59 s6)
		(s6 a60 s6)
		(s6 a61 s6)
		(s6 a62 s6)
		(s6 a63 s6)
		(s6 a64 s6)
		(s6 a65 s6)
		(s6 a66 s6)
		(s6 a67 s6)
		(s6 a68 s6)
		(s6 a69 s6)
		(s6 a70 s6)
		(s6 a71 s6)
		(s6 a72 s6)
		(s6 a73 s6)
		(s6 a74 s6)
		(s6 a75 s6)
		(s6 a76 s6)
		(s6 a77 s6)
		(s6 a78 s6)
		(s6 a79 s6)
		(s6 a80 s6)
		(s6 a81 s6)
		(s6 a82 s6)
		(s6 a83 s6)
		(s6 a84 s6)
		(s6 a85 s6)
		(s6 a86 s6)
		(s6 a40 s6)
		(s6 a90 s6)
		(s6 a41 s6)
		(s6 a91 s6)
		(s6 a42 s6)
		(s6 a43 s6)
		(s6 a94 s6)
		(s6 a44 s6)
		(s6 a95 s4)
		(s6 a45 s6)
		(s6 a46 s6)
	}
);
