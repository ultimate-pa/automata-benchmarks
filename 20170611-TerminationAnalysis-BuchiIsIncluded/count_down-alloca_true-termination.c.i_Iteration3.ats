// Testfile dumped by Ultimate at 2017/06/12 01:37:51
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s8 },
	finalStates = {s0 s2 s3 s4 s5 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s22 },
	transitions = {
		(s0 a21 s9)
		(s1 a17 s6)
		(s2 a26 s22)
		(s2 a27 s3)
		(s3 a28 s4)
		(s4 a29 s14)
		(s5 a12 s20)
		(s6 a18 s7)
		(s7 a12 s18)
		(s7 a12 s20)
		(s8 a1 s16)
		(s9 a23 s10)
		(s10 a24 s11)
		(s11 a25 s2)
		(s12 a9 s13)
		(s13 a11 s5)
		(s14 a30 s15)
		(s15 a31 s10)
		(s16 a2 s17)
		(s17 a5 s12)
		(s17 a8 s12)
		(s18 a13 s19)
		(s19 a20 s0)
		(s20 a14 s21)
		(s21 a15 s1)
		(s21 a16 s1)
		(s22 a0 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:52
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s4 },
	finalStates = {s0 s1 },
	transitions = {
		(s0 a18 s5)
		(s0 a0 s2)
		(s0 a8 s5)
		(s0 a21 s5)
		(s0 a9 s5)
		(s0 a23 s3)
		(s0 a11 s5)
		(s0 a24 s5)
		(s0 a12 s5)
		(s0 a25 s5)
		(s0 a13 s5)
		(s0 a26 s5)
		(s0 a14 s5)
		(s0 a27 s5)
		(s0 a28 s5)
		(s0 a15 s5)
		(s0 a29 s5)
		(s0 a30 s5)
		(s0 a16 s5)
		(s0 a31 s5)
		(s0 a17 s5)
		(s1 a24 s3)
		(s2 a21 s2)
		(s2 a23 s1)
		(s3 a0 s0)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s4 a1 s0)
		(s4 a1 s4)
		(s4 a0 s0)
		(s4 a0 s4)
		(s4 a2 s0)
		(s4 a2 s4)
		(s4 a5 s0)
		(s4 a5 s4)
		(s4 a8 s0)
		(s4 a8 s4)
		(s4 a9 s0)
		(s4 a9 s4)
		(s4 a11 s0)
		(s4 a11 s4)
		(s4 a12 s0)
		(s4 a12 s4)
		(s4 a13 s0)
		(s4 a13 s4)
		(s4 a14 s0)
		(s4 a14 s4)
		(s4 a15 s0)
		(s4 a15 s4)
		(s4 a16 s0)
		(s4 a16 s4)
		(s4 a17 s0)
		(s4 a17 s4)
		(s4 a18 s0)
		(s4 a18 s4)
		(s4 a20 s0)
		(s4 a20 s4)
		(s4 a21 s0)
		(s4 a21 s4)
		(s4 a23 s1)
		(s4 a23 s4)
		(s4 a24 s0)
		(s4 a24 s4)
		(s4 a25 s0)
		(s4 a25 s4)
		(s4 a26 s0)
		(s4 a26 s4)
		(s4 a27 s0)
		(s4 a27 s4)
		(s4 a28 s0)
		(s4 a28 s4)
		(s4 a29 s0)
		(s4 a29 s4)
		(s4 a30 s0)
		(s4 a30 s4)
		(s4 a31 s0)
		(s4 a31 s4)
		(s5 a18 s5)
		(s5 a0 s2)
		(s5 a9 s5)
		(s5 a23 s3)
		(s5 a11 s5)
		(s5 a24 s5)
		(s5 a12 s5)
		(s5 a25 s5)
		(s5 a13 s5)
		(s5 a26 s5)
		(s5 a14 s5)
		(s5 a27 s5)
		(s5 a28 s5)
		(s5 a15 s5)
		(s5 a29 s5)
		(s5 a30 s5)
		(s5 a16 s5)
		(s5 a31 s5)
		(s5 a17 s5)
	}
);
