// Testfile dumped by Ultimate at 2017/06/12 00:58:05
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 },
	initialStates = {s37 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 },
	transitions = {
		(s0 a5 s1)
		(s1 a6 s8)
		(s2 a42 s3)
		(s3 a43 s16)
		(s4 a37 s5)
		(s5 a39 s26)
		(s6 a13 s7)
		(s7 a14 s36)
		(s8 a7 s14)
		(s9 a9 s10)
		(s10 a10 s22)
		(s11 a35 s12)
		(s12 a36 s4)
		(s13 a3 s0)
		(s14 a8 s9)
		(s15 a41 s2)
		(s16 a45 s26)
		(s17 a31 s18)
		(s17 a32 s19)
		(s18 a34 s11)
		(s19 a27 s24)
		(s20 a18 s5)
		(s21 a30 s17)
		(s22 a11 s23)
		(s23 a12 s6)
		(s23 a15 s34)
		(s24 a28 s25)
		(s25 a29 s21)
		(s26 a40 s15)
		(s27 a38 s5)
		(s27 a26 s19)
		(s28 a20 s29)
		(s29 a21 s30)
		(s30 a22 s27)
		(s30 a23 s31)
		(s31 a24 s32)
		(s32 a25 s27)
		(s33 a1 s13)
		(s34 a19 s28)
		(s35 a17 s20)
		(s36 a19 s28)
		(s36 a16 s35)
		(s37 a0 s33)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 00:58:08
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 },
	initialStates = {s7 },
	finalStates = {s2 s3 s8 s11 s12 },
	transitions = {
		(s0 a36 s0)
		(s0 a36 s8)
		(s0 a37 s0)
		(s0 a37 s8)
		(s0 a45 s0)
		(s0 a45 s8)
		(s0 a39 s0)
		(s0 a39 s8)
		(s0 a40 s0)
		(s0 a40 s8)
		(s0 a41 s0)
		(s0 a41 s2)
		(s0 a42 s0)
		(s0 a42 s8)
		(s0 a43 s0)
		(s0 a43 s8)
		(s1 a35 s1)
		(s1 a36 s1)
		(s1 a37 s1)
		(s1 a38 s1)
		(s1 a40 s1)
		(s1 a41 s15)
		(s1 a11 s1)
		(s1 a45 s1)
		(s1 a12 s1)
		(s1 a13 s1)
		(s1 a14 s1)
		(s1 a15 s1)
		(s1 a16 s1)
		(s1 a17 s1)
		(s1 a18 s1)
		(s1 a19 s1)
		(s1 a20 s1)
		(s1 a21 s1)
		(s1 a22 s1)
		(s1 a23 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a27 s1)
		(s1 a28 s15)
		(s1 a31 s1)
		(s1 a32 s1)
		(s1 a34 s1)
		(s2 a29 s9)
		(s2 a42 s9)
		(s3 a27 s13)
		(s4 a35 s4)
		(s4 a27 s4)
		(s4 a36 s4)
		(s4 a37 s4)
		(s4 a28 s15)
		(s4 a40 s4)
		(s4 a41 s15)
		(s4 a34 s4)
		(s5 a9 s8)
		(s5 a9 s16)
		(s5 a6 s8)
		(s5 a6 s5)
		(s5 a7 s8)
		(s5 a7 s5)
		(s5 a8 s8)
		(s5 a8 s5)
		(s6 a35 s6)
		(s6 a27 s6)
		(s6 a36 s6)
		(s6 a37 s6)
		(s6 a28 s11)
		(s6 a34 s6)
		(s7 a0 s8)
		(s7 a0 s7)
		(s7 a1 s8)
		(s7 a1 s7)
		(s7 a3 s8)
		(s7 a3 s7)
		(s7 a5 s8)
		(s7 a5 s5)
		(s8 a35 s1)
		(s8 a36 s1)
		(s8 a37 s1)
		(s8 a38 s1)
		(s8 a3 s1)
		(s8 a40 s1)
		(s8 a6 s1)
		(s8 a41 s15)
		(s8 a8 s1)
		(s8 a43 s1)
		(s8 a10 s1)
		(s8 a11 s1)
		(s8 a45 s1)
		(s8 a12 s1)
		(s8 a13 s1)
		(s8 a14 s1)
		(s8 a15 s1)
		(s8 a16 s1)
		(s8 a17 s1)
		(s8 a18 s1)
		(s8 a19 s1)
		(s8 a20 s1)
		(s8 a21 s1)
		(s8 a22 s1)
		(s8 a23 s1)
		(s8 a24 s1)
		(s8 a25 s1)
		(s8 a27 s1)
		(s8 a28 s15)
		(s8 a30 s1)
		(s8 a31 s1)
		(s8 a32 s1)
		(s8 a34 s1)
		(s9 a45 s4)
		(s9 a30 s9)
		(s9 a31 s4)
		(s9 a32 s4)
		(s9 a43 s9)
		(s10 a29 s12)
		(s11 a29 s14)
		(s12 a30 s14)
		(s13 a28 s10)
		(s14 a30 s14)
		(s14 a31 s6)
		(s14 a32 s6)
		(s15 a29 s9)
		(s15 a42 s9)
		(s16 a35 s0)
		(s16 a35 s8)
		(s16 a38 s8)
		(s16 a38 s16)
		(s16 a39 s8)
		(s16 a39 s16)
		(s16 a40 s8)
		(s16 a40 s16)
		(s16 a41 s2)
		(s16 a41 s16)
		(s16 a42 s8)
		(s16 a42 s16)
		(s16 a43 s8)
		(s16 a43 s16)
		(s16 a10 s8)
		(s16 a10 s16)
		(s16 a11 s8)
		(s16 a11 s16)
		(s16 a45 s8)
		(s16 a45 s16)
		(s16 a12 s8)
		(s16 a12 s16)
		(s16 a13 s8)
		(s16 a13 s16)
		(s16 a14 s8)
		(s16 a14 s16)
		(s16 a15 s8)
		(s16 a15 s16)
		(s16 a16 s8)
		(s16 a16 s16)
		(s16 a17 s8)
		(s16 a17 s16)
		(s16 a18 s0)
		(s16 a18 s8)
		(s16 a19 s8)
		(s16 a19 s16)
		(s16 a20 s8)
		(s16 a20 s16)
		(s16 a21 s8)
		(s16 a21 s16)
		(s16 a22 s8)
		(s16 a22 s16)
		(s16 a23 s8)
		(s16 a23 s16)
		(s16 a24 s8)
		(s16 a24 s16)
		(s16 a25 s8)
		(s16 a25 s16)
		(s16 a26 s3)
		(s16 a26 s16)
		(s16 a27 s8)
		(s16 a27 s16)
		(s16 a28 s2)
		(s16 a28 s16)
		(s16 a29 s8)
		(s16 a29 s16)
		(s16 a30 s8)
		(s16 a30 s16)
		(s16 a31 s8)
		(s16 a31 s16)
		(s16 a32 s8)
		(s16 a32 s16)
		(s16 a34 s8)
		(s16 a34 s16)
	}
);
