// Testfile dumped by Ultimate at 2017/06/12 01:44:38
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 },
	initialStates = {s37 },
	finalStates = {s0 s1 s4 s5 s8 s11 s12 s14 s18 s19 s20 s22 s23 s26 s29 s30 s33 s37 },
	transitions = {
		(s0 a10 s1)
		(s1 a11 s33)
		(s2 a10 s3)
		(s3 a11 s41)
		(s4 a16 s5)
		(s5 a17 s14)
		(s6 a15 s7)
		(s7 a22 s13)
		(s8 a13 s4)
		(s9 a13 s10)
		(s10 a15 s7)
		(s10 a16 s15)
		(s11 a1 s12)
		(s12 a2 s22)
		(s12 a3 s22)
		(s13 a23 s17)
		(s14 a18 s23)
		(s15 a17 s16)
		(s16 a18 s35)
		(s17 a5 s20)
		(s17 a5 s21)
		(s18 a5 s19)
		(s19 a7 s31)
		(s20 a7 s29)
		(s21 a7 s38)
		(s22 a4 s18)
		(s23 a19 s26)
		(s24 a18 s25)
		(s25 a19 s27)
		(s26 a20 s0)
		(s27 a20 s28)
		(s28 a10 s46)
		(s29 a8 s30)
		(s30 a9 s0)
		(s31 a8 s32)
		(s32 a9 s2)
		(s33 a12 s8)
		(s34 a14 s6)
		(s35 a19 s36)
		(s36 a20 s44)
		(s37 a0 s11)
		(s38 a8 s48)
		(s39 a12 s40)
		(s40 a13 s42)
		(s41 a12 s9)
		(s42 a15 s7)
		(s42 a16 s43)
		(s43 a17 s24)
		(s44 a10 s34)
		(s45 a11 s39)
		(s46 a11 s39)
		(s46 a14 s6)
		(s47 a10 s45)
		(s48 a9 s47)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:44:39
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 },
	initialStates = {s3 },
	finalStates = {s4 s5 s10 s14 s17 },
	transitions = {
		(s0 a12 s0)
		(s0 a13 s18)
		(s1 a15 s9)
		(s1 a11 s2)
		(s1 a14 s1)
		(s2 a12 s2)
		(s2 a13 s7)
		(s3 a0 s3)
		(s3 a0 s10)
		(s3 a1 s3)
		(s3 a1 s10)
		(s3 a15 s3)
		(s3 a15 s10)
		(s3 a2 s3)
		(s3 a2 s10)
		(s3 a16 s3)
		(s3 a16 s10)
		(s3 a17 s3)
		(s3 a17 s10)
		(s3 a3 s3)
		(s3 a3 s10)
		(s3 a18 s3)
		(s3 a18 s10)
		(s3 a19 s3)
		(s3 a19 s10)
		(s3 a4 s3)
		(s3 a4 s10)
		(s3 a20 s3)
		(s3 a20 s10)
		(s3 a5 s3)
		(s3 a5 s10)
		(s3 a22 s3)
		(s3 a22 s10)
		(s3 a23 s3)
		(s3 a23 s10)
		(s3 a7 s3)
		(s3 a7 s10)
		(s3 a8 s3)
		(s3 a8 s10)
		(s3 a9 s3)
		(s3 a9 s10)
		(s3 a10 s14)
		(s3 a10 s3)
		(s3 a11 s3)
		(s3 a11 s5)
		(s3 a12 s3)
		(s3 a12 s10)
		(s3 a13 s3)
		(s3 a13 s10)
		(s3 a14 s3)
		(s3 a14 s17)
		(s4 a12 s2)
		(s5 a12 s9)
		(s6 a7 s6)
		(s6 a8 s6)
		(s6 a9 s6)
		(s6 a10 s12)
		(s6 a5 s6)
		(s7 a23 s7)
		(s7 a7 s7)
		(s7 a15 s7)
		(s7 a8 s7)
		(s7 a9 s6)
		(s7 a16 s7)
		(s7 a17 s7)
		(s7 a18 s7)
		(s7 a19 s7)
		(s7 a20 s10)
		(s7 a5 s7)
		(s7 a22 s7)
		(s8 a15 s8)
		(s8 a2 s8)
		(s8 a16 s8)
		(s8 a17 s8)
		(s8 a3 s8)
		(s8 a18 s8)
		(s8 a19 s8)
		(s8 a4 s6)
		(s8 a20 s11)
		(s8 a5 s8)
		(s8 a22 s8)
		(s8 a23 s8)
		(s8 a7 s8)
		(s8 a8 s8)
		(s8 a9 s6)
		(s9 a23 s9)
		(s9 a7 s9)
		(s9 a8 s9)
		(s9 a9 s6)
		(s9 a13 s8)
		(s9 a5 s9)
		(s9 a22 s9)
		(s10 a1 s8)
		(s10 a15 s8)
		(s10 a2 s8)
		(s10 a16 s8)
		(s10 a17 s8)
		(s10 a3 s8)
		(s10 a18 s8)
		(s10 a19 s8)
		(s10 a4 s6)
		(s10 a20 s11)
		(s10 a5 s8)
		(s10 a22 s8)
		(s10 a23 s8)
		(s10 a7 s8)
		(s10 a8 s8)
		(s10 a9 s6)
		(s10 a10 s1)
		(s10 a13 s8)
		(s11 a10 s13)
		(s12 a15 s16)
		(s12 a11 s0)
		(s12 a14 s12)
		(s13 a15 s15)
		(s13 a11 s4)
		(s13 a14 s13)
		(s14 a11 s2)
		(s14 a14 s1)
		(s15 a23 s15)
		(s15 a7 s15)
		(s15 a8 s15)
		(s15 a9 s6)
		(s15 a5 s15)
		(s15 a22 s15)
		(s16 a23 s16)
		(s16 a7 s16)
		(s16 a8 s16)
		(s16 a9 s6)
		(s16 a5 s16)
		(s16 a22 s16)
		(s17 a15 s8)
		(s18 a23 s18)
		(s18 a7 s18)
		(s18 a15 s18)
		(s18 a8 s18)
		(s18 a9 s6)
		(s18 a16 s18)
		(s18 a17 s18)
		(s18 a18 s18)
		(s18 a19 s18)
		(s18 a20 s6)
		(s18 a5 s18)
		(s18 a22 s18)
	}
);
