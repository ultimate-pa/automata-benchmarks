// Testfile dumped by Ultimate at 2017/06/11 23:20:19
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s5 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	transitions = {
		(s0 a15 s3)
		(s1 a18 s2)
		(s2 a20 s11)
		(s3 a16 s4)
		(s4 a17 s1)
		(s5 a0 s20)
		(s6 a35 s7)
		(s7 a36 s4)
		(s8 a28 s9)
		(s9 a30 s21)
		(s9 a31 s22)
		(s10 a27 s8)
		(s11 a21 s12)
		(s12 a22 s22)
		(s13 a5 s14)
		(s13 a8 s14)
		(s14 a11 s15)
		(s14 a12 s15)
		(s15 a13 s16)
		(s16 a14 s0)
		(s17 a24 s18)
		(s18 a25 s19)
		(s19 a26 s10)
		(s20 a2 s13)
		(s21 a33 s6)
		(s22 a23 s17)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:20:21
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 },
	initialStates = {s4 },
	finalStates = {s1 s9 s10 },
	transitions = {
		(s0 a23 s0)
		(s0 a24 s0)
		(s0 a25 s0)
		(s0 a26 s0)
		(s0 a27 s0)
		(s0 a28 s0)
		(s0 a30 s0)
		(s0 a31 s0)
		(s0 a33 s0)
		(s0 a35 s0)
		(s0 a20 s0)
		(s0 a21 s0)
		(s0 a36 s6)
		(s0 a22 s0)
		(s1 a17 s2)
		(s2 a18 s3)
		(s3 a23 s3)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a33 s3)
		(s3 a35 s3)
		(s3 a20 s3)
		(s3 a21 s3)
		(s3 a36 s1)
		(s3 a22 s3)
		(s4 a0 s4)
		(s4 a0 s9)
		(s4 a2 s4)
		(s4 a2 s9)
		(s4 a5 s4)
		(s4 a5 s9)
		(s4 a8 s4)
		(s4 a8 s9)
		(s4 a11 s4)
		(s4 a11 s9)
		(s4 a12 s4)
		(s4 a12 s9)
		(s4 a13 s5)
		(s4 a13 s9)
		(s5 a23 s5)
		(s5 a23 s9)
		(s5 a24 s5)
		(s5 a24 s9)
		(s5 a25 s5)
		(s5 a25 s9)
		(s5 a26 s5)
		(s5 a26 s9)
		(s5 a27 s5)
		(s5 a27 s9)
		(s5 a28 s5)
		(s5 a28 s9)
		(s5 a14 s5)
		(s5 a14 s9)
		(s5 a30 s5)
		(s5 a30 s9)
		(s5 a15 s5)
		(s5 a15 s9)
		(s5 a16 s1)
		(s5 a16 s5)
		(s5 a31 s5)
		(s5 a31 s9)
		(s5 a17 s5)
		(s5 a17 s9)
		(s5 a33 s5)
		(s5 a33 s9)
		(s5 a18 s5)
		(s5 a18 s10)
		(s5 a35 s5)
		(s5 a35 s9)
		(s5 a20 s5)
		(s5 a20 s9)
		(s5 a21 s5)
		(s5 a21 s10)
		(s5 a36 s5)
		(s5 a36 s9)
		(s5 a22 s5)
		(s5 a22 s9)
		(s6 a17 s6)
		(s6 a18 s8)
		(s7 a23 s7)
		(s7 a24 s7)
		(s7 a25 s7)
		(s7 a26 s7)
		(s7 a27 s7)
		(s7 a28 s7)
		(s7 a11 s7)
		(s7 a12 s7)
		(s7 a30 s7)
		(s7 a15 s7)
		(s7 a31 s7)
		(s7 a33 s7)
		(s7 a18 s0)
		(s7 a35 s7)
		(s7 a36 s6)
		(s8 a23 s8)
		(s8 a24 s8)
		(s8 a25 s8)
		(s8 a26 s8)
		(s8 a27 s8)
		(s8 a28 s8)
		(s8 a30 s8)
		(s8 a31 s8)
		(s8 a33 s8)
		(s8 a35 s8)
		(s8 a20 s8)
		(s8 a21 s8)
		(s8 a36 s6)
		(s8 a22 s8)
		(s9 a23 s7)
		(s9 a24 s7)
		(s9 a5 s7)
		(s9 a25 s7)
		(s9 a8 s7)
		(s9 a26 s7)
		(s9 a27 s7)
		(s9 a28 s7)
		(s9 a11 s7)
		(s9 a12 s7)
		(s9 a14 s7)
		(s9 a30 s7)
		(s9 a15 s7)
		(s9 a31 s7)
		(s9 a33 s7)
		(s9 a17 s7)
		(s9 a18 s0)
		(s9 a35 s7)
		(s9 a21 s0)
		(s9 a36 s6)
		(s10 a20 s0)
		(s10 a22 s0)
	}
);
