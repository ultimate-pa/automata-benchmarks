// Testfile dumped by Ultimate at 2017/06/12 01:14:54
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 },
	initialStates = {s70 },
	finalStates = {s0 s1 s4 s5 s8 s9 s12 s13 s16 s17 s20 s21 s24 s25 s28 s30 s31 s34 s37 s38 s41 s42 s45 s47 s49 s51 s54 s55 s58 s59 s60 s62 s65 s67 s70 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s103 s104 },
	transitions = {
		(s0 a29 s1)
		(s1 a30 s47)
		(s1 a34 s30)
		(s2 a29 s3)
		(s3 a30 s48)
		(s3 a34 s32)
		(s4 a17 s5)
		(s5 a18 s49)
		(s6 a21 s7)
		(s7 a22 s93)
		(s8 a13 s9)
		(s9 a14 s65)
		(s9 a27 s45)
		(s10 a13 s11)
		(s11 a14 s66)
		(s12 a32 s13)
		(s13 a33 s55)
		(s14 a32 s15)
		(s15 a33 s57)
		(s16 a5 s17)
		(s17 a6 s20)
		(s18 a5 s19)
		(s19 a6 s102)
		(s20 a7 s21)
		(s21 a8 s28)
		(s22 a7 s23)
		(s23 a8 s29)
		(s24 a20 s25)
		(s25 a25 s82)
		(s26 a20 s27)
		(s27 a25 s63)
		(s28 a9 s34)
		(s29 a9 s64)
		(s30 a35 s31)
		(s31 a36 s54)
		(s32 a35 s33)
		(s33 a36 s56)
		(s34 a10 s8)
		(s35 a10 s36)
		(s36 a13 s86)
		(s37 a23 s38)
		(s38 a24 s25)
		(s39 a23 s40)
		(s40 a24 s27)
		(s41 a39 s42)
		(s41 a39 s16)
		(s42 a5 s81)
		(s43 a39 s44)
		(s43 a39 s16)
		(s44 a5 s99)
		(s45 a28 s0)
		(s46 a28 s2)
		(s47 a31 s12)
		(s48 a31 s14)
		(s49 a19 s24)
		(s50 a19 s26)
		(s51 a26 s16)
		(s51 a26 s18)
		(s52 a26 s53)
		(s53 a5 s71)
		(s54 a37 s55)
		(s55 a38 s41)
		(s56 a37 s57)
		(s57 a38 s43)
		(s58 a3 s59)
		(s59 a5 s103)
		(s59 a5 s104)
		(s60 a22 s37)
		(s61 a22 s39)
		(s62 a25 s51)
		(s63 a26 s44)
		(s63 a26 s16)
		(s64 a10 s10)
		(s65 a15 s67)
		(s66 a15 s68)
		(s67 a16 s4)
		(s68 a16 s6)
		(s69 a18 s50)
		(s70 a1 s58)
		(s71 a6 s22)
		(s72 a21 s60)
		(s72 a17 s5)
		(s73 a16 s72)
		(s74 a15 s73)
		(s75 a14 s74)
		(s75 a27 s45)
		(s76 a13 s75)
		(s77 a10 s76)
		(s78 a9 s77)
		(s79 a8 s78)
		(s80 a7 s79)
		(s81 a6 s80)
		(s82 a26 s42)
		(s82 a26 s16)
		(s83 a14 s84)
		(s83 a27 s46)
		(s84 a15 s87)
		(s85 a17 s69)
		(s86 a14 s89)
		(s86 a27 s46)
		(s87 a16 s88)
		(s88 a21 s61)
		(s88 a17 s69)
		(s89 a15 s90)
		(s90 a16 s85)
		(s91 a24 s92)
		(s91 a24 s62)
		(s92 a25 s52)
		(s93 a23 s91)
		(s94 a13 s83)
		(s95 a10 s94)
		(s96 a9 s95)
		(s97 a8 s96)
		(s98 a7 s97)
		(s99 a6 s98)
		(s100 a9 s35)
		(s101 a8 s100)
		(s102 a7 s101)
		(s103 a6 s102)
		(s103 a6 s20)
		(s104 a6 s22)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:14:59
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 },
	initialStates = {s49 },
	finalStates = {s0 s10 s22 s31 s32 s50 s53 s57 s63 },
	transitions = {
		(s0 a5 s4)
		(s0 a6 s12)
		(s0 a8 s4)
		(s0 a9 s11)
		(s0 a13 s4)
		(s0 a14 s4)
		(s0 a15 s4)
		(s0 a16 s4)
		(s0 a17 s4)
		(s0 a18 s4)
		(s0 a19 s4)
		(s0 a20 s4)
		(s0 a21 s4)
		(s0 a22 s4)
		(s0 a23 s4)
		(s0 a24 s4)
		(s0 a25 s2)
		(s0 a26 s4)
		(s0 a27 s4)
		(s0 a28 s58)
		(s0 a31 s4)
		(s0 a32 s2)
		(s0 a33 s4)
		(s0 a35 s27)
		(s0 a37 s4)
		(s0 a38 s4)
		(s0 a39 s4)
		(s1 a7 s33)
		(s2 a33 s2)
		(s2 a5 s2)
		(s2 a6 s9)
		(s2 a26 s2)
		(s2 a38 s2)
		(s2 a39 s2)
		(s3 a5 s0)
		(s3 a5 s3)
		(s3 a6 s3)
		(s3 a6 s10)
		(s3 a7 s0)
		(s3 a7 s3)
		(s3 a8 s0)
		(s3 a8 s3)
		(s3 a9 s3)
		(s3 a9 s63)
		(s3 a10 s0)
		(s3 a10 s3)
		(s3 a13 s0)
		(s3 a13 s3)
		(s3 a14 s0)
		(s3 a14 s3)
		(s3 a15 s0)
		(s3 a15 s3)
		(s3 a16 s0)
		(s3 a16 s3)
		(s3 a17 s0)
		(s3 a17 s3)
		(s3 a18 s0)
		(s3 a18 s3)
		(s3 a19 s0)
		(s3 a19 s3)
		(s3 a20 s0)
		(s3 a20 s3)
		(s3 a21 s0)
		(s3 a21 s3)
		(s3 a22 s0)
		(s3 a22 s3)
		(s3 a23 s0)
		(s3 a23 s3)
		(s3 a24 s0)
		(s3 a24 s3)
		(s3 a25 s0)
		(s3 a25 s3)
		(s3 a26 s0)
		(s3 a26 s3)
		(s3 a27 s0)
		(s3 a27 s3)
		(s3 a28 s50)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a29 s31)
		(s3 a30 s0)
		(s3 a30 s3)
		(s3 a31 s0)
		(s3 a31 s3)
		(s3 a32 s0)
		(s3 a32 s3)
		(s3 a33 s0)
		(s3 a33 s3)
		(s3 a34 s0)
		(s3 a34 s3)
		(s3 a35 s32)
		(s3 a35 s3)
		(s3 a36 s0)
		(s3 a36 s3)
		(s3 a37 s0)
		(s3 a37 s3)
		(s3 a38 s0)
		(s3 a38 s3)
		(s3 a39 s0)
		(s3 a39 s3)
		(s4 a19 s4)
		(s4 a20 s4)
		(s4 a21 s4)
		(s4 a22 s4)
		(s4 a23 s4)
		(s4 a24 s4)
		(s4 a5 s4)
		(s4 a6 s12)
		(s4 a25 s2)
		(s4 a27 s4)
		(s4 a28 s58)
		(s4 a9 s11)
		(s4 a31 s4)
		(s4 a32 s2)
		(s4 a35 s27)
		(s4 a14 s4)
		(s4 a15 s4)
		(s4 a38 s4)
		(s4 a16 s4)
		(s4 a39 s4)
		(s4 a17 s4)
		(s4 a18 s4)
		(s5 a13 s16)
		(s6 a13 s23)
		(s7 a13 s25)
		(s8 a5 s8)
		(s8 a6 s40)
		(s8 a26 s8)
		(s8 a39 s8)
		(s9 a7 s19)
		(s10 a7 s18)
		(s11 a10 s5)
		(s12 a7 s18)
		(s13 a36 s69)
		(s14 a35 s30)
		(s15 a9 s48)
		(s16 a19 s4)
		(s16 a21 s16)
		(s16 a22 s16)
		(s16 a23 s4)
		(s16 a27 s16)
		(s16 a28 s20)
		(s16 a31 s16)
		(s16 a32 s47)
		(s16 a14 s16)
		(s16 a15 s16)
		(s16 a16 s16)
		(s16 a17 s16)
		(s16 a18 s16)
		(s17 a20 s17)
		(s17 a24 s17)
		(s17 a25 s8)
		(s18 a8 s36)
		(s19 a8 s34)
		(s20 a29 s21)
		(s21 a30 s16)
		(s21 a34 s24)
		(s22 a9 s61)
		(s23 a19 s42)
		(s23 a21 s23)
		(s23 a22 s23)
		(s23 a23 s42)
		(s23 a27 s23)
		(s23 a28 s43)
		(s23 a31 s23)
		(s23 a32 s47)
		(s23 a14 s23)
		(s23 a15 s23)
		(s23 a16 s23)
		(s23 a17 s23)
		(s23 a18 s23)
		(s24 a35 s29)
		(s25 a19 s17)
		(s25 a21 s25)
		(s25 a22 s25)
		(s25 a23 s17)
		(s25 a27 s25)
		(s25 a28 s45)
		(s25 a31 s25)
		(s25 a32 s51)
		(s25 a14 s25)
		(s25 a15 s25)
		(s25 a16 s25)
		(s25 a17 s25)
		(s25 a18 s25)
		(s26 a8 s15)
		(s27 a36 s52)
		(s28 a30 s25)
		(s28 a34 s24)
		(s29 a36 s57)
		(s30 a36 s55)
		(s31 a30 s4)
		(s31 a34 s4)
		(s32 a36 s52)
		(s33 a8 s22)
		(s34 a9 s60)
		(s35 a30 s23)
		(s35 a34 s14)
		(s36 a9 s61)
		(s37 a35 s13)
		(s38 a38 s4)
		(s39 a38 s2)
		(s40 a7 s26)
		(s41 a38 s2)
		(s42 a20 s42)
		(s42 a24 s42)
		(s42 a25 s2)
		(s43 a29 s35)
		(s44 a38 s8)
		(s45 a29 s28)
		(s46 a30 s68)
		(s46 a34 s37)
		(s47 a33 s47)
		(s47 a38 s2)
		(s48 a10 s59)
		(s49 a1 s49)
		(s49 a1 s53)
		(s49 a3 s0)
		(s49 a3 s3)
		(s50 a29 s62)
		(s51 a33 s51)
		(s51 a38 s8)
		(s52 a37 s39)
		(s53 a3 s2)
		(s54 a37 s66)
		(s55 a37 s41)
		(s56 a29 s46)
		(s57 a37 s38)
		(s58 a29 s62)
		(s59 a13 s68)
		(s60 a10 s6)
		(s61 a10 s7)
		(s62 a30 s4)
		(s62 a34 s64)
		(s63 a10 s5)
		(s64 a35 s65)
		(s65 a36 s54)
		(s66 a38 s70)
		(s67 a20 s67)
		(s67 a24 s67)
		(s67 a25 s8)
		(s68 a19 s67)
		(s68 a21 s68)
		(s68 a22 s68)
		(s68 a23 s67)
		(s68 a27 s68)
		(s68 a28 s56)
		(s68 a31 s68)
		(s68 a32 s51)
		(s68 a14 s68)
		(s68 a15 s68)
		(s68 a16 s68)
		(s68 a17 s68)
		(s68 a18 s68)
		(s69 a37 s44)
		(s70 a5 s70)
		(s70 a6 s1)
		(s70 a39 s70)
	}
);
