// Testfile dumped by Ultimate at 2017/06/12 01:48:41
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 },
	initialStates = {s57 },
	finalStates = {s0 s1 s6 s7 s8 s9 s12 s13 s16 s17 s24 s26 s30 s31 s40 s41 s43 s45 s57 s59 s60 s61 s62 s66 s69 s71 s72 s74 s76 s80 s81 },
	transitions = {
		(s0 a5 s1)
		(s1 a7 s51)
		(s2 a5 s3)
		(s3 a7 s55)
		(s4 a10 s5)
		(s5 a5 s52)
		(s6 a2 s7)
		(s6 a3 s7)
		(s7 a4 s0)
		(s8 a12 s9)
		(s9 a13 s17)
		(s9 a13 s19)
		(s10 a29 s11)
		(s11 a30 s49)
		(s12 a26 s13)
		(s13 a32 s30)
		(s14 a26 s15)
		(s15 a32 s32)
		(s16 a13 s17)
		(s17 a15 s41)
		(s18 a13 s19)
		(s19 a15 s42)
		(s20 a30 s21)
		(s21 a31 s30)
		(s21 a31 s79)
		(s22 a23 s23)
		(s23 a24 s36)
		(s24 a35 s16)
		(s25 a35 s18)
		(s26 a21 s12)
		(s27 a21 s28)
		(s28 a22 s63)
		(s28 a26 s64)
		(s29 a9 s4)
		(s30 a33 s31)
		(s31 a16 s43)
		(s32 a33 s33)
		(s33 a16 s44)
		(s34 a28 s35)
		(s35 a29 s20)
		(s36 a25 s15)
		(s36 a25 s37)
		(s37 a32 s50)
		(s37 a27 s58)
		(s38 a24 s39)
		(s39 a25 s13)
		(s39 a25 s64)
		(s40 a1 s6)
		(s41 a16 s44)
		(s41 a16 s43)
		(s42 a16 s78)
		(s42 a16 s47)
		(s43 a17 s69)
		(s44 a18 s46)
		(s45 a18 s46)
		(s46 a19 s48)
		(s47 a17 s25)
		(s48 a20 s54)
		(s48 a20 s26)
		(s49 a31 s32)
		(s49 a31 s50)
		(s50 a33 s83)
		(s51 a8 s29)
		(s52 a7 s53)
		(s53 a8 s67)
		(s54 a21 s14)
		(s55 a8 s56)
		(s56 a9 s65)
		(s57 a0 s40)
		(s58 a28 s10)
		(s59 a6 s60)
		(s60 a12 s80)
		(s61 a5 s62)
		(s62 a6 s8)
		(s63 a23 s38)
		(s64 a32 s79)
		(s64 a27 s34)
		(s65 a10 s66)
		(s65 a10 s5)
		(s66 a5 s59)
		(s67 a9 s68)
		(s68 a10 s61)
		(s68 a10 s2)
		(s69 a35 s76)
		(s70 a22 s22)
		(s70 a26 s37)
		(s71 a16 s45)
		(s71 a16 s72)
		(s72 a17 s24)
		(s73 a21 s70)
		(s74 a15 s71)
		(s75 a20 s73)
		(s75 a20 s27)
		(s76 a13 s74)
		(s77 a19 s75)
		(s78 a18 s77)
		(s79 a33 s82)
		(s80 a13 s81)
		(s80 a13 s74)
		(s81 a15 s42)
		(s82 a16 s47)
		(s83 a16 s78)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:48:41
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s7 },
	finalStates = {s0 s6 s8 s10 },
	transitions = {
		(s0 a5 s3)
		(s1 a32 s1)
		(s1 a33 s5)
		(s1 a16 s1)
		(s1 a17 s8)
		(s1 a18 s1)
		(s1 a19 s1)
		(s1 a20 s1)
		(s1 a21 s1)
		(s1 a22 s1)
		(s1 a23 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a30 s1)
		(s1 a31 s1)
		(s2 a32 s2)
		(s2 a15 s2)
		(s2 a33 s9)
		(s2 a16 s2)
		(s2 a17 s11)
		(s2 a18 s2)
		(s2 a19 s2)
		(s2 a20 s2)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a26 s2)
		(s2 a27 s2)
		(s2 a28 s2)
		(s2 a29 s2)
		(s2 a30 s2)
		(s2 a31 s2)
		(s3 a7 s3)
		(s3 a8 s3)
		(s3 a9 s3)
		(s3 a10 s10)
		(s4 a7 s4)
		(s4 a8 s4)
		(s4 a9 s4)
		(s4 a5 s4)
		(s5 a32 s5)
		(s5 a33 s5)
		(s5 a35 s5)
		(s5 a5 s5)
		(s5 a6 s5)
		(s5 a7 s5)
		(s5 a8 s5)
		(s5 a9 s5)
		(s5 a10 s5)
		(s5 a13 s5)
		(s5 a15 s1)
		(s5 a16 s5)
		(s5 a17 s5)
		(s5 a18 s5)
		(s5 a19 s5)
		(s5 a20 s5)
		(s5 a21 s5)
		(s5 a22 s5)
		(s5 a23 s5)
		(s5 a24 s5)
		(s5 a25 s5)
		(s5 a26 s5)
		(s5 a27 s5)
		(s5 a28 s5)
		(s5 a29 s5)
		(s5 a30 s5)
		(s5 a31 s5)
		(s6 a16 s2)
		(s6 a13 s2)
		(s7 a0 s10)
		(s7 a0 s7)
		(s7 a32 s10)
		(s7 a32 s7)
		(s7 a1 s10)
		(s7 a1 s7)
		(s7 a33 s10)
		(s7 a33 s7)
		(s7 a2 s10)
		(s7 a2 s7)
		(s7 a3 s10)
		(s7 a3 s7)
		(s7 a35 s10)
		(s7 a35 s7)
		(s7 a4 s0)
		(s7 a4 s7)
		(s7 a5 s10)
		(s7 a5 s7)
		(s7 a6 s10)
		(s7 a6 s7)
		(s7 a7 s10)
		(s7 a7 s7)
		(s7 a8 s10)
		(s7 a8 s7)
		(s7 a9 s10)
		(s7 a9 s7)
		(s7 a10 s10)
		(s7 a10 s7)
		(s7 a12 s10)
		(s7 a12 s7)
		(s7 a13 s10)
		(s7 a13 s7)
		(s7 a15 s6)
		(s7 a15 s7)
		(s7 a16 s10)
		(s7 a16 s7)
		(s7 a17 s10)
		(s7 a17 s7)
		(s7 a18 s10)
		(s7 a18 s7)
		(s7 a19 s10)
		(s7 a19 s7)
		(s7 a20 s10)
		(s7 a20 s7)
		(s7 a21 s10)
		(s7 a21 s7)
		(s7 a22 s10)
		(s7 a22 s7)
		(s7 a23 s10)
		(s7 a23 s7)
		(s7 a24 s10)
		(s7 a24 s7)
		(s7 a25 s10)
		(s7 a25 s7)
		(s7 a26 s10)
		(s7 a26 s7)
		(s7 a27 s10)
		(s7 a27 s7)
		(s7 a28 s10)
		(s7 a28 s7)
		(s7 a29 s10)
		(s7 a29 s7)
		(s7 a30 s10)
		(s7 a30 s7)
		(s7 a31 s10)
		(s7 a31 s7)
		(s8 a35 s6)
		(s9 a32 s9)
		(s9 a33 s9)
		(s9 a2 s9)
		(s9 a3 s9)
		(s9 a35 s12)
		(s9 a4 s4)
		(s9 a6 s9)
		(s9 a7 s9)
		(s9 a8 s9)
		(s9 a9 s9)
		(s9 a10 s12)
		(s9 a15 s2)
		(s9 a16 s9)
		(s9 a17 s9)
		(s9 a18 s9)
		(s9 a19 s9)
		(s9 a20 s9)
		(s9 a21 s9)
		(s9 a22 s9)
		(s9 a23 s9)
		(s9 a24 s9)
		(s9 a25 s9)
		(s9 a26 s9)
		(s9 a27 s9)
		(s9 a28 s9)
		(s9 a29 s9)
		(s9 a30 s9)
		(s9 a31 s9)
		(s10 a32 s9)
		(s10 a1 s9)
		(s10 a33 s9)
		(s10 a2 s9)
		(s10 a3 s9)
		(s10 a35 s12)
		(s10 a4 s4)
		(s10 a5 s9)
		(s10 a6 s9)
		(s10 a7 s9)
		(s10 a8 s9)
		(s10 a9 s9)
		(s10 a10 s12)
		(s10 a13 s9)
		(s10 a15 s2)
		(s10 a16 s9)
		(s10 a17 s9)
		(s10 a18 s9)
		(s10 a19 s9)
		(s10 a20 s9)
		(s10 a21 s9)
		(s10 a22 s9)
		(s10 a23 s9)
		(s10 a24 s9)
		(s10 a25 s9)
		(s10 a26 s9)
		(s10 a27 s9)
		(s10 a28 s9)
		(s10 a29 s9)
		(s10 a30 s9)
		(s10 a31 s9)
		(s11 a35 s6)
		(s12 a32 s12)
		(s12 a33 s12)
		(s12 a35 s5)
		(s12 a5 s12)
		(s12 a6 s12)
		(s12 a7 s12)
		(s12 a8 s12)
		(s12 a9 s12)
		(s12 a10 s5)
		(s12 a13 s12)
		(s12 a15 s13)
		(s12 a16 s12)
		(s12 a17 s12)
		(s12 a18 s12)
		(s12 a19 s12)
		(s12 a20 s12)
		(s12 a21 s12)
		(s12 a22 s12)
		(s12 a23 s12)
		(s12 a24 s12)
		(s12 a25 s12)
		(s12 a26 s12)
		(s12 a27 s12)
		(s12 a28 s12)
		(s12 a29 s12)
		(s12 a30 s12)
		(s12 a31 s12)
		(s13 a32 s13)
		(s13 a33 s12)
		(s13 a16 s13)
		(s13 a17 s8)
		(s13 a18 s13)
		(s13 a19 s13)
		(s13 a20 s13)
		(s13 a21 s13)
		(s13 a22 s13)
		(s13 a23 s13)
		(s13 a24 s13)
		(s13 a25 s13)
		(s13 a26 s13)
		(s13 a27 s13)
		(s13 a28 s13)
		(s13 a29 s13)
		(s13 a30 s13)
		(s13 a31 s13)
	}
);
