// Testfile dumped by Ultimate at 2017/06/12 01:34:57
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	initialStates = {s24 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	transitions = {
		(s0 a23 s1)
		(s1 a24 s9)
		(s2 a26 s3)
		(s3 a27 s23)
		(s4 a8 s5)
		(s5 a9 s6)
		(s6 a10 s14)
		(s7 a21 s8)
		(s8 a22 s0)
		(s9 a25 s2)
		(s10 a3 s11)
		(s11 a4 s21)
		(s12 a16 s13)
		(s13 a17 s17)
		(s14 a11 s15)
		(s15 a12 s25)
		(s16 a7 s4)
		(s17 a18 s18)
		(s18 a19 s7)
		(s19 a1 s20)
		(s20 a2 s10)
		(s21 a5 s22)
		(s22 a6 s16)
		(s23 a17 s28)
		(s24 a0 s19)
		(s25 a13 s12)
		(s26 a20 s22)
		(s26 a21 s8)
		(s27 a19 s26)
		(s28 a18 s27)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:35:57
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 s107 s108 s109 s110 s111 s112 s113 s114 s115 s116 s117 s118 s119 s120 s121 s122 },
	initialStates = {s30 },
	finalStates = {s5 s15 s18 s32 s38 s43 s69 s70 s79 s92 s96 s104 s117 s118 },
	transitions = {
		(s0 a9 s53)
		(s1 a9 s11)
		(s2 a9 s56)
		(s3 a9 s14)
		(s4 a9 s57)
		(s5 a9 s6)
		(s6 a10 s35)
		(s7 a17 s7)
		(s7 a18 s100)
		(s7 a22 s10)
		(s7 a24 s7)
		(s7 a25 s58)
		(s7 a27 s7)
		(s8 a23 s28)
		(s9 a23 s7)
		(s10 a23 s7)
		(s11 a10 s36)
		(s12 a23 s65)
		(s13 a23 s29)
		(s14 a10 s37)
		(s15 a23 s28)
		(s16 a10 s33)
		(s17 a23 s99)
		(s18 a27 s19)
		(s19 a17 s19)
		(s19 a18 s102)
		(s20 a20 s70)
		(s20 a21 s7)
		(s21 a20 s50)
		(s21 a21 s76)
		(s22 a20 s72)
		(s22 a21 s99)
		(s23 a11 s45)
		(s24 a20 s68)
		(s24 a21 s76)
		(s25 a11 s46)
		(s26 a11 s47)
		(s27 a11 s44)
		(s28 a17 s28)
		(s28 a18 s101)
		(s28 a4 s28)
		(s28 a5 s28)
		(s28 a6 s28)
		(s28 a24 s28)
		(s28 a7 s115)
		(s28 a25 s61)
		(s28 a27 s28)
		(s29 a17 s29)
		(s29 a18 s103)
		(s29 a3 s29)
		(s29 a4 s29)
		(s29 a5 s29)
		(s29 a6 s29)
		(s29 a24 s29)
		(s29 a7 s116)
		(s29 a25 s74)
		(s29 a27 s29)
		(s30 a0 s32)
		(s30 a0 s30)
		(s30 a1 s96)
		(s30 a1 s30)
		(s30 a2 s32)
		(s30 a2 s30)
		(s30 a3 s32)
		(s30 a3 s30)
		(s30 a4 s32)
		(s30 a4 s30)
		(s30 a5 s32)
		(s30 a5 s30)
		(s30 a6 s32)
		(s30 a6 s30)
		(s30 a7 s30)
		(s30 a7 s118)
		(s30 a8 s5)
		(s30 a8 s30)
		(s30 a9 s32)
		(s30 a9 s30)
		(s30 a10 s38)
		(s30 a10 s30)
		(s30 a11 s92)
		(s30 a11 s30)
		(s30 a12 s117)
		(s30 a12 s30)
		(s30 a13 s32)
		(s30 a13 s30)
		(s30 a16 s32)
		(s30 a16 s30)
		(s30 a17 s32)
		(s30 a17 s30)
		(s30 a18 s43)
		(s30 a18 s30)
		(s30 a19 s79)
		(s30 a19 s30)
		(s30 a20 s32)
		(s30 a20 s30)
		(s30 a21 s32)
		(s30 a21 s30)
		(s30 a22 s30)
		(s30 a22 s15)
		(s30 a23 s32)
		(s30 a23 s30)
		(s30 a24 s32)
		(s30 a24 s30)
		(s30 a25 s69)
		(s30 a25 s30)
		(s30 a26 s32)
		(s30 a26 s30)
		(s30 a27 s32)
		(s30 a27 s30)
		(s31 a17 s31)
		(s31 a18 s39)
		(s31 a22 s8)
		(s31 a6 s31)
		(s31 a7 s48)
		(s31 a25 s54)
		(s31 a27 s31)
		(s32 a17 s31)
		(s32 a1 s95)
		(s32 a18 s39)
		(s32 a3 s28)
		(s32 a4 s28)
		(s32 a5 s28)
		(s32 a22 s8)
		(s32 a6 s31)
		(s32 a24 s31)
		(s32 a7 s48)
		(s32 a25 s54)
		(s32 a27 s31)
		(s32 a10 s34)
		(s32 a16 s31)
		(s33 a11 s80)
		(s34 a11 s83)
		(s35 a11 s85)
		(s36 a11 s87)
		(s37 a11 s89)
		(s38 a11 s83)
		(s39 a19 s78)
		(s40 a19 s73)
		(s41 a19 s75)
		(s42 a19 s77)
		(s43 a19 s78)
		(s44 a12 s86)
		(s45 a12 s88)
		(s46 a12 s82)
		(s47 a12 s84)
		(s48 a8 s49)
		(s49 a9 s16)
		(s50 a6 s50)
		(s50 a7 s91)
		(s51 a16 s120)
		(s52 a26 s18)
		(s53 a10 s23)
		(s54 a26 s31)
		(s55 a16 s120)
		(s56 a10 s25)
		(s57 a10 s26)
		(s58 a26 s7)
		(s59 a16 s121)
		(s60 a24 s60)
		(s60 a25 s64)
		(s61 a26 s28)
		(s62 a16 s121)
		(s63 a10 s27)
		(s64 a26 s18)
		(s65 a24 s65)
		(s65 a25 s67)
		(s66 a16 s71)
		(s67 a26 s29)
		(s68 a6 s68)
		(s68 a7 s93)
		(s69 a26 s31)
		(s70 a6 s72)
		(s71 a17 s71)
		(s71 a18 s40)
		(s71 a22 s81)
		(s72 a6 s72)
		(s72 a7 s90)
		(s73 a21 s71)
		(s74 a26 s29)
		(s75 a21 s98)
		(s76 a22 s13)
		(s77 a21 s121)
		(s78 a20 s97)
		(s78 a21 s99)
		(s79 a20 s31)
		(s79 a21 s31)
		(s80 a12 s108)
		(s81 a23 s60)
		(s82 a13 s105)
		(s83 a12 s110)
		(s84 a13 s106)
		(s85 a12 s111)
		(s86 a13 s107)
		(s87 a12 s112)
		(s88 a13 s109)
		(s89 a12 s113)
		(s90 a8 s122)
		(s91 a8 s0)
		(s92 a12 s114)
		(s93 a8 s2)
		(s94 a8 s4)
		(s95 a2 s29)
		(s96 a2 s29)
		(s97 a6 s97)
		(s97 a7 s94)
		(s98 a22 s17)
		(s99 a22 s9)
		(s99 a24 s99)
		(s99 a25 s52)
		(s100 a19 s20)
		(s101 a19 s21)
		(s102 a19 s22)
		(s103 a19 s24)
		(s104 a17 s104)
		(s104 a18 s104)
		(s104 a19 s104)
		(s104 a20 s104)
		(s104 a21 s104)
		(s104 a22 s104)
		(s104 a23 s104)
		(s104 a6 s104)
		(s104 a24 s104)
		(s104 a25 s104)
		(s104 a7 s104)
		(s104 a26 s104)
		(s104 a8 s104)
		(s104 a27 s104)
		(s104 a9 s104)
		(s104 a10 s104)
		(s104 a11 s104)
		(s104 a12 s104)
		(s104 a13 s104)
		(s104 a16 s104)
		(s105 a16 s104)
		(s106 a16 s104)
		(s107 a16 s104)
		(s108 a13 s66)
		(s109 a16 s104)
		(s110 a13 s51)
		(s111 a13 s55)
		(s112 a13 s59)
		(s113 a13 s62)
		(s114 a13 s51)
		(s115 a8 s1)
		(s116 a8 s3)
		(s117 a13 s119)
		(s118 a8 s49)
		(s119 a16 s31)
		(s120 a17 s120)
		(s120 a18 s41)
		(s121 a17 s121)
		(s121 a18 s42)
		(s121 a22 s12)
		(s122 a9 s63)
	}
);
