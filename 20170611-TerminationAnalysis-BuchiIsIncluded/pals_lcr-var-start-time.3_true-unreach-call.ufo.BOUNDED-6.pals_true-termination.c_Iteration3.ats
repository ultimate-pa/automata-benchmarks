// Testfile dumped by Ultimate at 2017/06/11 19:48:58
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 a98 a99 a100 a101 a102 a103 a104 a105 a106 a107 a108 a109 a110 a111 a112 a113 a114 a115 a116 a117 a118 a119 a120 a121 a122 a123 a124 a125 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 },
	initialStates = {s3 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 },
	transitions = {
		(s0 a20 s68)
		(s1 a123 s10)
		(s1 a124 s10)
		(s2 a121 s10)
		(s2 a122 s1)
		(s3 a0 s30)
		(s4 a4 s5)
		(s5 a6 s6)
		(s6 a8 s49)
		(s7 a16 s8)
		(s7 a23 s9)
		(s8 a18 s12)
		(s8 a19 s12)
		(s9 a24 s11)
		(s10 a3 s11)
		(s11 a26 s16)
		(s12 a21 s9)
		(s13 a88 s14)
		(s13 a92 s15)
		(s14 a89 s17)
		(s14 a90 s17)
		(s15 a93 s46)
		(s16 a28 s65)
		(s17 a91 s15)
		(s18 a33 s19)
		(s19 a35 s20)
		(s20 a37 s63)
		(s21 a83 s22)
		(s21 a87 s13)
		(s22 a84 s23)
		(s22 a85 s23)
		(s23 a86 s15)
		(s24 a34 s25)
		(s25 a39 s36)
		(s26 a96 s27)
		(s26 a103 s28)
		(s27 a102 s28)
		(s27 a97 s29)
		(s28 a104 s35)
		(s29 a98 s28)
		(s29 a99 s64)
		(s30 a1 s4)
		(s31 a113 s32)
		(s31 a112 s32)
		(s32 a114 s34)
		(s33 a109 s34)
		(s34 a116 s35)
		(s35 a117 s59)
		(s36 a41 s44)
		(s37 a67 s38)
		(s38 a68 s39)
		(s39 a69 s40)
		(s40 a71 s50)
		(s41 a77 s42)
		(s41 a78 s42)
		(s42 a81 s46)
		(s43 a107 s33)
		(s43 a108 s33)
		(s44 a47 s45)
		(s45 a49 s39)
		(s46 a94 s47)
		(s47 a95 s26)
		(s47 a105 s52)
		(s48 a115 s34)
		(s48 a111 s31)
		(s49 a10 s51)
		(s50 a82 s21)
		(s50 a72 s54)
		(s51 a13 s53)
		(s52 a110 s48)
		(s52 a106 s43)
		(s53 a15 s71)
		(s54 a73 s55)
		(s54 a80 s42)
		(s55 a79 s42)
		(s55 a74 s56)
		(s56 a75 s42)
		(s56 a76 s41)
		(s57 a2 s10)
		(s57 a119 s58)
		(s58 a120 s2)
		(s58 a125 s10)
		(s59 a5 s61)
		(s59 a118 s57)
		(s60 a12 s9)
		(s61 a14 s7)
		(s61 a7 s62)
		(s62 a9 s60)
		(s62 a11 s60)
		(s63 a40 s37)
		(s64 a100 s28)
		(s64 a101 s28)
		(s65 a31 s25)
		(s65 a32 s24)
		(s66 a29 s67)
		(s67 a30 s18)
		(s68 a22 s69)
		(s69 a25 s70)
		(s70 a27 s66)
		(s71 a17 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 19:49:00
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 a98 a99 a100 a101 a102 a103 a104 a105 a106 a107 a108 a109 a110 a111 a112 a113 a114 a115 a116 a117 a118 a119 a120 a121 a122 a123 a124 a125 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s5 },
	finalStates = {s1 s6 },
	transitions = {
		(s0 a75 s0)
		(s0 a2 s0)
		(s0 a76 s0)
		(s0 a3 s0)
		(s0 a77 s0)
		(s0 a5 s0)
		(s0 a6 s0)
		(s0 a78 s0)
		(s0 a7 s0)
		(s0 a8 s0)
		(s0 a79 s0)
		(s0 a9 s0)
		(s0 a10 s0)
		(s0 a11 s0)
		(s0 a81 s0)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s0 a17 s0)
		(s0 a84 s0)
		(s0 a18 s0)
		(s0 a20 s0)
		(s0 a85 s0)
		(s0 a19 s0)
		(s0 a86 s0)
		(s0 a21 s0)
		(s0 a22 s0)
		(s0 a23 s0)
		(s0 a25 s0)
		(s0 a24 s0)
		(s0 a88 s0)
		(s0 a27 s0)
		(s0 a26 s0)
		(s0 a89 s0)
		(s0 a29 s0)
		(s0 a90 s0)
		(s0 a28 s0)
		(s0 a91 s0)
		(s0 a30 s0)
		(s0 a31 s0)
		(s0 a92 s0)
		(s0 a32 s0)
		(s0 a33 s0)
		(s0 a93 s0)
		(s0 a34 s0)
		(s0 a35 s0)
		(s0 a94 s0)
		(s0 a37 s0)
		(s0 a95 s0)
		(s0 a40 s0)
		(s0 a96 s0)
		(s0 a39 s0)
		(s0 a41 s0)
		(s0 a97 s0)
		(s0 a98 s0)
		(s0 a99 s0)
		(s0 a47 s0)
		(s0 a100 s0)
		(s0 a49 s2)
		(s0 a101 s0)
		(s0 a102 s0)
		(s0 a103 s0)
		(s0 a104 s0)
		(s0 a105 s0)
		(s0 a106 s0)
		(s0 a107 s0)
		(s0 a108 s0)
		(s0 a109 s0)
		(s0 a110 s0)
		(s0 a111 s0)
		(s0 a112 s0)
		(s0 a113 s0)
		(s0 a114 s0)
		(s0 a115 s0)
		(s0 a116 s0)
		(s0 a67 s0)
		(s0 a117 s0)
		(s0 a68 s4)
		(s0 a118 s0)
		(s0 a119 s0)
		(s0 a120 s0)
		(s0 a121 s0)
		(s0 a71 s3)
		(s0 a122 s0)
		(s0 a123 s0)
		(s0 a124 s0)
		(s0 a74 s0)
		(s0 a125 s0)
		(s1 a75 s0)
		(s1 a2 s0)
		(s1 a76 s0)
		(s1 a3 s0)
		(s1 a4 s0)
		(s1 a77 s0)
		(s1 a5 s0)
		(s1 a6 s0)
		(s1 a78 s0)
		(s1 a7 s0)
		(s1 a8 s0)
		(s1 a79 s0)
		(s1 a9 s0)
		(s1 a10 s0)
		(s1 a80 s0)
		(s1 a11 s0)
		(s1 a81 s0)
		(s1 a12 s0)
		(s1 a13 s0)
		(s1 a14 s0)
		(s1 a15 s0)
		(s1 a83 s0)
		(s1 a16 s0)
		(s1 a17 s0)
		(s1 a84 s0)
		(s1 a18 s0)
		(s1 a20 s0)
		(s1 a85 s0)
		(s1 a19 s0)
		(s1 a86 s0)
		(s1 a21 s0)
		(s1 a22 s0)
		(s1 a87 s0)
		(s1 a23 s0)
		(s1 a25 s0)
		(s1 a24 s0)
		(s1 a88 s0)
		(s1 a27 s0)
		(s1 a26 s0)
		(s1 a89 s0)
		(s1 a29 s0)
		(s1 a90 s0)
		(s1 a28 s0)
		(s1 a91 s0)
		(s1 a30 s0)
		(s1 a31 s0)
		(s1 a92 s0)
		(s1 a32 s0)
		(s1 a33 s0)
		(s1 a93 s0)
		(s1 a34 s0)
		(s1 a35 s0)
		(s1 a94 s0)
		(s1 a37 s0)
		(s1 a95 s0)
		(s1 a40 s0)
		(s1 a96 s0)
		(s1 a39 s0)
		(s1 a41 s0)
		(s1 a97 s0)
		(s1 a98 s0)
		(s1 a99 s0)
		(s1 a47 s0)
		(s1 a100 s0)
		(s1 a49 s2)
		(s1 a101 s0)
		(s1 a102 s0)
		(s1 a103 s0)
		(s1 a104 s0)
		(s1 a105 s0)
		(s1 a106 s0)
		(s1 a107 s0)
		(s1 a108 s0)
		(s1 a109 s0)
		(s1 a110 s0)
		(s1 a111 s0)
		(s1 a112 s0)
		(s1 a113 s0)
		(s1 a114 s0)
		(s1 a115 s0)
		(s1 a116 s0)
		(s1 a67 s0)
		(s1 a117 s0)
		(s1 a68 s4)
		(s1 a118 s0)
		(s1 a119 s0)
		(s1 a69 s0)
		(s1 a120 s0)
		(s1 a71 s3)
		(s1 a121 s0)
		(s1 a122 s0)
		(s1 a123 s0)
		(s1 a73 s0)
		(s1 a124 s0)
		(s1 a74 s0)
		(s1 a125 s0)
		(s2 a71 s6)
		(s2 a69 s2)
		(s3 a75 s3)
		(s3 a2 s3)
		(s3 a76 s3)
		(s3 a3 s3)
		(s3 a77 s3)
		(s3 a5 s3)
		(s3 a78 s3)
		(s3 a7 s3)
		(s3 a79 s3)
		(s3 a9 s3)
		(s3 a80 s3)
		(s3 a11 s3)
		(s3 a81 s3)
		(s3 a12 s3)
		(s3 a82 s3)
		(s3 a14 s3)
		(s3 a83 s3)
		(s3 a16 s3)
		(s3 a84 s3)
		(s3 a18 s3)
		(s3 a85 s3)
		(s3 a19 s3)
		(s3 a86 s3)
		(s3 a21 s3)
		(s3 a87 s3)
		(s3 a23 s3)
		(s3 a24 s3)
		(s3 a88 s3)
		(s3 a26 s3)
		(s3 a89 s3)
		(s3 a90 s3)
		(s3 a28 s3)
		(s3 a91 s3)
		(s3 a31 s3)
		(s3 a92 s3)
		(s3 a32 s3)
		(s3 a93 s3)
		(s3 a34 s3)
		(s3 a94 s3)
		(s3 a95 s3)
		(s3 a96 s3)
		(s3 a39 s3)
		(s3 a41 s3)
		(s3 a97 s3)
		(s3 a98 s3)
		(s3 a99 s3)
		(s3 a47 s3)
		(s3 a100 s3)
		(s3 a49 s1)
		(s3 a101 s3)
		(s3 a102 s3)
		(s3 a103 s3)
		(s3 a104 s3)
		(s3 a105 s3)
		(s3 a106 s3)
		(s3 a107 s3)
		(s3 a108 s3)
		(s3 a109 s3)
		(s3 a110 s3)
		(s3 a111 s3)
		(s3 a112 s3)
		(s3 a113 s3)
		(s3 a114 s3)
		(s3 a115 s3)
		(s3 a116 s3)
		(s3 a117 s3)
		(s3 a118 s3)
		(s3 a119 s3)
		(s3 a120 s3)
		(s3 a71 s3)
		(s3 a121 s3)
		(s3 a122 s3)
		(s3 a72 s3)
		(s3 a123 s3)
		(s3 a73 s3)
		(s3 a124 s3)
		(s3 a74 s3)
		(s3 a125 s3)
		(s4 a75 s4)
		(s4 a2 s4)
		(s4 a76 s4)
		(s4 a3 s4)
		(s4 a77 s4)
		(s4 a5 s4)
		(s4 a78 s4)
		(s4 a7 s4)
		(s4 a79 s4)
		(s4 a9 s4)
		(s4 a80 s4)
		(s4 a11 s4)
		(s4 a81 s4)
		(s4 a12 s4)
		(s4 a82 s4)
		(s4 a14 s4)
		(s4 a83 s4)
		(s4 a16 s4)
		(s4 a84 s4)
		(s4 a18 s4)
		(s4 a85 s4)
		(s4 a19 s4)
		(s4 a86 s4)
		(s4 a21 s4)
		(s4 a87 s4)
		(s4 a23 s4)
		(s4 a24 s4)
		(s4 a88 s4)
		(s4 a26 s4)
		(s4 a89 s4)
		(s4 a90 s4)
		(s4 a28 s4)
		(s4 a91 s4)
		(s4 a31 s4)
		(s4 a92 s4)
		(s4 a32 s4)
		(s4 a93 s4)
		(s4 a34 s4)
		(s4 a94 s4)
		(s4 a95 s4)
		(s4 a96 s4)
		(s4 a39 s4)
		(s4 a41 s4)
		(s4 a97 s4)
		(s4 a98 s4)
		(s4 a99 s4)
		(s4 a47 s4)
		(s4 a100 s4)
		(s4 a101 s4)
		(s4 a102 s4)
		(s4 a103 s4)
		(s4 a104 s4)
		(s4 a105 s4)
		(s4 a106 s4)
		(s4 a107 s4)
		(s4 a108 s4)
		(s4 a109 s4)
		(s4 a110 s4)
		(s4 a111 s4)
		(s4 a112 s4)
		(s4 a113 s4)
		(s4 a114 s4)
		(s4 a115 s4)
		(s4 a116 s4)
		(s4 a117 s4)
		(s4 a118 s4)
		(s4 a69 s4)
		(s4 a119 s4)
		(s4 a120 s4)
		(s4 a71 s4)
		(s4 a121 s4)
		(s4 a122 s4)
		(s4 a72 s4)
		(s4 a123 s4)
		(s4 a73 s4)
		(s4 a124 s4)
		(s4 a74 s4)
		(s4 a125 s4)
		(s5 a0 s1)
		(s5 a0 s5)
		(s5 a1 s1)
		(s5 a1 s5)
		(s5 a2 s1)
		(s5 a2 s5)
		(s5 a3 s1)
		(s5 a3 s5)
		(s5 a4 s1)
		(s5 a4 s5)
		(s5 a5 s1)
		(s5 a5 s5)
		(s5 a6 s1)
		(s5 a6 s5)
		(s5 a7 s1)
		(s5 a7 s5)
		(s5 a8 s1)
		(s5 a8 s5)
		(s5 a9 s1)
		(s5 a9 s5)
		(s5 a10 s1)
		(s5 a10 s5)
		(s5 a11 s1)
		(s5 a11 s5)
		(s5 a12 s1)
		(s5 a12 s5)
		(s5 a13 s1)
		(s5 a13 s5)
		(s5 a14 s1)
		(s5 a14 s5)
		(s5 a15 s1)
		(s5 a15 s5)
		(s5 a16 s1)
		(s5 a16 s5)
		(s5 a17 s1)
		(s5 a17 s5)
		(s5 a18 s1)
		(s5 a18 s5)
		(s5 a20 s1)
		(s5 a20 s5)
		(s5 a19 s1)
		(s5 a19 s5)
		(s5 a21 s1)
		(s5 a21 s5)
		(s5 a22 s1)
		(s5 a22 s5)
		(s5 a23 s1)
		(s5 a23 s5)
		(s5 a25 s1)
		(s5 a25 s5)
		(s5 a24 s1)
		(s5 a24 s5)
		(s5 a27 s1)
		(s5 a27 s5)
		(s5 a26 s1)
		(s5 a26 s5)
		(s5 a29 s1)
		(s5 a29 s5)
		(s5 a28 s1)
		(s5 a28 s5)
		(s5 a30 s1)
		(s5 a30 s5)
		(s5 a31 s1)
		(s5 a31 s5)
		(s5 a32 s1)
		(s5 a32 s5)
		(s5 a33 s1)
		(s5 a33 s5)
		(s5 a34 s1)
		(s5 a34 s5)
		(s5 a35 s1)
		(s5 a35 s5)
		(s5 a37 s1)
		(s5 a37 s5)
		(s5 a40 s1)
		(s5 a40 s5)
		(s5 a39 s1)
		(s5 a39 s5)
		(s5 a41 s1)
		(s5 a41 s5)
		(s5 a47 s1)
		(s5 a47 s5)
		(s5 a49 s1)
		(s5 a49 s5)
		(s5 a67 s1)
		(s5 a67 s5)
		(s5 a68 s6)
		(s5 a68 s5)
		(s5 a69 s1)
		(s5 a69 s5)
		(s5 a71 s6)
		(s5 a71 s5)
		(s5 a72 s1)
		(s5 a72 s5)
		(s5 a73 s1)
		(s5 a73 s5)
		(s5 a74 s1)
		(s5 a74 s5)
		(s5 a75 s1)
		(s5 a75 s5)
		(s5 a76 s1)
		(s5 a76 s5)
		(s5 a77 s1)
		(s5 a77 s5)
		(s5 a78 s1)
		(s5 a78 s5)
		(s5 a79 s1)
		(s5 a79 s5)
		(s5 a80 s1)
		(s5 a80 s5)
		(s5 a81 s1)
		(s5 a81 s5)
		(s5 a82 s1)
		(s5 a82 s5)
		(s5 a83 s1)
		(s5 a83 s5)
		(s5 a84 s1)
		(s5 a84 s5)
		(s5 a85 s1)
		(s5 a85 s5)
		(s5 a86 s1)
		(s5 a86 s5)
		(s5 a87 s1)
		(s5 a87 s5)
		(s5 a88 s1)
		(s5 a88 s5)
		(s5 a89 s1)
		(s5 a89 s5)
		(s5 a90 s1)
		(s5 a90 s5)
		(s5 a91 s1)
		(s5 a91 s5)
		(s5 a92 s1)
		(s5 a92 s5)
		(s5 a93 s1)
		(s5 a93 s5)
		(s5 a94 s1)
		(s5 a94 s5)
		(s5 a95 s1)
		(s5 a95 s5)
		(s5 a96 s1)
		(s5 a96 s5)
		(s5 a97 s1)
		(s5 a97 s5)
		(s5 a98 s1)
		(s5 a98 s5)
		(s5 a99 s1)
		(s5 a99 s5)
		(s5 a100 s1)
		(s5 a100 s5)
		(s5 a101 s1)
		(s5 a101 s5)
		(s5 a102 s1)
		(s5 a102 s5)
		(s5 a103 s1)
		(s5 a103 s5)
		(s5 a104 s1)
		(s5 a104 s5)
		(s5 a105 s1)
		(s5 a105 s5)
		(s5 a106 s1)
		(s5 a106 s5)
		(s5 a107 s1)
		(s5 a107 s5)
		(s5 a108 s1)
		(s5 a108 s5)
		(s5 a109 s1)
		(s5 a109 s5)
		(s5 a110 s1)
		(s5 a110 s5)
		(s5 a111 s1)
		(s5 a111 s5)
		(s5 a112 s1)
		(s5 a112 s5)
		(s5 a113 s1)
		(s5 a113 s5)
		(s5 a114 s1)
		(s5 a114 s5)
		(s5 a115 s1)
		(s5 a115 s5)
		(s5 a116 s1)
		(s5 a116 s5)
		(s5 a117 s1)
		(s5 a117 s5)
		(s5 a118 s1)
		(s5 a118 s5)
		(s5 a119 s1)
		(s5 a119 s5)
		(s5 a120 s1)
		(s5 a120 s5)
		(s5 a121 s1)
		(s5 a121 s5)
		(s5 a122 s1)
		(s5 a122 s5)
		(s5 a123 s1)
		(s5 a123 s5)
		(s5 a124 s1)
		(s5 a124 s5)
		(s5 a125 s1)
		(s5 a125 s5)
		(s6 a82 s3)
		(s6 a72 s3)
		(s6 a69 s3)
	}
);
