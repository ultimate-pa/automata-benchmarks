// Testfile dumped by Ultimate at 2017/06/11 23:08:36
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s20 },
	finalStates = {s0 s1 s5 s7 s8 s9 s13 s14 s15 s16 s17 s18 s20 },
	transitions = {
		(s0 a8 s1)
		(s1 a18 s7)
		(s2 a9 s3)
		(s3 a10 s10)
		(s4 a16 s5)
		(s4 a16 s6)
		(s5 a7 s0)
		(s6 a7 s2)
		(s7 a19 s8)
		(s8 a21 s16)
		(s9 a7 s2)
		(s10 a11 s11)
		(s11 a12 s12)
		(s12 a15 s4)
		(s12 a13 s19)
		(s13 a1 s14)
		(s14 a2 s15)
		(s14 a3 s15)
		(s15 a4 s18)
		(s16 a22 s17)
		(s17 a23 s7)
		(s17 a24 s7)
		(s18 a6 s9)
		(s19 a14 s21)
		(s20 a0 s13)
		(s21 a16 s22)
		(s22 a7 s0)
		(s22 a7 s2)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:08:37
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s4 },
	finalStates = {s0 s1 },
	transitions = {
		(s0 a22 s2)
		(s0 a19 s2)
		(s1 a15 s6)
		(s1 a16 s6)
		(s1 a2 s6)
		(s1 a18 s3)
		(s1 a3 s6)
		(s1 a4 s6)
		(s1 a19 s6)
		(s1 a6 s6)
		(s1 a21 s2)
		(s1 a7 s6)
		(s1 a23 s5)
		(s1 a8 s6)
		(s1 a9 s6)
		(s1 a10 s6)
		(s1 a11 s6)
		(s1 a12 s6)
		(s1 a13 s6)
		(s1 a14 s6)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a23 s1)
		(s2 a24 s3)
		(s3 a21 s3)
		(s3 a22 s3)
		(s3 a24 s3)
		(s3 a19 s3)
		(s4 a0 s1)
		(s4 a0 s4)
		(s4 a15 s1)
		(s4 a15 s4)
		(s4 a1 s1)
		(s4 a1 s4)
		(s4 a16 s1)
		(s4 a16 s4)
		(s4 a2 s1)
		(s4 a2 s4)
		(s4 a18 s0)
		(s4 a18 s4)
		(s4 a3 s1)
		(s4 a3 s4)
		(s4 a4 s1)
		(s4 a4 s4)
		(s4 a19 s1)
		(s4 a19 s4)
		(s4 a6 s1)
		(s4 a6 s4)
		(s4 a21 s0)
		(s4 a21 s4)
		(s4 a22 s1)
		(s4 a22 s4)
		(s4 a7 s1)
		(s4 a7 s4)
		(s4 a23 s1)
		(s4 a23 s4)
		(s4 a8 s1)
		(s4 a8 s4)
		(s4 a24 s1)
		(s4 a24 s4)
		(s4 a9 s1)
		(s4 a9 s4)
		(s4 a10 s1)
		(s4 a10 s4)
		(s4 a11 s1)
		(s4 a11 s4)
		(s4 a12 s1)
		(s4 a12 s4)
		(s4 a13 s1)
		(s4 a13 s4)
		(s4 a14 s1)
		(s4 a14 s4)
		(s5 a21 s0)
		(s5 a19 s5)
		(s6 a15 s6)
		(s6 a16 s6)
		(s6 a18 s3)
		(s6 a4 s6)
		(s6 a6 s6)
		(s6 a21 s2)
		(s6 a7 s6)
		(s6 a8 s6)
		(s6 a9 s6)
		(s6 a10 s6)
		(s6 a11 s6)
		(s6 a12 s6)
		(s6 a13 s6)
		(s6 a14 s6)
	}
);
