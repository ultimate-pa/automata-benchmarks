// Testfile dumped by Ultimate at 2017/06/12 00:58:08
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 },
	initialStates = {s60 },
	finalStates = {s3 s5 s6 s7 s8 s9 s10 s11 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s29 s31 s32 s35 s36 s37 s40 s44 s45 s46 s47 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s62 },
	transitions = {
		(s0 a29 s36)
		(s0 a29 s38)
		(s1 a28 s0)
		(s2 a30 s31)
		(s2 a30 s39)
		(s3 a41 s12)
		(s4 a27 s1)
		(s5 a40 s3)
		(s5 a40 s29)
		(s6 a39 s5)
		(s7 a36 s16)
		(s8 a35 s7)
		(s9 a34 s8)
		(s10 a42 s11)
		(s11 a43 s27)
		(s12 a42 s13)
		(s13 a43 s27)
		(s13 a43 s28)
		(s14 a5 s15)
		(s15 a6 s20)
		(s16 a37 s17)
		(s17 a39 s62)
		(s18 a13 s19)
		(s19 a14 s59)
		(s20 a7 s26)
		(s21 a9 s22)
		(s22 a10 s44)
		(s23 a35 s24)
		(s24 a36 s46)
		(s25 a3 s14)
		(s26 a8 s21)
		(s27 a45 s47)
		(s28 a45 s48)
		(s29 a41 s10)
		(s30 a41 s12)
		(s31 a31 s32)
		(s32 a34 s23)
		(s33 a32 s34)
		(s34 a27 s43)
		(s35 a18 s17)
		(s36 a30 s37)
		(s37 a31 s9)
		(s38 a30 s39)
		(s39 a32 s4)
		(s40 a28 s41)
		(s40 a28 s42)
		(s41 a29 s61)
		(s42 a29 s2)
		(s43 a28 s41)
		(s44 a11 s45)
		(s45 a12 s18)
		(s45 a15 s57)
		(s46 a37 s6)
		(s47 a40 s29)
		(s48 a40 s30)
		(s49 a38 s17)
		(s49 a26 s50)
		(s50 a27 s40)
		(s51 a20 s52)
		(s52 a21 s53)
		(s53 a22 s49)
		(s53 a23 s54)
		(s54 a24 s55)
		(s55 a25 s49)
		(s56 a1 s25)
		(s57 a19 s51)
		(s58 a17 s35)
		(s59 a19 s51)
		(s59 a16 s58)
		(s60 a0 s56)
		(s61 a30 s33)
		(s61 a30 s39)
		(s62 a40 s29)
		(s62 a40 s30)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 00:58:11
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 },
	initialStates = {s2 },
	finalStates = {s5 s6 s8 s10 },
	transitions = {
		(s0 a35 s0)
		(s0 a27 s0)
		(s0 a36 s0)
		(s0 a37 s0)
		(s0 a28 s12)
		(s0 a45 s0)
		(s0 a31 s0)
		(s0 a32 s0)
		(s0 a40 s0)
		(s0 a41 s12)
		(s0 a34 s0)
		(s1 a45 s3)
		(s1 a42 s1)
		(s1 a43 s1)
		(s2 a0 s6)
		(s2 a0 s2)
		(s2 a1 s6)
		(s2 a1 s2)
		(s2 a3 s6)
		(s2 a3 s2)
		(s2 a40 s6)
		(s2 a40 s2)
		(s2 a5 s6)
		(s2 a5 s2)
		(s2 a6 s6)
		(s2 a6 s2)
		(s2 a41 s2)
		(s2 a41 s5)
		(s2 a7 s6)
		(s2 a7 s2)
		(s2 a42 s6)
		(s2 a42 s2)
		(s2 a8 s6)
		(s2 a8 s2)
		(s2 a43 s6)
		(s2 a43 s2)
		(s2 a9 s6)
		(s2 a9 s13)
		(s2 a45 s6)
		(s2 a45 s2)
		(s3 a40 s3)
		(s3 a41 s1)
		(s4 a19 s4)
		(s4 a20 s4)
		(s4 a21 s4)
		(s4 a38 s4)
		(s4 a22 s4)
		(s4 a3 s4)
		(s4 a23 s4)
		(s4 a24 s4)
		(s4 a25 s4)
		(s4 a40 s4)
		(s4 a41 s1)
		(s4 a11 s4)
		(s4 a45 s4)
		(s4 a12 s4)
		(s4 a13 s4)
		(s4 a14 s4)
		(s4 a15 s4)
		(s4 a16 s4)
		(s4 a17 s4)
		(s4 a18 s4)
		(s5 a42 s7)
		(s6 a1 s4)
		(s6 a38 s4)
		(s6 a3 s4)
		(s6 a40 s4)
		(s6 a6 s4)
		(s6 a41 s1)
		(s6 a8 s4)
		(s6 a43 s4)
		(s6 a10 s4)
		(s6 a11 s4)
		(s6 a45 s4)
		(s6 a12 s4)
		(s6 a13 s4)
		(s6 a14 s4)
		(s6 a15 s4)
		(s6 a16 s4)
		(s6 a17 s4)
		(s6 a18 s4)
		(s6 a19 s4)
		(s6 a20 s4)
		(s6 a21 s4)
		(s6 a22 s4)
		(s6 a23 s4)
		(s6 a24 s4)
		(s6 a25 s4)
		(s7 a45 s4)
		(s7 a43 s7)
		(s8 a45 s0)
		(s8 a29 s9)
		(s8 a31 s0)
		(s8 a32 s0)
		(s8 a42 s9)
		(s9 a45 s0)
		(s9 a30 s9)
		(s9 a31 s0)
		(s9 a32 s0)
		(s9 a43 s9)
		(s10 a35 s0)
		(s10 a36 s0)
		(s10 a37 s0)
		(s10 a40 s0)
		(s10 a41 s12)
		(s10 a43 s0)
		(s10 a27 s0)
		(s10 a28 s12)
		(s10 a45 s0)
		(s10 a30 s0)
		(s10 a31 s0)
		(s10 a32 s0)
		(s10 a34 s0)
		(s11 a35 s10)
		(s11 a35 s14)
		(s11 a40 s10)
		(s11 a40 s11)
		(s11 a41 s8)
		(s11 a41 s11)
		(s11 a42 s10)
		(s11 a42 s11)
		(s11 a43 s10)
		(s11 a43 s11)
		(s11 a27 s10)
		(s11 a27 s11)
		(s11 a28 s8)
		(s11 a28 s11)
		(s11 a45 s10)
		(s11 a45 s11)
		(s11 a29 s10)
		(s11 a29 s11)
		(s11 a30 s10)
		(s11 a30 s11)
		(s11 a31 s10)
		(s11 a31 s11)
		(s11 a32 s10)
		(s11 a32 s11)
		(s11 a34 s10)
		(s11 a34 s11)
		(s12 a29 s12)
		(s12 a30 s8)
		(s12 a42 s12)
		(s12 a43 s8)
		(s13 a19 s6)
		(s13 a19 s13)
		(s13 a20 s6)
		(s13 a20 s13)
		(s13 a21 s6)
		(s13 a21 s13)
		(s13 a38 s6)
		(s13 a38 s13)
		(s13 a22 s6)
		(s13 a22 s13)
		(s13 a39 s10)
		(s13 a39 s11)
		(s13 a23 s6)
		(s13 a23 s13)
		(s13 a24 s6)
		(s13 a24 s13)
		(s13 a25 s6)
		(s13 a25 s13)
		(s13 a26 s10)
		(s13 a26 s11)
		(s13 a10 s6)
		(s13 a10 s13)
		(s13 a11 s6)
		(s13 a11 s13)
		(s13 a12 s6)
		(s13 a12 s13)
		(s13 a13 s6)
		(s13 a13 s13)
		(s13 a14 s6)
		(s13 a14 s13)
		(s13 a15 s6)
		(s13 a15 s13)
		(s13 a16 s6)
		(s13 a16 s13)
		(s13 a17 s6)
		(s13 a17 s13)
		(s13 a18 s6)
		(s13 a18 s13)
		(s14 a36 s10)
		(s14 a36 s14)
		(s14 a37 s10)
		(s14 a37 s14)
		(s14 a39 s6)
		(s14 a39 s2)
	}
);
