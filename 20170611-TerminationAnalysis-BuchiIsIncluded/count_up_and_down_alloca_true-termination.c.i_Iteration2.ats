// Testfile dumped by Ultimate at 2017/06/11 23:18:46
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	initialStates = {s27 },
	finalStates = {s0 s1 s2 s3 s6 s8 s11 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	transitions = {
		(s0 a11 s1)
		(s1 a12 s17)
		(s2 a13 s3)
		(s3 a14 s6)
		(s4 a13 s5)
		(s5 a15 s7)
		(s6 a21 s18)
		(s7 a16 s10)
		(s8 a19 s2)
		(s9 a19 s4)
		(s10 a17 s11)
		(s10 a17 s12)
		(s11 a18 s8)
		(s12 a18 s9)
		(s13 a3 s14)
		(s14 a5 s15)
		(s14 a7 s15)
		(s15 a8 s16)
		(s16 a10 s0)
		(s17 a13 s3)
		(s17 a13 s5)
		(s18 a22 s19)
		(s19 a24 s21)
		(s20 a32 s21)
		(s21 a25 s22)
		(s22 a26 s23)
		(s23 a27 s28)
		(s23 a28 s25)
		(s24 a31 s20)
		(s25 a29 s26)
		(s26 a30 s24)
		(s27 a1 s13)
		(s28 a34 s18)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:18:46
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s2 },
	finalStates = {s0 s4 },
	transitions = {
		(s0 a25 s5)
		(s1 a22 s1)
		(s1 a24 s0)
		(s2 a1 s2)
		(s2 a1 s4)
		(s2 a3 s2)
		(s2 a3 s4)
		(s2 a5 s2)
		(s2 a5 s4)
		(s2 a7 s2)
		(s2 a7 s4)
		(s2 a8 s2)
		(s2 a8 s4)
		(s2 a10 s2)
		(s2 a10 s4)
		(s2 a11 s2)
		(s2 a11 s4)
		(s2 a12 s2)
		(s2 a12 s4)
		(s2 a13 s2)
		(s2 a13 s4)
		(s2 a14 s2)
		(s2 a14 s4)
		(s2 a15 s2)
		(s2 a15 s4)
		(s2 a16 s2)
		(s2 a16 s4)
		(s2 a17 s2)
		(s2 a17 s4)
		(s2 a18 s2)
		(s2 a18 s4)
		(s2 a19 s2)
		(s2 a19 s4)
		(s2 a21 s2)
		(s2 a21 s4)
		(s2 a22 s2)
		(s2 a22 s4)
		(s2 a24 s0)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a25 s4)
		(s2 a26 s2)
		(s2 a26 s4)
		(s2 a27 s2)
		(s2 a27 s4)
		(s2 a28 s2)
		(s2 a28 s4)
		(s2 a29 s2)
		(s2 a29 s4)
		(s2 a30 s2)
		(s2 a30 s4)
		(s2 a31 s2)
		(s2 a31 s4)
		(s2 a32 s2)
		(s2 a32 s4)
		(s2 a34 s2)
		(s2 a34 s4)
		(s3 a8 s3)
		(s3 a24 s5)
		(s3 a10 s3)
		(s3 a11 s3)
		(s3 a25 s3)
		(s3 a12 s3)
		(s3 a26 s3)
		(s3 a13 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a14 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a15 s3)
		(s3 a31 s3)
		(s3 a16 s3)
		(s3 a32 s3)
		(s3 a17 s3)
		(s3 a18 s3)
		(s3 a19 s3)
		(s3 a34 s1)
		(s4 a22 s3)
		(s4 a7 s3)
		(s4 a8 s3)
		(s4 a24 s5)
		(s4 a10 s3)
		(s4 a11 s3)
		(s4 a25 s3)
		(s4 a12 s3)
		(s4 a26 s3)
		(s4 a13 s3)
		(s4 a27 s3)
		(s4 a28 s3)
		(s4 a14 s3)
		(s4 a29 s3)
		(s4 a30 s3)
		(s4 a15 s3)
		(s4 a31 s3)
		(s4 a16 s3)
		(s4 a32 s3)
		(s4 a17 s3)
		(s4 a18 s3)
		(s4 a19 s3)
		(s4 a34 s1)
		(s5 a26 s5)
		(s5 a27 s5)
		(s5 a28 s5)
		(s5 a29 s5)
		(s5 a30 s5)
		(s5 a31 s5)
		(s5 a32 s5)
		(s5 a34 s4)
		(s5 a25 s5)
	}
);
