// Testfile dumped by Ultimate at 2017/06/12 01:03:44
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 },
	initialStates = {s47 },
	finalStates = {s0 s1 s6 s9 s10 s13 s15 s18 s22 s25 s27 s29 s30 s31 s34 s36 s39 s41 s43 s44 s46 s47 s59 s60 s69 s70 s73 s74 s77 s80 s81 s84 s86 s88 },
	transitions = {
		(s0 a41 s1)
		(s1 a42 s22)
		(s2 a41 s3)
		(s3 a42 s23)
		(s4 a19 s5)
		(s5 a20 s66)
		(s6 a24 s69)
		(s7 a24 s8)
		(s8 a26 s50)
		(s9 a30 s10)
		(s10 a31 s18)
		(s11 a30 s10)
		(s11 a30 s12)
		(s12 a31 s19)
		(s13 a40 s0)
		(s14 a40 s2)
		(s15 a44 s80)
		(s16 a44 s80)
		(s16 a44 s82)
		(s17 a18 s4)
		(s18 a32 s25)
		(s19 a32 s26)
		(s20 a22 s21)
		(s21 a23 s7)
		(s22 a43 s15)
		(s23 a43 s16)
		(s24 a20 s20)
		(s25 a33 s34)
		(s26 a33 s35)
		(s27 a3 s28)
		(s27 a3 s29)
		(s28 a4 s40)
		(s29 a4 s39)
		(s30 a9 s31)
		(s31 a11 s88)
		(s32 a9 s33)
		(s33 a11 s90)
		(s34 a34 s46)
		(s35 a34 s48)
		(s36 a13 s37)
		(s37 a16 s68)
		(s38 a16 s17)
		(s39 a6 s43)
		(s40 a6 s45)
		(s41 a0 s70)
		(s42 a0 s78)
		(s43 a8 s44)
		(s43 a8 s30)
		(s44 a9 s60)
		(s45 a8 s32)
		(s45 a8 s44)
		(s46 a23 s6)
		(s47 a1 s27)
		(s48 a23 s62)
		(s49 a25 s70)
		(s49 a26 s50)
		(s50 a27 s73)
		(s50 a27 s63)
		(s51 a24 s49)
		(s52 a23 s51)
		(s53 a34 s52)
		(s54 a33 s53)
		(s55 a32 s54)
		(s56 a31 s55)
		(s57 a30 s56)
		(s57 a30 s10)
		(s58 a29 s57)
		(s59 a12 s36)
		(s60 a11 s59)
		(s61 a25 s78)
		(s61 a26 s72)
		(s62 a24 s61)
		(s63 a28 s58)
		(s64 a24 s71)
		(s65 a23 s64)
		(s66 a22 s65)
		(s67 a19 s24)
		(s68 a18 s67)
		(s69 a25 s70)
		(s70 a36 s77)
		(s71 a26 s72)
		(s72 a27 s73)
		(s72 a27 s75)
		(s73 a28 s74)
		(s74 a29 s9)
		(s75 a28 s76)
		(s76 a29 s11)
		(s77 a37 s86)
		(s78 a36 s79)
		(s79 a37 s87)
		(s80 a45 s81)
		(s81 a46 s84)
		(s82 a45 s83)
		(s83 a46 s85)
		(s84 a47 s41)
		(s85 a47 s42)
		(s86 a38 s13)
		(s87 a38 s14)
		(s88 a12 s89)
		(s89 a13 s37)
		(s90 a12 s91)
		(s91 a13 s38)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:49
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 },
	initialStates = {s1 },
	finalStates = {s2 s5 s7 s10 s12 s27 s34 },
	transitions = {
		(s0 a40 s4)
		(s1 a1 s1)
		(s1 a1 s10)
		(s1 a3 s24)
		(s1 a3 s34)
		(s2 a42 s29)
		(s3 a46 s20)
		(s4 a41 s9)
		(s5 a0 s25)
		(s5 a6 s23)
		(s5 a8 s23)
		(s5 a9 s25)
		(s5 a11 s23)
		(s5 a12 s25)
		(s5 a13 s25)
		(s5 a16 s25)
		(s5 a18 s25)
		(s5 a19 s25)
		(s5 a20 s25)
		(s5 a22 s25)
		(s5 a23 s25)
		(s5 a24 s25)
		(s5 a25 s25)
		(s5 a26 s25)
		(s5 a27 s25)
		(s5 a28 s25)
		(s5 a29 s23)
		(s5 a30 s25)
		(s5 a31 s25)
		(s5 a32 s25)
		(s5 a33 s23)
		(s5 a34 s25)
		(s5 a36 s25)
		(s5 a37 s36)
		(s5 a41 s6)
		(s5 a43 s23)
		(s5 a44 s25)
		(s5 a45 s28)
		(s5 a47 s23)
		(s6 a42 s29)
		(s7 a46 s19)
		(s8 a38 s31)
		(s9 a42 s30)
		(s10 a3 s33)
		(s11 a42 s32)
		(s12 a38 s0)
		(s13 a46 s22)
		(s14 a40 s4)
		(s15 a46 s18)
		(s16 a38 s26)
		(s17 a38 s14)
		(s18 a47 s35)
		(s19 a47 s25)
		(s20 a47 s23)
		(s21 a41 s11)
		(s22 a47 s33)
		(s23 a0 s23)
		(s23 a8 s23)
		(s23 a9 s23)
		(s23 a11 s23)
		(s23 a12 s23)
		(s23 a13 s23)
		(s23 a16 s23)
		(s23 a18 s23)
		(s23 a19 s23)
		(s23 a20 s23)
		(s23 a22 s23)
		(s23 a23 s23)
		(s23 a24 s23)
		(s23 a25 s23)
		(s23 a26 s23)
		(s23 a27 s23)
		(s23 a28 s23)
		(s23 a29 s23)
		(s23 a30 s23)
		(s23 a31 s23)
		(s23 a32 s23)
		(s23 a33 s23)
		(s23 a34 s23)
		(s23 a36 s23)
		(s23 a37 s8)
		(s23 a44 s23)
		(s23 a45 s3)
		(s24 a0 s24)
		(s24 a0 s5)
		(s24 a4 s24)
		(s24 a4 s5)
		(s24 a6 s24)
		(s24 a6 s5)
		(s24 a8 s24)
		(s24 a8 s5)
		(s24 a9 s24)
		(s24 a9 s5)
		(s24 a11 s24)
		(s24 a11 s5)
		(s24 a12 s24)
		(s24 a12 s5)
		(s24 a13 s24)
		(s24 a13 s5)
		(s24 a16 s24)
		(s24 a16 s5)
		(s24 a18 s24)
		(s24 a18 s5)
		(s24 a19 s24)
		(s24 a19 s5)
		(s24 a20 s24)
		(s24 a20 s5)
		(s24 a22 s24)
		(s24 a22 s5)
		(s24 a23 s24)
		(s24 a23 s5)
		(s24 a24 s24)
		(s24 a24 s5)
		(s24 a25 s24)
		(s24 a25 s5)
		(s24 a26 s24)
		(s24 a26 s5)
		(s24 a27 s24)
		(s24 a27 s5)
		(s24 a28 s24)
		(s24 a28 s5)
		(s24 a29 s24)
		(s24 a29 s5)
		(s24 a30 s24)
		(s24 a30 s5)
		(s24 a31 s24)
		(s24 a31 s5)
		(s24 a32 s24)
		(s24 a32 s5)
		(s24 a33 s24)
		(s24 a33 s5)
		(s24 a34 s24)
		(s24 a34 s5)
		(s24 a36 s24)
		(s24 a36 s5)
		(s24 a37 s24)
		(s24 a37 s12)
		(s24 a38 s24)
		(s24 a38 s27)
		(s24 a40 s24)
		(s24 a40 s5)
		(s24 a41 s24)
		(s24 a41 s2)
		(s24 a42 s24)
		(s24 a42 s5)
		(s24 a43 s24)
		(s24 a43 s5)
		(s24 a44 s24)
		(s24 a44 s5)
		(s24 a45 s24)
		(s24 a45 s7)
		(s24 a46 s24)
		(s24 a46 s5)
		(s24 a47 s24)
		(s24 a47 s5)
		(s25 a25 s25)
		(s25 a0 s25)
		(s25 a26 s25)
		(s25 a27 s25)
		(s25 a28 s25)
		(s25 a29 s23)
		(s25 a11 s23)
		(s25 a31 s25)
		(s25 a32 s25)
		(s25 a13 s25)
		(s25 a33 s23)
		(s25 a16 s25)
		(s25 a18 s25)
		(s25 a19 s25)
		(s25 a36 s25)
		(s25 a20 s25)
		(s25 a37 s36)
		(s25 a22 s25)
		(s25 a41 s6)
		(s25 a23 s25)
		(s25 a44 s25)
		(s25 a24 s25)
		(s25 a45 s28)
		(s26 a40 s21)
		(s27 a40 s25)
		(s28 a46 s19)
		(s29 a43 s25)
		(s30 a43 s34)
		(s31 a40 s21)
		(s32 a43 s33)
		(s33 a0 s33)
		(s33 a4 s33)
		(s33 a6 s33)
		(s33 a8 s33)
		(s33 a9 s33)
		(s33 a11 s33)
		(s33 a12 s33)
		(s33 a13 s33)
		(s33 a16 s33)
		(s33 a18 s33)
		(s33 a19 s33)
		(s33 a20 s33)
		(s33 a22 s33)
		(s33 a23 s33)
		(s33 a24 s33)
		(s33 a25 s33)
		(s33 a26 s33)
		(s33 a27 s33)
		(s33 a28 s33)
		(s33 a29 s33)
		(s33 a30 s33)
		(s33 a31 s33)
		(s33 a32 s33)
		(s33 a33 s33)
		(s33 a34 s33)
		(s33 a36 s33)
		(s33 a37 s16)
		(s33 a44 s33)
		(s33 a45 s13)
		(s34 a4 s33)
		(s34 a44 s35)
		(s35 a0 s35)
		(s35 a36 s35)
		(s35 a37 s17)
		(s35 a45 s15)
		(s36 a38 s0)
	}
);
