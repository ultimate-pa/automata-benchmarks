// Testfile dumped by Ultimate at 2017/06/12 03:33:52
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 },
	initialStates = {s1 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 },
	transitions = {
		(s0 a4 s26)
		(s1 a0 s2)
		(s2 a2 s14)
		(s3 a3 s26)
		(s3 a4 s4)
		(s4 a2 s15)
		(s5 a1 s3)
		(s6 a17 s7)
		(s7 a3 s16)
		(s7 a4 s2)
		(s8 a15 s5)
		(s8 a16 s5)
		(s9 a13 s27)
		(s9 a14 s8)
		(s10 a9 s9)
		(s10 a12 s11)
		(s11 a13 s27)
		(s11 a14 s13)
		(s12 a9 s9)
		(s12 a12 s9)
		(s13 a16 s6)
		(s14 a6 s10)
		(s15 a6 s12)
		(s16 a2 s18)
		(s17 a9 s25)
		(s17 a12 s11)
		(s18 a6 s17)
		(s19 a4 s16)
		(s20 a17 s19)
		(s21 a6 s22)
		(s22 a9 s25)
		(s22 a12 s25)
		(s23 a15 s24)
		(s23 a16 s24)
		(s24 a1 s0)
		(s25 a13 s27)
		(s25 a14 s23)
		(s26 a2 s21)
		(s27 a16 s20)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 03:33:52
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 },
	initialStates = {s3 },
	finalStates = {s4 s6 },
	transitions = {
		(s0 a2 s0)
		(s0 a3 s0)
		(s0 a4 s0)
		(s0 a6 s4)
		(s1 a2 s1)
		(s1 a3 s1)
		(s1 a4 s1)
		(s1 a6 s7)
		(s2 a1 s2)
		(s2 a13 s2)
		(s2 a2 s2)
		(s2 a14 s2)
		(s2 a3 s2)
		(s2 a4 s2)
		(s2 a15 s7)
		(s2 a6 s2)
		(s2 a16 s2)
		(s2 a9 s2)
		(s2 a12 s2)
		(s2 a17 s6)
		(s3 a0 s3)
		(s3 a0 s6)
		(s3 a1 s3)
		(s3 a1 s6)
		(s3 a2 s3)
		(s3 a2 s6)
		(s3 a3 s3)
		(s3 a3 s6)
		(s3 a4 s3)
		(s3 a4 s6)
		(s3 a6 s3)
		(s3 a6 s4)
		(s3 a9 s3)
		(s3 a9 s4)
		(s3 a12 s3)
		(s3 a12 s6)
		(s3 a13 s3)
		(s3 a13 s6)
		(s3 a14 s3)
		(s3 a14 s6)
		(s3 a15 s3)
		(s3 a15 s6)
		(s3 a16 s3)
		(s3 a16 s6)
		(s3 a17 s3)
		(s3 a17 s6)
		(s4 a13 s2)
		(s4 a14 s2)
		(s4 a9 s2)
		(s4 a12 s2)
		(s5 a1 s5)
		(s5 a2 s5)
		(s5 a3 s5)
		(s5 a4 s5)
		(s5 a6 s2)
		(s5 a16 s5)
		(s5 a17 s0)
		(s6 a1 s5)
		(s6 a13 s5)
		(s6 a2 s5)
		(s6 a14 s5)
		(s6 a3 s5)
		(s6 a4 s5)
		(s6 a6 s2)
		(s6 a16 s5)
		(s6 a17 s0)
		(s7 a1 s7)
		(s7 a13 s7)
		(s7 a2 s7)
		(s7 a3 s7)
		(s7 a14 s7)
		(s7 a4 s7)
		(s7 a15 s7)
		(s7 a6 s7)
		(s7 a16 s7)
		(s7 a9 s2)
		(s7 a12 s7)
		(s7 a17 s1)
	}
);
