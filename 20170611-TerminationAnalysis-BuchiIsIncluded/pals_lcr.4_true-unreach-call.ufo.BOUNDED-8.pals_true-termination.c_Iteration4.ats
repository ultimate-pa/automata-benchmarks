// Testfile dumped by Ultimate at 2017/06/11 19:49:38
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 a98 a99 a100 a101 a102 a103 a104 a105 a106 a107 a108 a109 a110 a111 a112 a113 a114 a115 a116 a117 a118 a119 a120 a121 a122 a123 a124 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 },
	initialStates = {s16 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 },
	transitions = {
		(s0 a105 s63)
		(s1 a43 s50)
		(s2 a113 s68)
		(s2 a114 s67)
		(s3 a23 s4)
		(s4 a25 s60)
		(s5 a102 s0)
		(s5 a103 s0)
		(s6 a80 s106)
		(s7 a43 s89)
		(s8 a17 s9)
		(s9 a20 s11)
		(s10 a100 s0)
		(s10 a101 s5)
		(s11 a22 s3)
		(s12 a26 s82)
		(s13 a13 s14)
		(s14 a15 s8)
		(s15 a99 s10)
		(s15 a104 s0)
		(s16 a0 s74)
		(s17 a96 s69)
		(s18 a26 s82)
		(s18 a27 s77)
		(s19 a24 s18)
		(s20 a21 s19)
		(s21 a12 s20)
		(s22 a19 s20)
		(s23 a16 s22)
		(s23 a18 s22)
		(s24 a4 s21)
		(s24 a5 s25)
		(s25 a7 s21)
		(s25 a9 s21)
		(s26 a1 s24)
		(s26 a11 s21)
		(s27 a14 s23)
		(s27 a124 s26)
		(s28 a123 s27)
		(s29 a118 s28)
		(s30 a122 s28)
		(s31 a120 s30)
		(s31 a121 s30)
		(s32 a119 s31)
		(s32 a111 s33)
		(s33 a112 s34)
		(s33 a117 s29)
		(s34 a113 s29)
		(s34 a114 s35)
		(s35 a115 s29)
		(s35 a116 s29)
		(s36 a110 s32)
		(s37 a109 s36)
		(s38 a105 s36)
		(s39 a100 s38)
		(s39 a101 s40)
		(s40 a102 s38)
		(s40 a103 s38)
		(s41 a99 s39)
		(s41 a104 s38)
		(s42 a106 s43)
		(s42 a98 s41)
		(s43 a107 s37)
		(s43 a108 s37)
		(s44 a94 s17)
		(s44 a95 s17)
		(s45 a93 s44)
		(s45 a85 s91)
		(s46 a84 s45)
		(s47 a82 s46)
		(s48 a51 s47)
		(s49 a49 s48)
		(s50 a44 s49)
		(s51 a92 s52)
		(s52 a97 s42)
		(s53 a16 s54)
		(s53 a18 s54)
		(s54 a19 s79)
		(s55 a49 s56)
		(s56 a51 s57)
		(s57 a82 s58)
		(s58 a84 s59)
		(s59 a93 s65)
		(s59 a85 s91)
		(s60 a28 s61)
		(s61 a30 s62)
		(s62 a32 s101)
		(s63 a110 s64)
		(s64 a119 s86)
		(s64 a111 s87)
		(s65 a94 s66)
		(s65 a95 s66)
		(s66 a96 s52)
		(s67 a115 s68)
		(s67 a116 s68)
		(s68 a118 s80)
		(s69 a97 s70)
		(s70 a106 s104)
		(s70 a98 s15)
		(s71 a1 s72)
		(s71 a11 s73)
		(s72 a4 s73)
		(s72 a5 s105)
		(s73 a12 s79)
		(s74 a2 s75)
		(s75 a3 s88)
		(s76 a89 s51)
		(s76 a90 s51)
		(s77 a29 s78)
		(s78 a31 s7)
		(s78 a33 s83)
		(s79 a21 s84)
		(s80 a123 s81)
		(s81 a14 s53)
		(s81 a124 s71)
		(s82 a33 s83)
		(s83 a35 s1)
		(s84 a24 s12)
		(s85 a87 s51)
		(s85 a88 s76)
		(s86 a120 s99)
		(s86 a121 s99)
		(s87 a112 s2)
		(s87 a117 s68)
		(s88 a6 s90)
		(s89 a44 s55)
		(s90 a8 s92)
		(s91 a91 s51)
		(s91 a86 s85)
		(s92 a10 s13)
		(s93 a47 s94)
		(s94 a50 s95)
		(s95 a52 s6)
		(s96 a40 s97)
		(s97 a42 s100)
		(s98 a109 s63)
		(s99 a122 s80)
		(s100 a45 s93)
		(s101 a34 s102)
		(s102 a36 s103)
		(s103 a38 s96)
		(s104 a107 s98)
		(s104 a108 s98)
		(s105 a7 s73)
		(s105 a9 s73)
		(s106 a81 s57)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 19:49:41
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 a90 a91 a92 a93 a94 a95 a96 a97 a98 a99 a100 a101 a102 a103 a104 a105 a106 a107 a108 a109 a110 a111 a112 a113 a114 a115 a116 a117 a118 a119 a120 a121 a122 a123 a124 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s0 },
	finalStates = {s1 s4 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s4)
		(s0 a2 s0)
		(s0 a2 s4)
		(s0 a1 s0)
		(s0 a1 s4)
		(s0 a3 s0)
		(s0 a3 s4)
		(s0 a4 s0)
		(s0 a4 s4)
		(s0 a5 s0)
		(s0 a5 s4)
		(s0 a6 s0)
		(s0 a6 s4)
		(s0 a7 s0)
		(s0 a7 s4)
		(s0 a8 s0)
		(s0 a8 s4)
		(s0 a9 s0)
		(s0 a9 s4)
		(s0 a80 s0)
		(s0 a80 s4)
		(s0 a10 s0)
		(s0 a10 s4)
		(s0 a81 s0)
		(s0 a81 s1)
		(s0 a11 s0)
		(s0 a11 s4)
		(s0 a13 s0)
		(s0 a13 s4)
		(s0 a12 s0)
		(s0 a12 s4)
		(s0 a82 s0)
		(s0 a82 s4)
		(s0 a14 s0)
		(s0 a14 s4)
		(s0 a15 s0)
		(s0 a15 s4)
		(s0 a16 s0)
		(s0 a16 s4)
		(s0 a17 s0)
		(s0 a17 s4)
		(s0 a18 s0)
		(s0 a18 s4)
		(s0 a84 s0)
		(s0 a84 s1)
		(s0 a20 s0)
		(s0 a20 s4)
		(s0 a19 s0)
		(s0 a19 s4)
		(s0 a85 s0)
		(s0 a85 s4)
		(s0 a22 s0)
		(s0 a22 s4)
		(s0 a21 s0)
		(s0 a21 s4)
		(s0 a86 s0)
		(s0 a86 s4)
		(s0 a23 s0)
		(s0 a23 s4)
		(s0 a24 s0)
		(s0 a24 s4)
		(s0 a87 s0)
		(s0 a87 s4)
		(s0 a25 s0)
		(s0 a25 s4)
		(s0 a26 s0)
		(s0 a26 s4)
		(s0 a88 s0)
		(s0 a88 s4)
		(s0 a27 s0)
		(s0 a27 s4)
		(s0 a28 s0)
		(s0 a28 s4)
		(s0 a89 s0)
		(s0 a89 s4)
		(s0 a29 s0)
		(s0 a29 s4)
		(s0 a30 s0)
		(s0 a30 s4)
		(s0 a90 s0)
		(s0 a90 s4)
		(s0 a32 s0)
		(s0 a32 s4)
		(s0 a91 s0)
		(s0 a91 s4)
		(s0 a31 s0)
		(s0 a31 s4)
		(s0 a92 s0)
		(s0 a92 s4)
		(s0 a33 s0)
		(s0 a33 s4)
		(s0 a34 s0)
		(s0 a34 s4)
		(s0 a93 s0)
		(s0 a93 s4)
		(s0 a35 s0)
		(s0 a35 s4)
		(s0 a36 s0)
		(s0 a36 s4)
		(s0 a94 s0)
		(s0 a94 s4)
		(s0 a38 s0)
		(s0 a38 s4)
		(s0 a95 s0)
		(s0 a95 s4)
		(s0 a96 s0)
		(s0 a96 s4)
		(s0 a40 s0)
		(s0 a40 s4)
		(s0 a97 s0)
		(s0 a97 s4)
		(s0 a42 s0)
		(s0 a42 s4)
		(s0 a43 s0)
		(s0 a43 s4)
		(s0 a98 s0)
		(s0 a98 s4)
		(s0 a44 s0)
		(s0 a44 s4)
		(s0 a45 s0)
		(s0 a45 s4)
		(s0 a99 s0)
		(s0 a99 s4)
		(s0 a47 s0)
		(s0 a47 s4)
		(s0 a100 s0)
		(s0 a100 s4)
		(s0 a50 s0)
		(s0 a50 s4)
		(s0 a49 s0)
		(s0 a49 s4)
		(s0 a101 s0)
		(s0 a101 s4)
		(s0 a51 s0)
		(s0 a51 s4)
		(s0 a52 s0)
		(s0 a52 s4)
		(s0 a102 s0)
		(s0 a102 s4)
		(s0 a103 s0)
		(s0 a103 s4)
		(s0 a104 s0)
		(s0 a104 s4)
		(s0 a105 s0)
		(s0 a105 s4)
		(s0 a106 s0)
		(s0 a106 s4)
		(s0 a107 s0)
		(s0 a107 s4)
		(s0 a108 s0)
		(s0 a108 s4)
		(s0 a109 s0)
		(s0 a109 s4)
		(s0 a110 s0)
		(s0 a110 s4)
		(s0 a111 s0)
		(s0 a111 s4)
		(s0 a112 s0)
		(s0 a112 s4)
		(s0 a113 s0)
		(s0 a113 s4)
		(s0 a114 s0)
		(s0 a114 s4)
		(s0 a115 s0)
		(s0 a115 s4)
		(s0 a116 s0)
		(s0 a116 s4)
		(s0 a117 s0)
		(s0 a117 s4)
		(s0 a118 s0)
		(s0 a118 s4)
		(s0 a119 s0)
		(s0 a119 s4)
		(s0 a120 s0)
		(s0 a120 s4)
		(s0 a121 s0)
		(s0 a121 s4)
		(s0 a122 s0)
		(s0 a122 s4)
		(s0 a123 s0)
		(s0 a123 s4)
		(s0 a124 s0)
		(s0 a124 s4)
		(s1 a93 s6)
		(s1 a82 s6)
		(s1 a85 s6)
		(s2 a1 s2)
		(s2 a4 s2)
		(s2 a5 s2)
		(s2 a6 s2)
		(s2 a7 s2)
		(s2 a8 s2)
		(s2 a9 s2)
		(s2 a80 s2)
		(s2 a10 s2)
		(s2 a81 s3)
		(s2 a11 s2)
		(s2 a13 s2)
		(s2 a12 s2)
		(s2 a14 s2)
		(s2 a15 s2)
		(s2 a16 s2)
		(s2 a17 s2)
		(s2 a18 s2)
		(s2 a84 s6)
		(s2 a20 s2)
		(s2 a19 s2)
		(s2 a22 s2)
		(s2 a21 s2)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a87 s2)
		(s2 a25 s2)
		(s2 a26 s2)
		(s2 a88 s2)
		(s2 a27 s2)
		(s2 a28 s2)
		(s2 a89 s2)
		(s2 a29 s2)
		(s2 a30 s2)
		(s2 a90 s2)
		(s2 a32 s2)
		(s2 a31 s2)
		(s2 a92 s2)
		(s2 a33 s2)
		(s2 a34 s2)
		(s2 a35 s2)
		(s2 a36 s2)
		(s2 a38 s2)
		(s2 a96 s2)
		(s2 a40 s2)
		(s2 a97 s2)
		(s2 a42 s2)
		(s2 a43 s2)
		(s2 a98 s2)
		(s2 a44 s2)
		(s2 a45 s2)
		(s2 a99 s2)
		(s2 a47 s2)
		(s2 a100 s2)
		(s2 a50 s2)
		(s2 a49 s2)
		(s2 a101 s2)
		(s2 a51 s5)
		(s2 a52 s2)
		(s2 a102 s2)
		(s2 a103 s2)
		(s2 a104 s2)
		(s2 a105 s2)
		(s2 a106 s2)
		(s2 a107 s2)
		(s2 a108 s2)
		(s2 a109 s2)
		(s2 a110 s2)
		(s2 a111 s2)
		(s2 a112 s2)
		(s2 a113 s2)
		(s2 a114 s2)
		(s2 a115 s2)
		(s2 a116 s2)
		(s2 a117 s2)
		(s2 a118 s2)
		(s2 a119 s2)
		(s2 a120 s2)
		(s2 a121 s2)
		(s2 a122 s2)
		(s2 a123 s2)
		(s2 a124 s2)
		(s3 a1 s3)
		(s3 a4 s3)
		(s3 a5 s3)
		(s3 a7 s3)
		(s3 a9 s3)
		(s3 a11 s3)
		(s3 a12 s3)
		(s3 a82 s3)
		(s3 a14 s3)
		(s3 a16 s3)
		(s3 a18 s3)
		(s3 a84 s3)
		(s3 a19 s3)
		(s3 a85 s3)
		(s3 a21 s3)
		(s3 a86 s3)
		(s3 a24 s3)
		(s3 a87 s3)
		(s3 a26 s3)
		(s3 a88 s3)
		(s3 a27 s3)
		(s3 a89 s3)
		(s3 a29 s3)
		(s3 a90 s3)
		(s3 a91 s3)
		(s3 a31 s3)
		(s3 a92 s3)
		(s3 a33 s3)
		(s3 a93 s3)
		(s3 a35 s3)
		(s3 a94 s3)
		(s3 a95 s3)
		(s3 a96 s3)
		(s3 a97 s3)
		(s3 a43 s3)
		(s3 a98 s3)
		(s3 a44 s3)
		(s3 a99 s3)
		(s3 a100 s3)
		(s3 a49 s3)
		(s3 a101 s3)
		(s3 a102 s3)
		(s3 a103 s3)
		(s3 a104 s3)
		(s3 a105 s3)
		(s3 a106 s3)
		(s3 a107 s3)
		(s3 a108 s3)
		(s3 a109 s3)
		(s3 a110 s3)
		(s3 a111 s3)
		(s3 a112 s3)
		(s3 a113 s3)
		(s3 a114 s3)
		(s3 a115 s3)
		(s3 a116 s3)
		(s3 a117 s3)
		(s3 a118 s3)
		(s3 a119 s3)
		(s3 a120 s3)
		(s3 a121 s3)
		(s3 a122 s3)
		(s3 a123 s3)
		(s3 a124 s3)
		(s4 a1 s2)
		(s4 a3 s2)
		(s4 a4 s2)
		(s4 a5 s2)
		(s4 a6 s2)
		(s4 a7 s2)
		(s4 a8 s2)
		(s4 a9 s2)
		(s4 a80 s2)
		(s4 a10 s2)
		(s4 a81 s3)
		(s4 a11 s2)
		(s4 a13 s2)
		(s4 a12 s2)
		(s4 a14 s2)
		(s4 a82 s2)
		(s4 a15 s2)
		(s4 a16 s2)
		(s4 a17 s2)
		(s4 a18 s2)
		(s4 a84 s6)
		(s4 a20 s2)
		(s4 a19 s2)
		(s4 a22 s2)
		(s4 a21 s2)
		(s4 a86 s2)
		(s4 a23 s2)
		(s4 a24 s2)
		(s4 a87 s2)
		(s4 a25 s2)
		(s4 a26 s2)
		(s4 a88 s2)
		(s4 a27 s2)
		(s4 a28 s2)
		(s4 a89 s2)
		(s4 a29 s2)
		(s4 a30 s2)
		(s4 a90 s2)
		(s4 a32 s2)
		(s4 a91 s2)
		(s4 a31 s2)
		(s4 a92 s2)
		(s4 a33 s2)
		(s4 a34 s2)
		(s4 a35 s2)
		(s4 a36 s2)
		(s4 a94 s2)
		(s4 a38 s2)
		(s4 a95 s2)
		(s4 a96 s2)
		(s4 a40 s2)
		(s4 a97 s2)
		(s4 a42 s2)
		(s4 a43 s2)
		(s4 a98 s2)
		(s4 a44 s2)
		(s4 a45 s2)
		(s4 a99 s2)
		(s4 a47 s2)
		(s4 a100 s2)
		(s4 a50 s2)
		(s4 a49 s2)
		(s4 a101 s2)
		(s4 a51 s5)
		(s4 a52 s2)
		(s4 a102 s2)
		(s4 a103 s2)
		(s4 a104 s2)
		(s4 a105 s2)
		(s4 a106 s2)
		(s4 a107 s2)
		(s4 a108 s2)
		(s4 a109 s2)
		(s4 a110 s2)
		(s4 a111 s2)
		(s4 a112 s2)
		(s4 a113 s2)
		(s4 a114 s2)
		(s4 a115 s2)
		(s4 a116 s2)
		(s4 a117 s2)
		(s4 a118 s2)
		(s4 a119 s2)
		(s4 a120 s2)
		(s4 a121 s2)
		(s4 a122 s2)
		(s4 a123 s2)
		(s4 a124 s2)
		(s5 a82 s5)
		(s5 a84 s1)
		(s6 a1 s6)
		(s6 a4 s6)
		(s6 a5 s6)
		(s6 a7 s6)
		(s6 a9 s6)
		(s6 a11 s6)
		(s6 a12 s6)
		(s6 a14 s6)
		(s6 a16 s6)
		(s6 a18 s6)
		(s6 a84 s6)
		(s6 a19 s6)
		(s6 a85 s6)
		(s6 a21 s6)
		(s6 a86 s6)
		(s6 a24 s6)
		(s6 a87 s6)
		(s6 a26 s6)
		(s6 a88 s6)
		(s6 a27 s6)
		(s6 a89 s6)
		(s6 a29 s6)
		(s6 a90 s6)
		(s6 a91 s6)
		(s6 a31 s6)
		(s6 a92 s6)
		(s6 a33 s6)
		(s6 a93 s6)
		(s6 a35 s6)
		(s6 a94 s6)
		(s6 a95 s6)
		(s6 a96 s6)
		(s6 a97 s6)
		(s6 a43 s6)
		(s6 a98 s6)
		(s6 a44 s6)
		(s6 a99 s6)
		(s6 a100 s6)
		(s6 a49 s6)
		(s6 a101 s6)
		(s6 a51 s4)
		(s6 a102 s6)
		(s6 a103 s6)
		(s6 a104 s6)
		(s6 a105 s6)
		(s6 a106 s6)
		(s6 a107 s6)
		(s6 a108 s6)
		(s6 a109 s6)
		(s6 a110 s6)
		(s6 a111 s6)
		(s6 a112 s6)
		(s6 a113 s6)
		(s6 a114 s6)
		(s6 a115 s6)
		(s6 a116 s6)
		(s6 a117 s6)
		(s6 a118 s6)
		(s6 a119 s6)
		(s6 a120 s6)
		(s6 a121 s6)
		(s6 a122 s6)
		(s6 a123 s6)
		(s6 a124 s6)
	}
);
