// Testfile dumped by Ultimate at 2017/06/11 23:19:48
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s10 },
	finalStates = {s0 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s17 s18 s19 },
	transitions = {
		(s0 a15 s6)
		(s1 a22 s15)
		(s2 a13 s1)
		(s3 a13 s19)
		(s4 a1 s5)
		(s5 a2 s11)
		(s5 a3 s11)
		(s6 a16 s7)
		(s7 a18 s8)
		(s8 a19 s9)
		(s9 a20 s0)
		(s10 a0 s4)
		(s11 a4 s12)
		(s11 a5 s12)
		(s12 a6 s17)
		(s13 a9 s14)
		(s14 a11 s16)
		(s15 a9 s14)
		(s16 a12 s2)
		(s16 a12 s3)
		(s17 a7 s18)
		(s18 a8 s13)
		(s19 a14 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:50
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s4 },
	finalStates = {s2 s5 },
	transitions = {
		(s0 a20 s1)
		(s1 a22 s1)
		(s1 a15 s1)
		(s1 a2 s1)
		(s1 a9 s1)
		(s1 a16 s1)
		(s1 a3 s1)
		(s1 a4 s1)
		(s1 a11 s1)
		(s1 a18 s3)
		(s1 a12 s1)
		(s1 a5 s1)
		(s1 a13 s1)
		(s2 a1 s1)
		(s2 a15 s1)
		(s2 a2 s1)
		(s2 a16 s1)
		(s2 a3 s1)
		(s2 a4 s1)
		(s2 a18 s3)
		(s2 a5 s1)
		(s2 a20 s1)
		(s2 a7 s1)
		(s2 a22 s1)
		(s2 a9 s1)
		(s2 a11 s1)
		(s2 a12 s1)
		(s2 a13 s1)
		(s3 a19 s5)
		(s4 a0 s2)
		(s4 a0 s4)
		(s4 a14 s2)
		(s4 a14 s4)
		(s4 a1 s2)
		(s4 a1 s4)
		(s4 a15 s2)
		(s4 a15 s4)
		(s4 a2 s2)
		(s4 a2 s4)
		(s4 a16 s2)
		(s4 a16 s4)
		(s4 a3 s2)
		(s4 a3 s4)
		(s4 a4 s2)
		(s4 a4 s4)
		(s4 a18 s5)
		(s4 a18 s4)
		(s4 a19 s2)
		(s4 a19 s4)
		(s4 a5 s2)
		(s4 a5 s4)
		(s4 a20 s2)
		(s4 a20 s4)
		(s4 a6 s2)
		(s4 a6 s4)
		(s4 a7 s2)
		(s4 a7 s4)
		(s4 a8 s2)
		(s4 a8 s4)
		(s4 a22 s2)
		(s4 a22 s4)
		(s4 a9 s2)
		(s4 a9 s4)
		(s4 a11 s2)
		(s4 a11 s4)
		(s4 a12 s2)
		(s4 a12 s4)
		(s4 a13 s2)
		(s4 a13 s4)
		(s5 a19 s0)
		(s5 a20 s1)
	}
);
