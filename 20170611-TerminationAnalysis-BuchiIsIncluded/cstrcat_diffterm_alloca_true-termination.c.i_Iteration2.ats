// Testfile dumped by Ultimate at 2017/06/11 23:18:49
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 },
	initialStates = {s23 },
	finalStates = {s0 s1 s2 s3 s6 s7 s8 s9 s10 s13 s15 s16 s21 s22 s23 },
	transitions = {
		(s0 a1 s1)
		(s1 a2 s22)
		(s1 a3 s22)
		(s2 a10 s3)
		(s3 a11 s6)
		(s4 a14 s5)
		(s5 a15 s19)
		(s5 a16 s20)
		(s6 a12 s7)
		(s7 a13 s4)
		(s8 a9 s2)
		(s9 a18 s10)
		(s10 a19 s13)
		(s11 a18 s12)
		(s12 a19 s14)
		(s13 a20 s15)
		(s14 a20 s17)
		(s14 a20 s15)
		(s15 a21 s16)
		(s16 a23 s9)
		(s17 a21 s18)
		(s18 a23 s11)
		(s19 a18 s10)
		(s19 a18 s12)
		(s20 a13 s4)
		(s21 a6 s8)
		(s21 a7 s8)
		(s22 a4 s21)
		(s22 a5 s21)
		(s23 a0 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:18:51
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s15 },
	finalStates = {s2 s3 s9 s12 s18 s19 },
	transitions = {
		(s0 a21 s0)
		(s0 a23 s14)
		(s1 a14 s1)
		(s1 a15 s1)
		(s1 a16 s10)
		(s1 a18 s1)
		(s1 a19 s8)
		(s2 a13 s1)
		(s2 a14 s1)
		(s2 a15 s1)
		(s2 a16 s10)
		(s2 a18 s1)
		(s2 a19 s8)
		(s3 a21 s5)
		(s4 a13 s2)
		(s4 a13 s4)
		(s4 a14 s2)
		(s4 a14 s4)
		(s4 a15 s2)
		(s4 a15 s4)
		(s4 a16 s12)
		(s4 a16 s16)
		(s4 a18 s2)
		(s4 a18 s4)
		(s4 a19 s9)
		(s4 a19 s11)
		(s5 a21 s5)
		(s5 a23 s7)
		(s6 a6 s6)
		(s6 a7 s6)
		(s6 a4 s6)
		(s6 a11 s6)
		(s6 a5 s6)
		(s7 a18 s7)
		(s7 a19 s9)
		(s8 a20 s3)
		(s9 a20 s5)
		(s10 a13 s10)
		(s10 a14 s10)
		(s10 a15 s10)
		(s10 a16 s10)
		(s10 a18 s10)
		(s10 a19 s17)
		(s11 a20 s11)
		(s11 a20 s12)
		(s11 a21 s11)
		(s11 a21 s12)
		(s11 a23 s11)
		(s11 a23 s12)
		(s11 a18 s11)
		(s11 a18 s12)
		(s11 a19 s11)
		(s11 a19 s19)
		(s12 a13 s14)
		(s12 a21 s14)
		(s12 a14 s14)
		(s12 a15 s14)
		(s12 a23 s14)
		(s12 a16 s10)
		(s12 a18 s14)
		(s12 a19 s17)
		(s13 a10 s13)
		(s13 a10 s18)
		(s13 a11 s13)
		(s13 a11 s18)
		(s13 a12 s2)
		(s13 a12 s4)
		(s14 a14 s14)
		(s14 a15 s14)
		(s14 a23 s14)
		(s14 a16 s10)
		(s14 a18 s14)
		(s14 a19 s17)
		(s15 a0 s15)
		(s15 a0 s18)
		(s15 a6 s15)
		(s15 a6 s18)
		(s15 a1 s15)
		(s15 a1 s18)
		(s15 a7 s15)
		(s15 a7 s18)
		(s15 a2 s15)
		(s15 a2 s18)
		(s15 a3 s15)
		(s15 a3 s18)
		(s15 a9 s13)
		(s15 a9 s18)
		(s15 a4 s15)
		(s15 a4 s18)
		(s15 a5 s15)
		(s15 a5 s18)
		(s16 a13 s12)
		(s16 a13 s16)
		(s16 a14 s12)
		(s16 a14 s16)
		(s16 a15 s12)
		(s16 a15 s16)
		(s16 a16 s12)
		(s16 a16 s16)
		(s16 a18 s12)
		(s16 a18 s16)
		(s16 a19 s11)
		(s16 a19 s19)
		(s17 a20 s17)
		(s17 a21 s17)
		(s17 a23 s10)
		(s18 a6 s6)
		(s18 a7 s6)
		(s18 a2 s6)
		(s18 a3 s6)
		(s18 a10 s6)
		(s18 a4 s6)
		(s18 a11 s6)
		(s18 a5 s6)
		(s19 a20 s0)
	}
);
