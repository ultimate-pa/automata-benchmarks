// Testfile dumped by Ultimate at 2017/06/12 01:37:56
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 },
	initialStates = {s26 },
	finalStates = {s0 s1 s6 s7 s8 s9 s12 s13 s14 s15 s16 s22 s24 s25 s26 },
	transitions = {
		(s0 a21 s1)
		(s1 a23 s8)
		(s2 a21 s3)
		(s3 a23 s10)
		(s4 a15 s5)
		(s5 a18 s9)
		(s5 a18 s11)
		(s6 a11 s7)
		(s7 a12 s16)
		(s8 a18 s9)
		(s9 a19 s22)
		(s10 a18 s11)
		(s11 a19 s23)
		(s12 a1 s13)
		(s13 a2 s14)
		(s13 a3 s14)
		(s14 a4 s15)
		(s14 a5 s15)
		(s15 a6 s24)
		(s15 a7 s24)
		(s16 a13 s17)
		(s16 a13 s18)
		(s17 a14 s31)
		(s18 a14 s27)
		(s19 a13 s20)
		(s19 a13 s21)
		(s20 a14 s32)
		(s21 a14 s4)
		(s22 a20 s0)
		(s23 a20 s0)
		(s23 a20 s2)
		(s24 a9 s25)
		(s25 a10 s6)
		(s26 a0 s12)
		(s27 a16 s28)
		(s28 a13 s21)
		(s28 a13 s30)
		(s29 a15 s5)
		(s29 a16 s28)
		(s30 a14 s29)
		(s31 a16 s19)
		(s32 a15 s33)
		(s32 a16 s19)
		(s33 a18 s37)
		(s33 a18 s43)
		(s34 a21 s1)
		(s34 a21 s35)
		(s35 a23 s40)
		(s36 a20 s0)
		(s36 a20 s34)
		(s37 a19 s38)
		(s38 a20 s0)
		(s38 a20 s34)
		(s38 a20 s2)
		(s38 a20 s41)
		(s39 a18 s37)
		(s40 a18 s43)
		(s41 a21 s3)
		(s41 a21 s42)
		(s42 a23 s39)
		(s43 a19 s36)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:58
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s10 },
	finalStates = {s0 s4 s6 },
	transitions = {
		(s0 a13 s9)
		(s0 a21 s9)
		(s0 a14 s11)
		(s0 a15 s9)
		(s0 a23 s9)
		(s0 a16 s7)
		(s0 a18 s9)
		(s0 a19 s1)
		(s1 a20 s1)
		(s1 a21 s6)
		(s2 a10 s2)
		(s2 a10 s4)
		(s2 a11 s2)
		(s2 a11 s4)
		(s2 a12 s0)
		(s2 a12 s5)
		(s3 a6 s3)
		(s3 a7 s3)
		(s3 a2 s3)
		(s3 a3 s3)
		(s3 a4 s3)
		(s3 a11 s3)
		(s3 a5 s3)
		(s4 a6 s3)
		(s4 a1 s3)
		(s4 a7 s3)
		(s4 a2 s3)
		(s4 a3 s3)
		(s4 a10 s3)
		(s4 a4 s3)
		(s4 a11 s3)
		(s4 a5 s3)
		(s5 a13 s0)
		(s5 a13 s5)
		(s5 a20 s0)
		(s5 a20 s5)
		(s5 a21 s0)
		(s5 a21 s5)
		(s5 a14 s0)
		(s5 a14 s5)
		(s5 a15 s0)
		(s5 a15 s5)
		(s5 a23 s0)
		(s5 a23 s5)
		(s5 a16 s0)
		(s5 a16 s5)
		(s5 a18 s0)
		(s5 a18 s5)
		(s5 a19 s5)
		(s5 a19 s6)
		(s6 a20 s8)
		(s6 a23 s9)
		(s7 a13 s7)
		(s7 a14 s0)
		(s8 a21 s8)
		(s8 a23 s9)
		(s9 a14 s11)
		(s9 a23 s9)
		(s9 a18 s9)
		(s9 a19 s1)
		(s10 a0 s4)
		(s10 a0 s10)
		(s10 a6 s4)
		(s10 a6 s10)
		(s10 a1 s4)
		(s10 a1 s10)
		(s10 a7 s4)
		(s10 a7 s10)
		(s10 a2 s4)
		(s10 a2 s10)
		(s10 a3 s4)
		(s10 a3 s10)
		(s10 a9 s2)
		(s10 a9 s4)
		(s10 a4 s4)
		(s10 a4 s10)
		(s10 a5 s4)
		(s10 a5 s10)
		(s11 a15 s11)
		(s11 a16 s0)
		(s11 a18 s11)
		(s11 a19 s6)
	}
);
