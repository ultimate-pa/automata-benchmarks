// Testfile dumped by Ultimate at 2017/06/12 01:14:20
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 },
	initialStates = {s71 },
	finalStates = {s0 s1 s4 s5 s8 s9 s12 s13 s16 s17 s21 s22 s25 s26 s27 s30 s32 s35 s36 s37 s41 s42 s44 s45 s49 s50 s52 s54 s55 s57 s58 s60 s62 s63 s65 s66 s67 s69 s70 s71 s74 s78 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 },
	transitions = {
		(s0 a18 s1)
		(s1 a19 s30)
		(s2 a18 s3)
		(s3 a19 s31)
		(s4 a21 s5)
		(s5 a22 s32)
		(s6 a29 s7)
		(s6 a21 s5)
		(s7 a30 s20)
		(s8 a25 s9)
		(s9 a26 s70)
		(s10 a25 s11)
		(s11 a26 s56)
		(s12 a6 s13)
		(s13 a7 s42)
		(s13 a7 s66)
		(s14 a6 s15)
		(s15 a7 s42)
		(s15 a7 s43)
		(s16 a16 s17)
		(s17 a17 s0)
		(s18 a16 s17)
		(s18 a16 s19)
		(s19 a17 s2)
		(s20 a31 s48)
		(s21 a12 s22)
		(s22 a13 s52)
		(s23 a12 s24)
		(s24 a13 s53)
		(s25 a4 s26)
		(s25 a4 s27)
		(s26 a5 s12)
		(s27 a5 s78)
		(s28 a4 s26)
		(s28 a4 s29)
		(s29 a5 s14)
		(s30 a20 s4)
		(s31 a20 s6)
		(s32 a23 s65)
		(s33 a22 s34)
		(s34 a23 s59)
		(s35 a10 s36)
		(s35 a10 s37)
		(s36 a11 s51)
		(s37 a11 s98)
		(s38 a10 s39)
		(s38 a10 s40)
		(s39 a11 s84)
		(s40 a11 s51)
		(s41 a7 s42)
		(s42 a8 s74)
		(s43 a8 s68)
		(s44 a28 s45)
		(s44 a28 s21)
		(s45 a12 s24)
		(s46 a28 s47)
		(s46 a28 s21)
		(s47 a12 s82)
		(s48 a32 s21)
		(s48 a32 s23)
		(s49 a11 s50)
		(s50 a12 s22)
		(s50 a12 s24)
		(s51 a12 s22)
		(s51 a12 s24)
		(s52 a14 s16)
		(s53 a14 s18)
		(s54 a27 s55)
		(s55 a28 s86)
		(s55 a28 s23)
		(s56 a27 s46)
		(s57 a23 s58)
		(s58 a24 s8)
		(s58 a24 s88)
		(s59 a24 s10)
		(s59 a24 s8)
		(s60 a1 s61)
		(s60 a1 s62)
		(s61 a2 s63)
		(s61 a2 s64)
		(s62 a2 s63)
		(s63 a3 s25)
		(s64 a3 s28)
		(s65 a24 s8)
		(s66 a8 s67)
		(s67 a9 s69)
		(s68 a9 s38)
		(s69 a10 s49)
		(s69 a10 s40)
		(s70 a27 s44)
		(s71 a0 s60)
		(s72 a29 s73)
		(s72 a21 s33)
		(s73 a30 s85)
		(s74 a9 s35)
		(s75 a20 s72)
		(s76 a19 s75)
		(s77 a18 s76)
		(s78 a6 s41)
		(s79 a17 s77)
		(s80 a16 s79)
		(s80 a16 s17)
		(s81 a14 s80)
		(s82 a13 s81)
		(s83 a32 s47)
		(s83 a32 s21)
		(s84 a12 s82)
		(s84 a12 s22)
		(s85 a31 s83)
		(s86 a12 s97)
		(s87 a26 s54)
		(s88 a25 s87)
		(s89 a22 s57)
		(s90 a21 s89)
		(s91 a20 s90)
		(s92 a19 s91)
		(s93 a18 s92)
		(s94 a17 s93)
		(s95 a16 s94)
		(s95 a16 s17)
		(s96 a14 s95)
		(s97 a13 s96)
		(s98 a12 s97)
		(s98 a12 s99)
		(s99 a13 s53)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:14:27
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 },
	initialStates = {s5 },
	finalStates = {s0 s8 s9 s11 s16 },
	transitions = {
		(s0 a23 s15)
		(s1 a23 s3)
		(s2 a29 s15)
		(s2 a21 s9)
		(s3 a2 s3)
		(s3 a3 s3)
		(s3 a4 s3)
		(s3 a5 s3)
		(s3 a6 s3)
		(s3 a7 s3)
		(s3 a8 s3)
		(s3 a9 s3)
		(s3 a10 s3)
		(s3 a11 s3)
		(s3 a12 s3)
		(s3 a13 s3)
		(s3 a14 s3)
		(s3 a16 s3)
		(s3 a17 s3)
		(s3 a18 s3)
		(s3 a19 s3)
		(s3 a20 s13)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a32 s3)
		(s4 a29 s6)
		(s4 a21 s7)
		(s5 a0 s8)
		(s5 a0 s5)
		(s5 a1 s11)
		(s5 a1 s12)
		(s6 a25 s6)
		(s6 a3 s3)
		(s6 a26 s6)
		(s6 a27 s6)
		(s6 a5 s6)
		(s6 a28 s6)
		(s6 a6 s3)
		(s6 a8 s6)
		(s6 a30 s6)
		(s6 a9 s3)
		(s6 a31 s3)
		(s6 a11 s6)
		(s6 a12 s6)
		(s6 a13 s6)
		(s6 a14 s6)
		(s6 a16 s6)
		(s6 a17 s6)
		(s6 a18 s6)
		(s6 a19 s6)
		(s6 a20 s4)
		(s7 a22 s10)
		(s8 a1 s3)
		(s9 a22 s10)
		(s10 a23 s11)
		(s11 a2 s6)
		(s11 a3 s3)
		(s11 a4 s6)
		(s11 a5 s6)
		(s11 a6 s3)
		(s11 a7 s6)
		(s11 a8 s6)
		(s11 a9 s3)
		(s11 a10 s6)
		(s11 a11 s6)
		(s11 a12 s6)
		(s11 a13 s6)
		(s11 a14 s6)
		(s11 a16 s6)
		(s11 a17 s6)
		(s11 a18 s6)
		(s11 a19 s6)
		(s11 a20 s4)
		(s11 a22 s17)
		(s11 a24 s6)
		(s11 a25 s6)
		(s11 a26 s6)
		(s11 a27 s6)
		(s11 a28 s6)
		(s11 a30 s6)
		(s11 a31 s3)
		(s11 a32 s6)
		(s12 a2 s11)
		(s12 a2 s12)
		(s12 a3 s11)
		(s12 a3 s12)
		(s12 a4 s11)
		(s12 a4 s12)
		(s12 a5 s11)
		(s12 a5 s12)
		(s12 a6 s11)
		(s12 a6 s12)
		(s12 a7 s11)
		(s12 a7 s12)
		(s12 a8 s11)
		(s12 a8 s12)
		(s12 a9 s11)
		(s12 a9 s12)
		(s12 a10 s11)
		(s12 a10 s12)
		(s12 a11 s11)
		(s12 a11 s12)
		(s12 a12 s11)
		(s12 a12 s12)
		(s12 a13 s11)
		(s12 a13 s12)
		(s12 a14 s11)
		(s12 a14 s12)
		(s12 a16 s11)
		(s12 a16 s12)
		(s12 a17 s11)
		(s12 a17 s12)
		(s12 a18 s11)
		(s12 a18 s12)
		(s12 a19 s11)
		(s12 a19 s12)
		(s12 a20 s12)
		(s12 a20 s16)
		(s12 a21 s11)
		(s12 a21 s12)
		(s12 a22 s0)
		(s12 a22 s12)
		(s12 a23 s11)
		(s12 a23 s12)
		(s12 a24 s11)
		(s12 a24 s12)
		(s12 a25 s11)
		(s12 a25 s12)
		(s12 a26 s11)
		(s12 a26 s12)
		(s12 a27 s11)
		(s12 a27 s12)
		(s12 a28 s11)
		(s12 a28 s12)
		(s12 a29 s11)
		(s12 a29 s12)
		(s12 a30 s11)
		(s12 a30 s12)
		(s12 a31 s11)
		(s12 a31 s12)
		(s12 a32 s11)
		(s12 a32 s12)
		(s13 a29 s3)
		(s13 a21 s14)
		(s14 a22 s1)
		(s15 a24 s15)
		(s15 a25 s15)
		(s15 a26 s15)
		(s15 a27 s15)
		(s15 a28 s15)
		(s15 a30 s15)
		(s15 a31 s3)
		(s15 a12 s15)
		(s15 a13 s15)
		(s15 a14 s15)
		(s15 a16 s15)
		(s15 a17 s15)
		(s15 a18 s15)
		(s15 a19 s15)
		(s15 a20 s2)
		(s16 a29 s6)
		(s16 a21 s7)
		(s17 a23 s15)
	}
);
