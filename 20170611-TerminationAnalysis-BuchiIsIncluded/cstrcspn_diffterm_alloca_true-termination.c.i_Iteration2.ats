// Testfile dumped by Ultimate at 2017/06/11 23:19:12
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s9 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	transitions = {
		(s0 a11 s4)
		(s1 a2 s17)
		(s2 a20 s19)
		(s3 a30 s10)
		(s4 a12 s7)
		(s5 a15 s6)
		(s6 a17 s15)
		(s7 a13 s8)
		(s8 a14 s5)
		(s9 a0 s1)
		(s10 a32 s11)
		(s11 a33 s8)
		(s12 a25 s13)
		(s13 a27 s3)
		(s13 a28 s2)
		(s14 a24 s12)
		(s15 a18 s16)
		(s16 a19 s2)
		(s17 a5 s18)
		(s17 a7 s18)
		(s18 a8 s22)
		(s18 a9 s22)
		(s19 a21 s20)
		(s20 a22 s21)
		(s21 a23 s14)
		(s21 a26 s13)
		(s22 a10 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:13
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 },
	initialStates = {s8 },
	finalStates = {s1 s7 s10 },
	transitions = {
		(s0 a14 s0)
		(s0 a15 s5)
		(s1 a20 s4)
		(s1 a21 s4)
		(s1 a5 s4)
		(s1 a22 s4)
		(s1 a7 s4)
		(s1 a23 s4)
		(s1 a24 s4)
		(s1 a25 s4)
		(s1 a8 s4)
		(s1 a26 s4)
		(s1 a9 s4)
		(s1 a11 s4)
		(s1 a27 s4)
		(s1 a12 s4)
		(s1 a28 s4)
		(s1 a30 s4)
		(s1 a14 s4)
		(s1 a15 s2)
		(s1 a32 s4)
		(s1 a18 s2)
		(s1 a33 s0)
		(s2 a20 s2)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a26 s2)
		(s2 a27 s2)
		(s2 a28 s2)
		(s2 a30 s2)
		(s2 a32 s2)
		(s2 a17 s2)
		(s2 a18 s2)
		(s2 a33 s0)
		(s2 a19 s2)
		(s3 a15 s6)
		(s4 a20 s4)
		(s4 a21 s4)
		(s4 a22 s4)
		(s4 a23 s4)
		(s4 a24 s4)
		(s4 a25 s4)
		(s4 a8 s4)
		(s4 a26 s4)
		(s4 a9 s4)
		(s4 a27 s4)
		(s4 a12 s4)
		(s4 a28 s4)
		(s4 a30 s4)
		(s4 a15 s2)
		(s4 a32 s4)
		(s4 a33 s0)
		(s5 a20 s5)
		(s5 a21 s5)
		(s5 a22 s5)
		(s5 a23 s5)
		(s5 a24 s5)
		(s5 a25 s5)
		(s5 a26 s5)
		(s5 a27 s5)
		(s5 a28 s5)
		(s5 a30 s5)
		(s5 a32 s5)
		(s5 a17 s5)
		(s5 a18 s5)
		(s5 a33 s0)
		(s5 a19 s5)
		(s6 a20 s6)
		(s6 a21 s6)
		(s6 a22 s6)
		(s6 a23 s6)
		(s6 a24 s6)
		(s6 a25 s6)
		(s6 a26 s6)
		(s6 a27 s6)
		(s6 a28 s6)
		(s6 a30 s6)
		(s6 a32 s6)
		(s6 a17 s6)
		(s6 a18 s6)
		(s6 a33 s10)
		(s6 a19 s6)
		(s7 a17 s2)
		(s7 a19 s2)
		(s8 a0 s1)
		(s8 a0 s8)
		(s8 a2 s1)
		(s8 a2 s8)
		(s8 a5 s1)
		(s8 a5 s8)
		(s8 a7 s1)
		(s8 a7 s8)
		(s8 a8 s1)
		(s8 a8 s8)
		(s8 a9 s1)
		(s8 a9 s8)
		(s8 a10 s1)
		(s8 a10 s9)
		(s9 a20 s1)
		(s9 a20 s9)
		(s9 a21 s1)
		(s9 a21 s9)
		(s9 a22 s1)
		(s9 a22 s9)
		(s9 a23 s1)
		(s9 a23 s9)
		(s9 a24 s1)
		(s9 a24 s9)
		(s9 a25 s1)
		(s9 a25 s9)
		(s9 a26 s1)
		(s9 a26 s9)
		(s9 a11 s1)
		(s9 a11 s9)
		(s9 a27 s1)
		(s9 a27 s9)
		(s9 a12 s1)
		(s9 a12 s9)
		(s9 a13 s9)
		(s9 a13 s10)
		(s9 a28 s1)
		(s9 a28 s9)
		(s9 a14 s1)
		(s9 a14 s9)
		(s9 a30 s1)
		(s9 a30 s9)
		(s9 a15 s7)
		(s9 a15 s9)
		(s9 a32 s1)
		(s9 a32 s9)
		(s9 a17 s1)
		(s9 a17 s9)
		(s9 a18 s7)
		(s9 a18 s9)
		(s9 a33 s1)
		(s9 a33 s9)
		(s9 a19 s1)
		(s9 a19 s9)
		(s10 a14 s3)
	}
);
