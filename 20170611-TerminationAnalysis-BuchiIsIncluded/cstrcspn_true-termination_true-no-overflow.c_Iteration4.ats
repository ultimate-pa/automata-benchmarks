// Testfile dumped by Ultimate at 2017/06/12 00:01:44
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 },
	initialStates = {s2 },
	finalStates = {s2 s3 s4 s5 s6 s9 s10 s11 s14 s15 s18 s19 s20 s21 s22 s23 s26 s27 s28 s31 s32 s35 s37 s38 s39 },
	transitions = {
		(s0 a26 s7)
		(s1 a34 s34)
		(s1 a35 s7)
		(s2 a0 s37)
		(s3 a10 s4)
		(s4 a12 s10)
		(s5 a27 s6)
		(s6 a28 s14)
		(s7 a27 s8)
		(s8 a28 s16)
		(s9 a8 s3)
		(s10 a14 s11)
		(s11 a15 s31)
		(s11 a16 s31)
		(s12 a1 s13)
		(s13 a3 s29)
		(s14 a29 s15)
		(s15 a30 s22)
		(s16 a29 s17)
		(s17 a33 s33)
		(s17 a30 s24)
		(s18 a18 s19)
		(s19 a19 s20)
		(s20 a20 s26)
		(s21 a4 s9)
		(s21 a7 s9)
		(s22 a31 s23)
		(s23 a32 s32)
		(s24 a31 s25)
		(s25 a32 s1)
		(s26 a21 s27)
		(s26 a21 s28)
		(s27 a22 s35)
		(s28 a22 s36)
		(s29 a21 s27)
		(s29 a21 s30)
		(s30 a22 s36)
		(s31 a17 s18)
		(s32 a35 s5)
		(s33 a34 s34)
		(s34 a37 s12)
		(s35 a24 s38)
		(s36 a24 s40)
		(s37 a2 s21)
		(s38 a25 s39)
		(s39 a26 s5)
		(s40 a25 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 00:01:46
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 },
	initialStates = {s0 },
	finalStates = {s1 s6 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s6)
		(s0 a1 s0)
		(s0 a1 s6)
		(s0 a2 s0)
		(s0 a2 s6)
		(s0 a3 s0)
		(s0 a3 s6)
		(s0 a4 s0)
		(s0 a4 s6)
		(s0 a7 s0)
		(s0 a7 s6)
		(s0 a8 s0)
		(s0 a8 s6)
		(s0 a10 s0)
		(s0 a10 s6)
		(s0 a12 s0)
		(s0 a12 s6)
		(s0 a14 s0)
		(s0 a14 s6)
		(s0 a15 s0)
		(s0 a15 s6)
		(s0 a16 s0)
		(s0 a16 s6)
		(s0 a17 s0)
		(s0 a17 s6)
		(s0 a18 s0)
		(s0 a18 s6)
		(s0 a19 s0)
		(s0 a19 s6)
		(s0 a20 s0)
		(s0 a20 s6)
		(s0 a21 s0)
		(s0 a21 s6)
		(s0 a22 s0)
		(s0 a22 s6)
		(s0 a24 s0)
		(s0 a24 s6)
		(s0 a25 s0)
		(s0 a25 s6)
		(s0 a26 s0)
		(s0 a26 s6)
		(s0 a27 s0)
		(s0 a27 s6)
		(s0 a28 s0)
		(s0 a28 s1)
		(s0 a29 s0)
		(s0 a29 s6)
		(s0 a30 s0)
		(s0 a30 s6)
		(s0 a31 s0)
		(s0 a31 s1)
		(s0 a32 s0)
		(s0 a32 s6)
		(s0 a33 s0)
		(s0 a33 s6)
		(s0 a34 s0)
		(s0 a34 s6)
		(s0 a35 s0)
		(s0 a35 s6)
		(s0 a37 s0)
		(s0 a37 s1)
		(s1 a32 s3)
		(s1 a1 s3)
		(s1 a29 s3)
		(s2 a26 s2)
		(s2 a4 s2)
		(s2 a7 s2)
		(s2 a27 s2)
		(s2 a28 s3)
		(s2 a12 s2)
		(s2 a14 s2)
		(s2 a31 s3)
		(s2 a15 s2)
		(s2 a16 s2)
		(s2 a19 s2)
		(s2 a34 s2)
		(s2 a37 s3)
		(s2 a21 s2)
		(s2 a22 s2)
		(s3 a1 s3)
		(s3 a24 s7)
		(s3 a3 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a32 s3)
		(s3 a33 s3)
		(s3 a34 s3)
		(s3 a35 s6)
		(s3 a37 s3)
		(s3 a21 s3)
		(s3 a22 s3)
		(s4 a27 s4)
		(s4 a28 s1)
		(s5 a1 s5)
		(s5 a24 s7)
		(s5 a3 s5)
		(s5 a29 s5)
		(s5 a30 s5)
		(s5 a31 s5)
		(s5 a32 s5)
		(s5 a33 s5)
		(s5 a34 s5)
		(s5 a35 s7)
		(s5 a37 s5)
		(s5 a21 s5)
		(s5 a22 s5)
		(s6 a2 s2)
		(s6 a25 s2)
		(s6 a3 s2)
		(s6 a26 s2)
		(s6 a4 s2)
		(s6 a7 s2)
		(s6 a27 s2)
		(s6 a10 s2)
		(s6 a28 s3)
		(s6 a12 s2)
		(s6 a14 s2)
		(s6 a30 s2)
		(s6 a31 s3)
		(s6 a15 s2)
		(s6 a16 s2)
		(s6 a33 s2)
		(s6 a18 s2)
		(s6 a19 s2)
		(s6 a34 s2)
		(s6 a35 s4)
		(s6 a21 s2)
		(s6 a37 s3)
		(s6 a22 s2)
		(s7 a25 s7)
		(s7 a26 s7)
		(s7 a27 s7)
		(s7 a28 s5)
	}
);
