// Testfile dumped by Ultimate at 2017/06/11 23:08:39
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 },
	initialStates = {s1 },
	finalStates = {s1 s2 s3 s6 s7 s10 s11 s12 s14 s15 s18 s19 s20 s21 s22 s23 s24 },
	transitions = {
		(s0 a14 s8)
		(s1 a0 s18)
		(s2 a8 s3)
		(s3 a18 s10)
		(s4 a9 s5)
		(s5 a10 s13)
		(s6 a16 s7)
		(s7 a7 s2)
		(s8 a16 s9)
		(s9 a7 s4)
		(s10 a19 s11)
		(s11 a21 s21)
		(s12 a7 s4)
		(s13 a11 s14)
		(s13 a11 s16)
		(s14 a12 s15)
		(s15 a15 s6)
		(s15 a13 s24)
		(s16 a12 s17)
		(s17 a15 s8)
		(s17 a13 s0)
		(s18 a1 s19)
		(s19 a2 s20)
		(s19 a3 s20)
		(s20 a4 s23)
		(s21 a22 s22)
		(s22 a23 s10)
		(s22 a24 s10)
		(s23 a6 s12)
		(s24 a14 s6)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:08:40
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s1 },
	finalStates = {s0 s4 },
	transitions = {
		(s0 a22 s5)
		(s1 a0 s1)
		(s1 a0 s4)
		(s1 a15 s1)
		(s1 a15 s4)
		(s1 a1 s1)
		(s1 a1 s4)
		(s1 a16 s1)
		(s1 a16 s4)
		(s1 a2 s1)
		(s1 a2 s4)
		(s1 a18 s1)
		(s1 a18 s4)
		(s1 a3 s1)
		(s1 a3 s4)
		(s1 a4 s1)
		(s1 a4 s4)
		(s1 a19 s1)
		(s1 a19 s4)
		(s1 a6 s1)
		(s1 a6 s4)
		(s1 a21 s0)
		(s1 a21 s1)
		(s1 a22 s1)
		(s1 a22 s4)
		(s1 a7 s1)
		(s1 a7 s4)
		(s1 a23 s1)
		(s1 a23 s4)
		(s1 a8 s1)
		(s1 a8 s4)
		(s1 a24 s1)
		(s1 a24 s4)
		(s1 a9 s1)
		(s1 a9 s4)
		(s1 a10 s1)
		(s1 a10 s4)
		(s1 a11 s1)
		(s1 a11 s4)
		(s1 a12 s1)
		(s1 a12 s4)
		(s1 a13 s1)
		(s1 a13 s4)
		(s1 a14 s1)
		(s1 a14 s4)
		(s2 a21 s0)
		(s2 a19 s2)
		(s3 a15 s3)
		(s3 a16 s3)
		(s3 a4 s3)
		(s3 a6 s3)
		(s3 a21 s5)
		(s3 a7 s3)
		(s3 a8 s3)
		(s3 a9 s3)
		(s3 a10 s3)
		(s3 a11 s3)
		(s3 a12 s3)
		(s3 a13 s3)
		(s3 a14 s3)
		(s4 a15 s3)
		(s4 a16 s3)
		(s4 a3 s3)
		(s4 a4 s3)
		(s4 a19 s3)
		(s4 a6 s3)
		(s4 a21 s5)
		(s4 a7 s3)
		(s4 a23 s2)
		(s4 a8 s3)
		(s4 a9 s3)
		(s4 a10 s3)
		(s4 a11 s3)
		(s4 a12 s3)
		(s4 a13 s3)
		(s4 a14 s3)
		(s5 a22 s5)
		(s5 a23 s4)
		(s5 a24 s6)
		(s6 a21 s6)
		(s6 a22 s6)
		(s6 a24 s6)
		(s6 a19 s6)
	}
);
