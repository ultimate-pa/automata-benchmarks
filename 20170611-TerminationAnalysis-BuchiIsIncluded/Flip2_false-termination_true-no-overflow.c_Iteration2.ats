// Testfile dumped by Ultimate at 2017/06/12 03:33:33
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	initialStates = {s19 },
	finalStates = {s0 s1 s2 s6 s7 s10 s13 s14 s17 s18 s19 s20 s21 s23 s25 s28 },
	transitions = {
		(s0 a11 s17)
		(s1 a11 s25)
		(s2 a7 s1)
		(s3 a2 s14)
		(s3 a2 s16)
		(s3 a2 s6)
		(s4 a10 s3)
		(s4 a11 s5)
		(s5 a1 s11)
		(s5 a3 s15)
		(s6 a7 s7)
		(s7 a11 s10)
		(s8 a7 s9)
		(s9 a10 s11)
		(s9 a11 s12)
		(s10 a1 s23)
		(s10 a3 s28)
		(s11 a2 s2)
		(s11 a2 s8)
		(s12 a1 s11)
		(s13 a2 s14)
		(s14 a7 s0)
		(s15 a2 s16)
		(s16 a7 s4)
		(s17 a1 s18)
		(s17 a3 s13)
		(s18 a2 s14)
		(s18 a2 s27)
		(s19 a0 s20)
		(s20 a2 s14)
		(s20 a2 s16)
		(s21 a7 s22)
		(s22 a10 s26)
		(s22 a11 s24)
		(s23 a2 s21)
		(s23 a2 s6)
		(s24 a1 s23)
		(s24 a3 s15)
		(s25 a1 s23)
		(s26 a2 s14)
		(s26 a2 s6)
		(s26 a2 s27)
		(s27 a7 s22)
		(s28 a2 s6)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 03:33:33
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s4 },
	finalStates = {s0 s3 s7 s8 s12 },
	transitions = {
		(s0 a2 s1)
		(s1 a7 s10)
		(s2 a2 s2)
		(s2 a7 s12)
		(s3 a10 s9)
		(s3 a11 s11)
		(s4 a0 s4)
		(s4 a0 s7)
		(s4 a1 s4)
		(s4 a1 s7)
		(s4 a2 s4)
		(s4 a2 s7)
		(s4 a3 s0)
		(s4 a3 s4)
		(s4 a7 s3)
		(s4 a7 s4)
		(s4 a10 s4)
		(s4 a10 s7)
		(s4 a11 s4)
		(s4 a11 s7)
		(s5 a2 s5)
		(s5 a7 s11)
		(s6 a2 s6)
		(s6 a7 s13)
		(s7 a1 s5)
		(s7 a2 s5)
		(s7 a3 s2)
		(s7 a7 s11)
		(s8 a1 s8)
		(s8 a3 s8)
		(s8 a2 s8)
		(s8 a7 s8)
		(s8 a10 s8)
		(s8 a11 s8)
		(s9 a1 s9)
		(s9 a2 s9)
		(s9 a3 s6)
		(s9 a7 s9)
		(s9 a10 s9)
		(s9 a11 s9)
		(s10 a10 s9)
		(s10 a11 s8)
		(s11 a1 s11)
		(s11 a3 s0)
		(s11 a2 s11)
		(s11 a7 s11)
		(s11 a10 s9)
		(s11 a11 s11)
		(s12 a10 s9)
		(s12 a11 s8)
		(s13 a10 s9)
		(s13 a11 s8)
	}
);
