// Testfile dumped by Ultimate at 2017/06/11 23:18:58
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 },
	initialStates = {s22 },
	finalStates = {s0 s1 s2 s5 s6 s7 s8 s9 s12 s14 s15 s20 s21 s22 s23 },
	transitions = {
		(s0 a2 s21)
		(s0 a3 s21)
		(s1 a10 s2)
		(s2 a11 s5)
		(s3 a14 s4)
		(s4 a15 s18)
		(s4 a16 s19)
		(s5 a12 s6)
		(s6 a13 s3)
		(s7 a9 s1)
		(s8 a18 s9)
		(s9 a19 s12)
		(s10 a18 s11)
		(s11 a19 s13)
		(s12 a20 s14)
		(s13 a20 s16)
		(s13 a20 s14)
		(s14 a21 s15)
		(s15 a23 s8)
		(s16 a21 s17)
		(s17 a23 s10)
		(s18 a18 s9)
		(s18 a18 s11)
		(s19 a13 s3)
		(s20 a6 s7)
		(s20 a7 s7)
		(s21 a4 s20)
		(s21 a5 s20)
		(s22 a0 s23)
		(s23 a1 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:00
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s1 },
	finalStates = {s2 s4 },
	transitions = {
		(s0 a20 s2)
		(s1 a0 s1)
		(s1 a0 s4)
		(s1 a13 s1)
		(s1 a13 s4)
		(s1 a1 s1)
		(s1 a1 s4)
		(s1 a14 s1)
		(s1 a14 s4)
		(s1 a2 s1)
		(s1 a2 s4)
		(s1 a15 s1)
		(s1 a15 s4)
		(s1 a3 s1)
		(s1 a3 s4)
		(s1 a16 s1)
		(s1 a16 s4)
		(s1 a4 s1)
		(s1 a4 s4)
		(s1 a5 s1)
		(s1 a5 s4)
		(s1 a18 s1)
		(s1 a18 s4)
		(s1 a19 s1)
		(s1 a19 s2)
		(s1 a20 s1)
		(s1 a20 s4)
		(s1 a6 s1)
		(s1 a6 s4)
		(s1 a21 s1)
		(s1 a21 s4)
		(s1 a7 s1)
		(s1 a7 s4)
		(s1 a23 s1)
		(s1 a23 s4)
		(s1 a9 s1)
		(s1 a9 s4)
		(s1 a10 s1)
		(s1 a10 s4)
		(s1 a11 s1)
		(s1 a11 s4)
		(s1 a12 s1)
		(s1 a12 s4)
		(s2 a20 s5)
		(s2 a21 s5)
		(s3 a13 s3)
		(s3 a14 s3)
		(s3 a2 s3)
		(s3 a15 s3)
		(s3 a3 s3)
		(s3 a16 s3)
		(s3 a4 s3)
		(s3 a5 s3)
		(s3 a18 s3)
		(s3 a19 s0)
		(s3 a6 s3)
		(s3 a7 s3)
		(s3 a23 s3)
		(s3 a9 s3)
		(s3 a10 s3)
		(s3 a11 s3)
		(s4 a13 s3)
		(s4 a1 s3)
		(s4 a14 s3)
		(s4 a2 s3)
		(s4 a15 s3)
		(s4 a3 s3)
		(s4 a16 s3)
		(s4 a4 s3)
		(s4 a5 s3)
		(s4 a18 s3)
		(s4 a19 s0)
		(s4 a6 s3)
		(s4 a21 s3)
		(s4 a7 s3)
		(s4 a23 s3)
		(s4 a9 s3)
		(s4 a10 s3)
		(s4 a11 s3)
		(s5 a21 s5)
		(s5 a23 s3)
	}
);
