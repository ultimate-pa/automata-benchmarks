// Testfile dumped by Ultimate at 2017/06/12 01:37:13
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 },
	initialStates = {s36 },
	finalStates = {s0 s1 s6 s9 s10 s15 s16 s17 s18 s25 s28 s31 s32 s34 s36 s38 s41 s42 s43 s44 s45 s46 },
	transitions = {
		(s0 a20 s1)
		(s1 a21 s19)
		(s2 a20 s3)
		(s3 a21 s20)
		(s4 a11 s5)
		(s5 a12 s23)
		(s6 a7 s7)
		(s7 a8 s62)
		(s8 a7 s7)
		(s9 a16 s10)
		(s10 a17 s25)
		(s11 a16 s12)
		(s12 a17 s58)
		(s13 a24 s14)
		(s14 a25 s19)
		(s14 a25 s20)
		(s15 a1 s16)
		(s16 a2 s34)
		(s17 a4 s18)
		(s18 a5 s28)
		(s19 a6 s8)
		(s20 a6 s63)
		(s21 a8 s22)
		(s22 a9 s29)
		(s23 a15 s24)
		(s24 a16 s40)
		(s25 a18 s43)
		(s26 a17 s27)
		(s27 a18 s33)
		(s28 a6 s44)
		(s28 a6 s6)
		(s29 a10 s30)
		(s30 a11 s60)
		(s31 a18 s32)
		(s32 a19 s0)
		(s33 a19 s35)
		(s34 a3 s17)
		(s35 a20 s56)
		(s36 a0 s15)
		(s37 a23 s13)
		(s38 a6 s8)
		(s39 a22 s37)
		(s40 a17 s39)
		(s41 a21 s38)
		(s42 a20 s41)
		(s43 a19 s42)
		(s44 a7 s53)
		(s45 a17 s31)
		(s46 a16 s45)
		(s47 a15 s46)
		(s47 a15 s48)
		(s48 a16 s26)
		(s49 a12 s47)
		(s50 a11 s49)
		(s51 a10 s50)
		(s52 a9 s51)
		(s53 a8 s52)
		(s54 a7 s53)
		(s55 a6 s54)
		(s56 a21 s55)
		(s57 a19 s2)
		(s58 a18 s57)
		(s59 a15 s9)
		(s59 a15 s11)
		(s60 a12 s59)
		(s61 a10 s4)
		(s62 a9 s61)
		(s63 a7 s21)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:20
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 },
	initialStates = {s25 },
	finalStates = {s4 s8 s10 s14 s31 s32 },
	transitions = {
		(s0 a19 s2)
		(s1 a21 s1)
		(s1 a3 s1)
		(s1 a4 s1)
		(s1 a5 s1)
		(s1 a23 s12)
		(s1 a25 s1)
		(s1 a6 s1)
		(s1 a7 s1)
		(s1 a8 s1)
		(s1 a9 s1)
		(s1 a10 s1)
		(s1 a11 s1)
		(s1 a12 s1)
		(s1 a15 s1)
		(s1 a16 s26)
		(s2 a20 s1)
		(s3 a18 s23)
		(s3 a22 s28)
		(s4 a20 s30)
		(s5 a20 s30)
		(s6 a15 s10)
		(s7 a18 s22)
		(s7 a22 s11)
		(s8 a18 s30)
		(s8 a22 s30)
		(s9 a18 s0)
		(s9 a22 s1)
		(s10 a2 s1)
		(s10 a16 s15)
		(s11 a10 s11)
		(s11 a11 s11)
		(s11 a12 s11)
		(s11 a23 s27)
		(s11 a25 s11)
		(s11 a6 s11)
		(s11 a15 s11)
		(s11 a7 s11)
		(s11 a16 s15)
		(s11 a8 s11)
		(s11 a9 s11)
		(s12 a24 s1)
		(s13 a2 s1)
		(s14 a24 s30)
		(s15 a17 s7)
		(s16 a17 s3)
		(s17 a24 s30)
		(s18 a24 s19)
		(s19 a10 s19)
		(s19 a11 s29)
		(s19 a21 s19)
		(s19 a25 s19)
		(s19 a6 s19)
		(s19 a7 s19)
		(s19 a8 s19)
		(s19 a9 s19)
		(s20 a17 s21)
		(s21 a18 s22)
		(s21 a22 s30)
		(s22 a19 s24)
		(s23 a19 s33)
		(s24 a20 s28)
		(s25 a0 s25)
		(s25 a0 s32)
		(s25 a18 s25)
		(s25 a18 s32)
		(s25 a19 s25)
		(s25 a19 s4)
		(s25 a1 s10)
		(s25 a1 s25)
		(s25 a20 s25)
		(s25 a20 s32)
		(s25 a2 s25)
		(s25 a2 s32)
		(s25 a21 s25)
		(s25 a21 s32)
		(s25 a3 s25)
		(s25 a3 s32)
		(s25 a4 s25)
		(s25 a4 s32)
		(s25 a22 s25)
		(s25 a22 s32)
		(s25 a5 s25)
		(s25 a5 s32)
		(s25 a23 s25)
		(s25 a23 s14)
		(s25 a24 s25)
		(s25 a24 s32)
		(s25 a25 s25)
		(s25 a25 s32)
		(s25 a6 s25)
		(s25 a6 s32)
		(s25 a7 s25)
		(s25 a7 s32)
		(s25 a8 s25)
		(s25 a8 s32)
		(s25 a9 s25)
		(s25 a9 s32)
		(s25 a10 s25)
		(s25 a10 s32)
		(s25 a11 s25)
		(s25 a11 s32)
		(s25 a12 s25)
		(s25 a12 s32)
		(s25 a15 s25)
		(s25 a15 s32)
		(s25 a16 s25)
		(s25 a16 s31)
		(s25 a17 s25)
		(s25 a17 s8)
		(s26 a17 s9)
		(s27 a24 s11)
		(s28 a10 s28)
		(s28 a11 s28)
		(s28 a21 s28)
		(s28 a12 s28)
		(s28 a23 s18)
		(s28 a6 s28)
		(s28 a15 s28)
		(s28 a7 s28)
		(s28 a16 s16)
		(s28 a8 s28)
		(s28 a9 s28)
		(s29 a12 s6)
		(s30 a19 s5)
		(s30 a21 s30)
		(s30 a23 s17)
		(s30 a25 s30)
		(s30 a6 s30)
		(s30 a7 s30)
		(s30 a8 s30)
		(s30 a9 s30)
		(s30 a10 s30)
		(s30 a11 s30)
		(s30 a12 s30)
		(s30 a15 s30)
		(s30 a16 s20)
		(s31 a17 s21)
		(s32 a19 s5)
		(s32 a1 s13)
		(s32 a21 s30)
		(s32 a23 s17)
		(s32 a25 s30)
		(s32 a6 s30)
		(s32 a7 s30)
		(s32 a8 s30)
		(s32 a9 s30)
		(s32 a10 s30)
		(s32 a11 s30)
		(s32 a12 s30)
		(s32 a15 s30)
		(s32 a16 s20)
		(s33 a20 s19)
	}
);
