// Testfile dumped by Ultimate at 2017/06/12 01:36:05
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 },
	initialStates = {s17 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 },
	transitions = {
		(s0 a31 s1)
		(s1 a5 s11)
		(s2 a2 s3)
		(s3 a3 s12)
		(s4 a9 s20)
		(s5 a14 s6)
		(s5 a17 s23)
		(s6 a15 s22)
		(s7 a29 s14)
		(s8 a20 s10)
		(s9 a12 s13)
		(s10 a24 s15)
		(s11 a6 s16)
		(s12 a4 s1)
		(s13 a13 s5)
		(s14 a30 s0)
		(s15 a25 s18)
		(s16 a8 s4)
		(s17 a1 s2)
		(s18 a26 s19)
		(s19 a27 s20)
		(s20 a10 s21)
		(s21 a11 s9)
		(s22 a16 s23)
		(s23 a18 s7)
		(s23 a19 s8)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:36:07
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 },
	initialStates = {s20 },
	finalStates = {s3 s12 s16 s18 s22 s25 s29 },
	transitions = {
		(s0 a18 s0)
		(s0 a19 s0)
		(s0 a20 s0)
		(s0 a24 s0)
		(s0 a25 s0)
		(s0 a26 s0)
		(s0 a9 s2)
		(s0 a27 s0)
		(s0 a10 s0)
		(s0 a29 s5)
		(s0 a11 s0)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s0 a17 s0)
		(s1 a18 s1)
		(s1 a19 s1)
		(s1 a20 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s17)
		(s1 a9 s1)
		(s1 a10 s1)
		(s1 a29 s21)
		(s1 a11 s1)
		(s1 a12 s1)
		(s1 a13 s1)
		(s1 a14 s1)
		(s1 a15 s1)
		(s1 a16 s1)
		(s1 a17 s1)
		(s2 a18 s2)
		(s2 a19 s2)
		(s2 a20 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a26 s0)
		(s2 a9 s2)
		(s2 a10 s2)
		(s2 a29 s7)
		(s2 a11 s2)
		(s2 a12 s2)
		(s2 a13 s2)
		(s2 a14 s2)
		(s2 a15 s2)
		(s2 a16 s2)
		(s2 a17 s2)
		(s3 a3 s13)
		(s3 a18 s15)
		(s3 a4 s15)
		(s3 a19 s15)
		(s3 a20 s15)
		(s3 a5 s15)
		(s3 a6 s26)
		(s3 a24 s15)
		(s3 a25 s15)
		(s3 a26 s15)
		(s3 a9 s23)
		(s3 a27 s15)
		(s3 a29 s24)
		(s3 a10 s15)
		(s3 a11 s15)
		(s3 a31 s15)
		(s3 a12 s15)
		(s3 a13 s15)
		(s3 a14 s15)
		(s3 a15 s15)
		(s3 a16 s15)
		(s3 a17 s15)
		(s4 a8 s16)
		(s5 a30 s3)
		(s6 a30 s13)
		(s7 a30 s29)
		(s8 a8 s18)
		(s9 a8 s2)
		(s10 a8 s1)
		(s11 a8 s17)
		(s12 a8 s0)
		(s13 a3 s13)
		(s13 a4 s13)
		(s13 a31 s13)
		(s13 a5 s13)
		(s13 a6 s11)
		(s14 a3 s3)
		(s14 a3 s14)
		(s14 a18 s3)
		(s14 a18 s14)
		(s14 a4 s3)
		(s14 a4 s14)
		(s14 a19 s3)
		(s14 a19 s14)
		(s14 a20 s3)
		(s14 a20 s14)
		(s14 a5 s3)
		(s14 a5 s14)
		(s14 a6 s12)
		(s14 a6 s14)
		(s14 a24 s3)
		(s14 a24 s14)
		(s14 a25 s3)
		(s14 a25 s14)
		(s14 a8 s3)
		(s14 a8 s14)
		(s14 a26 s3)
		(s14 a26 s14)
		(s14 a9 s14)
		(s14 a9 s29)
		(s14 a27 s3)
		(s14 a27 s14)
		(s14 a10 s3)
		(s14 a10 s14)
		(s14 a29 s14)
		(s14 a29 s25)
		(s14 a30 s3)
		(s14 a30 s14)
		(s14 a11 s3)
		(s14 a11 s14)
		(s14 a31 s3)
		(s14 a31 s14)
		(s14 a12 s3)
		(s14 a12 s14)
		(s14 a13 s3)
		(s14 a13 s14)
		(s14 a14 s3)
		(s14 a14 s14)
		(s14 a15 s3)
		(s14 a15 s14)
		(s14 a16 s3)
		(s14 a16 s14)
		(s14 a17 s3)
		(s14 a17 s14)
		(s15 a18 s15)
		(s15 a19 s15)
		(s15 a20 s15)
		(s15 a5 s15)
		(s15 a6 s26)
		(s15 a24 s15)
		(s15 a25 s15)
		(s15 a26 s15)
		(s15 a27 s15)
		(s15 a29 s24)
		(s15 a10 s15)
		(s15 a11 s15)
		(s15 a12 s15)
		(s15 a13 s15)
		(s15 a14 s15)
		(s15 a15 s15)
		(s15 a16 s15)
		(s15 a17 s15)
		(s16 a9 s2)
		(s17 a18 s17)
		(s17 a19 s17)
		(s17 a20 s17)
		(s17 a24 s17)
		(s17 a25 s17)
		(s17 a26 s17)
		(s17 a9 s1)
		(s17 a27 s17)
		(s17 a10 s17)
		(s17 a29 s6)
		(s17 a11 s17)
		(s17 a12 s17)
		(s17 a13 s17)
		(s17 a14 s17)
		(s17 a15 s17)
		(s17 a16 s17)
		(s17 a17 s17)
		(s18 a9 s2)
		(s19 a31 s19)
		(s19 a5 s19)
		(s19 a6 s8)
		(s20 a1 s20)
		(s20 a1 s22)
		(s20 a2 s3)
		(s20 a2 s14)
		(s21 a30 s27)
		(s22 a2 s13)
		(s23 a18 s23)
		(s23 a19 s23)
		(s23 a20 s23)
		(s23 a5 s23)
		(s23 a6 s9)
		(s23 a24 s23)
		(s23 a25 s23)
		(s23 a26 s15)
		(s23 a10 s23)
		(s23 a29 s28)
		(s23 a11 s23)
		(s23 a12 s23)
		(s23 a13 s23)
		(s23 a14 s23)
		(s23 a15 s23)
		(s23 a16 s23)
		(s23 a17 s23)
		(s24 a30 s30)
		(s25 a30 s30)
		(s26 a8 s0)
		(s27 a31 s27)
		(s27 a5 s27)
		(s27 a6 s10)
		(s28 a30 s19)
		(s29 a10 s23)
		(s29 a31 s23)
		(s30 a31 s30)
		(s30 a5 s30)
		(s30 a6 s4)
	}
);
