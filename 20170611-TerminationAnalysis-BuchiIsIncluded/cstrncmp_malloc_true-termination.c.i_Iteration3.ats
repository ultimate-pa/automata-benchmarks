// Testfile dumped by Ultimate at 2017/06/11 23:19:36
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s15 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	transitions = {
		(s0 a22 s10)
		(s1 a29 s16)
		(s2 a35 s19)
		(s3 a4 s4)
		(s3 a6 s4)
		(s4 a11 s5)
		(s4 a12 s5)
		(s5 a15 s6)
		(s6 a16 s9)
		(s7 a1 s3)
		(s8 a20 s19)
		(s9 a17 s11)
		(s10 a23 s12)
		(s11 a18 s8)
		(s12 a24 s13)
		(s13 a25 s14)
		(s14 a26 s1)
		(s15 a0 s7)
		(s16 a31 s17)
		(s17 a32 s18)
		(s18 a33 s2)
		(s19 a21 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:37
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 },
	initialStates = {s0 },
	finalStates = {s2 s3 s5 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s3)
		(s0 a1 s0)
		(s0 a1 s3)
		(s0 a4 s0)
		(s0 a4 s3)
		(s0 a6 s0)
		(s0 a6 s3)
		(s0 a11 s0)
		(s0 a11 s3)
		(s0 a12 s0)
		(s0 a12 s3)
		(s0 a15 s3)
		(s0 a15 s8)
		(s1 a31 s1)
		(s1 a32 s1)
		(s1 a25 s1)
		(s1 a33 s1)
		(s1 a26 s1)
		(s1 a35 s2)
		(s1 a29 s1)
		(s2 a23 s7)
		(s2 a31 s7)
		(s2 a24 s1)
		(s2 a32 s1)
		(s2 a26 s7)
		(s2 a20 s7)
		(s2 a35 s9)
		(s2 a21 s7)
		(s2 a29 s7)
		(s2 a22 s7)
		(s3 a16 s4)
		(s3 a17 s4)
		(s3 a4 s4)
		(s3 a6 s4)
		(s3 a11 s4)
		(s3 a12 s4)
		(s4 a17 s4)
		(s4 a11 s4)
		(s4 a12 s4)
		(s5 a25 s1)
		(s5 a33 s1)
		(s6 a23 s2)
		(s6 a23 s6)
		(s6 a31 s2)
		(s6 a31 s6)
		(s6 a24 s5)
		(s6 a24 s6)
		(s6 a32 s5)
		(s6 a32 s6)
		(s6 a25 s2)
		(s6 a25 s6)
		(s6 a33 s2)
		(s6 a33 s6)
		(s6 a26 s2)
		(s6 a26 s6)
		(s6 a20 s2)
		(s6 a20 s6)
		(s6 a35 s2)
		(s6 a35 s6)
		(s6 a21 s2)
		(s6 a21 s6)
		(s6 a29 s2)
		(s6 a29 s6)
		(s6 a22 s2)
		(s6 a22 s6)
		(s7 a23 s7)
		(s7 a31 s7)
		(s7 a24 s1)
		(s7 a32 s1)
		(s7 a21 s7)
		(s7 a29 s7)
		(s7 a22 s7)
		(s8 a16 s3)
		(s8 a16 s8)
		(s8 a17 s3)
		(s8 a17 s8)
		(s8 a18 s2)
		(s8 a18 s6)
		(s9 a23 s9)
		(s9 a24 s5)
		(s9 a21 s9)
		(s9 a22 s9)
	}
);
