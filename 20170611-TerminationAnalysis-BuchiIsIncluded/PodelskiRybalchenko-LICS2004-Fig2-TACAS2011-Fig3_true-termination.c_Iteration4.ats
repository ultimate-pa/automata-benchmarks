// Testfile dumped by Ultimate at 2017/06/11 23:34:16
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 s107 s108 s109 s110 s111 s112 s113 s114 s115 s116 s117 s118 s119 s120 s121 s122 s123 s124 s125 s126 s127 s128 s129 s130 s131 s132 s133 s134 s135 s136 s137 s138 s139 s140 s141 s142 s143 s144 s145 s146 s147 s148 s149 s150 s151 s152 s153 s154 s155 s156 s157 s158 s159 s160 s161 s162 s163 s164 s165 s166 s167 s168 s169 s170 s171 s172 s173 s174 s175 s176 s177 s178 s179 s180 s181 s182 s183 s184 s185 s186 s187 s188 s189 s190 s191 s192 s193 s194 s195 s196 s197 s198 s199 s200 s201 },
	initialStates = {s9 },
	finalStates = {s0 s4 s7 s9 s10 s11 s12 s13 s16 s17 s18 s28 s33 s95 s103 s142 s150 s151 s191 },
	transitions = {
		(s0 a9 s1)
		(s1 a2 s91)
		(s2 a9 s3)
		(s3 a2 s54)
		(s3 a2 s8)
		(s3 a2 s56)
		(s4 a2 s5)
		(s5 a7 s201)
		(s6 a2 s5)
		(s7 a7 s2)
		(s8 a7 s2)
		(s9 a0 s10)
		(s10 a2 s22)
		(s10 a2 s23)
		(s10 a2 s57)
		(s10 a2 s58)
		(s10 a2 s47)
		(s11 a9 s4)
		(s12 a7 s0)
		(s13 a7 s11)
		(s14 a2 s16)
		(s14 a2 s17)
		(s14 a2 s18)
		(s14 a2 s13)
		(s14 a2 s15)
		(s15 a7 s25)
		(s16 a7 s93)
		(s17 a7 s133)
		(s18 a7 s44)
		(s19 a8 s14)
		(s20 a7 s19)
		(s21 a2 s20)
		(s21 a2 s22)
		(s21 a2 s23)
		(s21 a2 s24)
		(s21 a2 s12)
		(s22 a7 s133)
		(s23 a7 s44)
		(s24 a7 s93)
		(s25 a8 s26)
		(s26 a2 s16)
		(s26 a2 s17)
		(s26 a2 s18)
		(s26 a2 s20)
		(s26 a2 s12)
		(s27 a2 s7)
		(s27 a2 s28)
		(s27 a2 s15)
		(s28 a7 s195)
		(s29 a8 s30)
		(s30 a2 s28)
		(s30 a2 s142)
		(s30 a2 s15)
		(s31 a7 s32)
		(s32 a8 s65)
		(s33 a7 s34)
		(s34 a8 s52)
		(s35 a2 s33)
		(s35 a2 s23)
		(s36 a9 s37)
		(s37 a2 s64)
		(s37 a2 s33)
		(s37 a2 s23)
		(s38 a7 s36)
		(s39 a2 s38)
		(s39 a2 s40)
		(s39 a2 s41)
		(s39 a2 s42)
		(s39 a2 s43)
		(s40 a7 s85)
		(s41 a7 s83)
		(s42 a7 s199)
		(s43 a7 s187)
		(s44 a9 s45)
		(s45 a2 s71)
		(s45 a2 s91)
		(s46 a2 s48)
		(s46 a2 s17)
		(s46 a2 s49)
		(s46 a2 s18)
		(s46 a2 s47)
		(s47 a7 s55)
		(s48 a7 s104)
		(s49 a7 s194)
		(s50 a8 s21)
		(s51 a7 s50)
		(s52 a2 s51)
		(s52 a2 s53)
		(s52 a2 s54)
		(s53 a7 s134)
		(s54 a7 s195)
		(s55 a8 s46)
		(s56 a7 s34)
		(s57 a7 s132)
		(s58 a7 s92)
		(s59 a2 s54)
		(s59 a2 s56)
		(s60 a2 s42)
		(s60 a2 s31)
		(s61 a2 s38)
		(s61 a2 s42)
		(s61 a2 s62)
		(s61 a2 s31)
		(s62 a7 s72)
		(s63 a9 s61)
		(s64 a7 s63)
		(s65 a2 s64)
		(s65 a2 s66)
		(s65 a2 s67)
		(s65 a2 s23)
		(s65 a2 s15)
		(s66 a7 s78)
		(s67 a7 s94)
		(s68 a2 s64)
		(s68 a2 s66)
		(s68 a2 s67)
		(s68 a2 s69)
		(s68 a2 s23)
		(s69 a7 s29)
		(s70 a9 s35)
		(s71 a7 s70)
		(s72 a9 s68)
		(s73 a7 s74)
		(s74 a8 s27)
		(s75 a2 s71)
		(s75 a2 s76)
		(s76 a7 s139)
		(s77 a2 s42)
		(s77 a2 s62)
		(s77 a2 s31)
		(s78 a9 s77)
		(s79 a9 s39)
		(s80 a2 s81)
		(s80 a2 s66)
		(s80 a2 s82)
		(s80 a2 s67)
		(s80 a2 s58)
		(s81 a7 s79)
		(s82 a7 s109)
		(s83 a8 s84)
		(s84 a2 s81)
		(s84 a2 s66)
		(s84 a2 s67)
		(s84 a2 s105)
		(s84 a2 s58)
		(s85 a9 s80)
		(s86 a2 s67)
		(s86 a2 s69)
		(s86 a2 s23)
		(s87 a9 s86)
		(s88 a7 s89)
		(s89 a9 s113)
		(s90 a2 s54)
		(s90 a2 s56)
		(s90 a2 s88)
		(s91 a7 s87)
		(s92 a9 s75)
		(s93 a9 s90)
		(s94 a9 s1)
		(s95 a7 s94)
		(s96 a2 s16)
		(s96 a2 s48)
		(s96 a2 s97)
		(s96 a2 s49)
		(s96 a2 s95)
		(s97 a7 s108)
		(s98 a8 s99)
		(s99 a2 s16)
		(s99 a2 s48)
		(s99 a2 s49)
		(s99 a2 s105)
		(s99 a2 s95)
		(s100 a9 s96)
		(s101 a7 s100)
		(s102 a2 s49)
		(s102 a2 s82)
		(s102 a2 s101)
		(s102 a2 s103)
		(s102 a2 s28)
		(s103 a7 s115)
		(s104 a9 s102)
		(s105 a7 s98)
		(s106 a2 s49)
		(s106 a2 s7)
		(s106 a2 s105)
		(s106 a2 s107)
		(s106 a2 s28)
		(s107 a7 s175)
		(s108 a8 s106)
		(s109 a8 s143)
		(s110 a2 s22)
		(s110 a2 s23)
		(s110 a2 s31)
		(s111 a2 s112)
		(s111 a2 s97)
		(s111 a2 s49)
		(s111 a2 s67)
		(s111 a2 s24)
		(s112 a7 s141)
		(s113 a2 s67)
		(s113 a2 s22)
		(s113 a2 s23)
		(s113 a2 s24)
		(s113 a2 s73)
		(s114 a2 s112)
		(s114 a2 s49)
		(s114 a2 s67)
		(s114 a2 s24)
		(s114 a2 s105)
		(s115 a9 s110)
		(s116 a8 s114)
		(s117 a7 s115)
		(s118 a7 s116)
		(s119 a2 s53)
		(s119 a2 s54)
		(s119 a2 s118)
		(s119 a2 s120)
		(s119 a2 s121)
		(s120 a7 s184)
		(s121 a7 s178)
		(s122 a8 s123)
		(s123 a2 s164)
		(s123 a2 s53)
		(s123 a2 s54)
		(s123 a2 s118)
		(s123 a2 s121)
		(s124 a9 s125)
		(s125 a2 s97)
		(s125 a2 s67)
		(s125 a2 s24)
		(s125 a2 s57)
		(s125 a2 s58)
		(s126 a7 s122)
		(s127 a7 s124)
		(s128 a2 s129)
		(s128 a2 s130)
		(s128 a2 s117)
		(s128 a2 s54)
		(s128 a2 s127)
		(s129 a7 s170)
		(s130 a7 s165)
		(s131 a2 s117)
		(s131 a2 s54)
		(s131 a2 s56)
		(s131 a2 s88)
		(s132 a9 s128)
		(s133 a9 s131)
		(s134 a9 s135)
		(s135 a2 s42)
		(s135 a2 s154)
		(s135 a2 s31)
		(s136 a2 s82)
		(s136 a2 s67)
		(s136 a2 s58)
		(s137 a9 s111)
		(s138 a7 s137)
		(s139 a9 s136)
		(s140 a2 s117)
		(s140 a2 s54)
		(s140 a2 s121)
		(s140 a2 s138)
		(s140 a2 s126)
		(s141 a9 s140)
		(s142 a7 s134)
		(s143 a2 s144)
		(s143 a2 s49)
		(s143 a2 s105)
		(s143 a2 s28)
		(s143 a2 s142)
		(s144 a7 s156)
		(s145 a2 s49)
		(s145 a2 s146)
		(s145 a2 s82)
		(s145 a2 s28)
		(s145 a2 s142)
		(s146 a7 s160)
		(s147 a9 s145)
		(s148 a7 s147)
		(s149 a2 s49)
		(s149 a2 s82)
		(s149 a2 s148)
		(s149 a2 s150)
		(s149 a2 s151)
		(s150 a7 s199)
		(s151 a7 s198)
		(s152 a2 s49)
		(s152 a2 s97)
		(s152 a2 s148)
		(s152 a2 s150)
		(s152 a2 s151)
		(s153 a2 s97)
		(s153 a2 s49)
		(s153 a2 s154)
		(s153 a2 s42)
		(s153 a2 s155)
		(s154 a7 s198)
		(s155 a7 s161)
		(s156 a9 s149)
		(s157 a9 s153)
		(s158 a7 s157)
		(s159 a2 s53)
		(s159 a2 s54)
		(s159 a2 s121)
		(s159 a2 s158)
		(s159 a2 s126)
		(s160 a9 s152)
		(s161 a9 s159)
		(s162 a2 s49)
		(s162 a2 s82)
		(s162 a2 s42)
		(s162 a2 s154)
		(s162 a2 s155)
		(s163 a9 s162)
		(s164 a7 s163)
		(s165 a8 s119)
		(s166 a2 s129)
		(s166 a2 s130)
		(s166 a2 s54)
		(s167 a9 s166)
		(s168 a7 s167)
		(s169 a2 s5)
		(s169 a2 s168)
		(s170 a9 s169)
		(s171 a2 s54)
		(s171 a2 s121)
		(s171 a2 s126)
		(s172 a9 s171)
		(s173 a7 s172)
		(s174 a2 s49)
		(s174 a2 s82)
		(s174 a2 s28)
		(s175 a9 s176)
		(s176 a2 s49)
		(s176 a2 s82)
		(s176 a2 s7)
		(s176 a2 s107)
		(s176 a2 s28)
		(s177 a2 s5)
		(s177 a2 s173)
		(s178 a9 s177)
		(s179 a2 s41)
		(s179 a2 s42)
		(s179 a2 s43)
		(s180 a2 s181)
		(s180 a2 s41)
		(s180 a2 s154)
		(s180 a2 s42)
		(s180 a2 s43)
		(s181 a7 s189)
		(s182 a9 s179)
		(s183 a7 s182)
		(s184 a9 s180)
		(s185 a2 s183)
		(s185 a2 s186)
		(s186 a7 s200)
		(s187 a9 s185)
		(s188 a2 s53)
		(s188 a2 s54)
		(s188 a2 s120)
		(s188 a2 s121)
		(s188 a2 s126)
		(s189 a9 s188)
		(s190 a2 s192)
		(s190 a2 s191)
		(s191 a7 s201)
		(s192 a7 s193)
		(s193 a9 s174)
		(s194 a9 s190)
		(s195 a9 s6)
		(s196 a2 s186)
		(s197 a2 s53)
		(s197 a2 s54)
		(s197 a2 s56)
		(s198 a9 s197)
		(s199 a9 s196)
		(s200 a9 s60)
		(s201 a9 s59)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:34:20
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=true, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 },
	initialStates = {s6 },
	finalStates = {s10 },
	transitions = {
		(s0 a2 s0)
		(s0 a7 s12)
		(s1 a2 s1)
		(s2 a8 s4)
		(s2 a9 s13)
		(s3 a2 s3)
		(s3 a7 s3)
		(s3 a8 s14)
		(s3 a9 s3)
		(s4 a2 s10)
		(s5 a2 s5)
		(s5 a7 s12)
		(s6 a0 s10)
		(s6 a0 s6)
		(s6 a2 s10)
		(s6 a2 s6)
		(s6 a7 s10)
		(s6 a7 s6)
		(s6 a8 s10)
		(s6 a8 s6)
		(s6 a9 s10)
		(s6 a9 s6)
		(s7 a2 s7)
		(s7 a7 s3)
		(s8 a2 s8)
		(s8 a7 s2)
		(s9 a7 s11)
		(s10 a2 s9)
		(s10 a7 s11)
		(s11 a8 s7)
		(s11 a9 s0)
		(s12 a8 s1)
		(s12 a9 s15)
		(s13 a2 s10)
		(s14 a2 s14)
		(s14 a7 s2)
		(s15 a2 s15)
		(s15 a7 s16)
		(s16 a8 s8)
		(s16 a9 s5)
	}
);
