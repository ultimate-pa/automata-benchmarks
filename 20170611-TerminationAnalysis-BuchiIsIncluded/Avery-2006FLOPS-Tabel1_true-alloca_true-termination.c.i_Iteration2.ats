// Testfile dumped by Ultimate at 2017/06/12 01:03:42
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 },
	initialStates = {s34 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 },
	transitions = {
		(s0 a27 s1)
		(s1 a28 s2)
		(s2 a29 s15)
		(s3 a37 s7)
		(s4 a45 s5)
		(s5 a46 s6)
		(s6 a47 s32)
		(s7 a38 s17)
		(s8 a12 s9)
		(s9 a13 s30)
		(s10 a41 s11)
		(s11 a42 s23)
		(s12 a19 s13)
		(s13 a20 s21)
		(s14 a24 s35)
		(s15 a30 s16)
		(s16 a31 s20)
		(s17 a40 s10)
		(s18 a44 s4)
		(s19 a18 s12)
		(s20 a32 s24)
		(s21 a22 s22)
		(s22 a23 s14)
		(s23 a43 s18)
		(s24 a33 s29)
		(s25 a3 s26)
		(s26 a4 s31)
		(s27 a9 s28)
		(s28 a11 s8)
		(s29 a34 s22)
		(s30 a16 s19)
		(s31 a6 s33)
		(s32 a0 s36)
		(s33 a8 s27)
		(s34 a1 s25)
		(s35 a25 s36)
		(s35 a26 s0)
		(s36 a36 s3)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:44
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 },
	initialStates = {s2 },
	finalStates = {s3 s5 s10 s13 s17 },
	transitions = {
		(s0 a27 s12)
		(s1 a27 s4)
		(s2 a1 s2)
		(s2 a1 s5)
		(s2 a3 s3)
		(s2 a3 s7)
		(s3 a0 s8)
		(s3 a4 s6)
		(s3 a6 s6)
		(s3 a8 s8)
		(s3 a9 s8)
		(s3 a11 s6)
		(s3 a12 s8)
		(s3 a13 s8)
		(s3 a16 s8)
		(s3 a18 s8)
		(s3 a19 s8)
		(s3 a20 s8)
		(s3 a22 s8)
		(s3 a23 s8)
		(s3 a24 s20)
		(s3 a27 s14)
		(s3 a29 s6)
		(s3 a30 s8)
		(s3 a31 s8)
		(s3 a32 s8)
		(s3 a33 s8)
		(s3 a34 s8)
		(s3 a36 s8)
		(s3 a37 s8)
		(s3 a38 s8)
		(s3 a40 s8)
		(s3 a41 s8)
		(s3 a42 s8)
		(s3 a43 s6)
		(s3 a44 s8)
		(s3 a45 s8)
		(s3 a46 s8)
		(s3 a47 s8)
		(s4 a28 s16)
		(s5 a3 s6)
		(s6 a0 s6)
		(s6 a4 s6)
		(s6 a6 s6)
		(s6 a8 s6)
		(s6 a9 s6)
		(s6 a11 s6)
		(s6 a12 s6)
		(s6 a13 s6)
		(s6 a16 s6)
		(s6 a18 s6)
		(s6 a19 s6)
		(s6 a20 s6)
		(s6 a22 s6)
		(s6 a23 s6)
		(s6 a24 s9)
		(s6 a30 s6)
		(s6 a31 s6)
		(s6 a32 s6)
		(s6 a33 s6)
		(s6 a34 s6)
		(s6 a36 s6)
		(s6 a37 s6)
		(s6 a38 s6)
		(s6 a40 s6)
		(s6 a41 s6)
		(s6 a42 s6)
		(s6 a43 s6)
		(s6 a44 s6)
		(s6 a45 s6)
		(s6 a46 s6)
		(s6 a47 s6)
		(s7 a0 s3)
		(s7 a0 s7)
		(s7 a4 s3)
		(s7 a4 s7)
		(s7 a6 s3)
		(s7 a6 s7)
		(s7 a8 s3)
		(s7 a8 s7)
		(s7 a9 s3)
		(s7 a9 s7)
		(s7 a11 s3)
		(s7 a11 s7)
		(s7 a12 s3)
		(s7 a12 s7)
		(s7 a13 s3)
		(s7 a13 s7)
		(s7 a16 s3)
		(s7 a16 s7)
		(s7 a18 s3)
		(s7 a18 s7)
		(s7 a19 s3)
		(s7 a19 s7)
		(s7 a20 s3)
		(s7 a20 s7)
		(s7 a22 s3)
		(s7 a22 s7)
		(s7 a23 s3)
		(s7 a23 s7)
		(s7 a24 s10)
		(s7 a24 s7)
		(s7 a25 s3)
		(s7 a25 s7)
		(s7 a26 s3)
		(s7 a26 s7)
		(s7 a27 s17)
		(s7 a27 s7)
		(s7 a28 s3)
		(s7 a28 s7)
		(s7 a29 s3)
		(s7 a29 s7)
		(s7 a30 s3)
		(s7 a30 s7)
		(s7 a31 s3)
		(s7 a31 s7)
		(s7 a32 s3)
		(s7 a32 s7)
		(s7 a33 s3)
		(s7 a33 s7)
		(s7 a34 s3)
		(s7 a34 s7)
		(s7 a36 s3)
		(s7 a36 s7)
		(s7 a37 s3)
		(s7 a37 s7)
		(s7 a38 s3)
		(s7 a38 s7)
		(s7 a40 s3)
		(s7 a40 s7)
		(s7 a41 s3)
		(s7 a41 s7)
		(s7 a42 s3)
		(s7 a42 s7)
		(s7 a43 s3)
		(s7 a43 s7)
		(s7 a44 s3)
		(s7 a44 s7)
		(s7 a45 s3)
		(s7 a45 s7)
		(s7 a46 s3)
		(s7 a46 s7)
		(s7 a47 s3)
		(s7 a47 s7)
		(s8 a0 s8)
		(s8 a9 s8)
		(s8 a11 s6)
		(s8 a13 s8)
		(s8 a16 s8)
		(s8 a18 s8)
		(s8 a19 s8)
		(s8 a20 s8)
		(s8 a22 s8)
		(s8 a23 s8)
		(s8 a24 s20)
		(s8 a31 s8)
		(s8 a32 s8)
		(s8 a33 s8)
		(s8 a34 s8)
		(s8 a36 s8)
		(s8 a37 s8)
		(s8 a38 s8)
		(s8 a40 s8)
		(s8 a41 s8)
		(s8 a42 s8)
		(s8 a43 s6)
		(s8 a45 s8)
		(s8 a46 s8)
		(s8 a47 s8)
		(s9 a25 s6)
		(s9 a26 s0)
		(s10 a25 s8)
		(s10 a26 s1)
		(s11 a30 s11)
		(s11 a31 s11)
		(s11 a32 s11)
		(s11 a33 s11)
		(s11 a34 s11)
		(s11 a36 s11)
		(s11 a37 s11)
		(s11 a38 s11)
		(s11 a40 s11)
		(s11 a41 s11)
		(s11 a42 s11)
		(s11 a23 s11)
		(s11 a43 s6)
		(s11 a24 s19)
		(s12 a28 s15)
		(s13 a27 s4)
		(s14 a28 s18)
		(s15 a29 s6)
		(s16 a29 s3)
		(s17 a28 s18)
		(s18 a29 s11)
		(s19 a25 s11)
		(s19 a26 s13)
		(s20 a25 s8)
		(s20 a26 s1)
	}
);
