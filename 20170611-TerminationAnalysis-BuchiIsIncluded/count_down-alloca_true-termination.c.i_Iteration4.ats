// Testfile dumped by Ultimate at 2017/06/12 01:37:52
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 },
	initialStates = {s31 },
	finalStates = {s0 s1 s4 s5 s6 s7 s10 s11 s12 s13 s20 s21 s23 s24 s27 s31 s33 s35 s36 s37 s38 },
	transitions = {
		(s0 a24 s1)
		(s1 a25 s21)
		(s2 a24 s3)
		(s3 a25 s22)
		(s4 a9 s5)
		(s5 a11 s27)
		(s6 a30 s7)
		(s7 a31 s0)
		(s8 a30 s9)
		(s9 a31 s2)
		(s10 a2 s11)
		(s11 a5 s4)
		(s11 a8 s4)
		(s12 a13 s13)
		(s13 a20 s20)
		(s14 a14 s15)
		(s15 a15 s40)
		(s15 a16 s40)
		(s16 a0 s17)
		(s17 a21 s34)
		(s17 a21 s35)
		(s18 a15 s19)
		(s18 a16 s19)
		(s19 a17 s32)
		(s20 a21 s35)
		(s20 a21 s36)
		(s21 a27 s23)
		(s22 a26 s16)
		(s22 a27 s25)
		(s23 a28 s24)
		(s24 a29 s6)
		(s25 a28 s26)
		(s26 a29 s8)
		(s27 a12 s14)
		(s28 a18 s29)
		(s29 a12 s38)
		(s29 a12 s39)
		(s30 a12 s12)
		(s30 a12 s14)
		(s31 a1 s10)
		(s32 a18 s30)
		(s33 a21 s34)
		(s33 a21 s35)
		(s34 a23 s2)
		(s35 a23 s0)
		(s36 a23 s2)
		(s37 a20 s33)
		(s38 a13 s37)
		(s39 a14 s18)
		(s40 a17 s28)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:52
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s13 },
	finalStates = {s2 s5 s7 s9 },
	transitions = {
		(s0 a30 s10)
		(s1 a24 s1)
		(s1 a12 s1)
		(s1 a25 s4)
		(s1 a13 s1)
		(s1 a14 s1)
		(s1 a15 s1)
		(s1 a16 s1)
		(s1 a23 s1)
		(s2 a18 s1)
		(s2 a5 s1)
		(s2 a8 s1)
		(s2 a21 s1)
		(s2 a23 s1)
		(s2 a11 s1)
		(s2 a24 s1)
		(s2 a12 s1)
		(s2 a25 s4)
		(s2 a13 s1)
		(s2 a14 s1)
		(s2 a28 s3)
		(s2 a15 s1)
		(s2 a16 s1)
		(s2 a31 s1)
		(s3 a29 s0)
		(s4 a26 s1)
		(s4 a27 s6)
		(s5 a29 s0)
		(s6 a28 s8)
		(s7 a26 s1)
		(s7 a27 s6)
		(s8 a29 s12)
		(s9 a28 s8)
		(s10 a24 s10)
		(s10 a25 s11)
		(s10 a31 s10)
		(s11 a26 s10)
		(s11 a27 s9)
		(s12 a30 s2)
		(s13 a1 s2)
		(s13 a1 s13)
		(s13 a0 s2)
		(s13 a0 s13)
		(s13 a2 s2)
		(s13 a2 s13)
		(s13 a5 s2)
		(s13 a5 s13)
		(s13 a8 s2)
		(s13 a8 s13)
		(s13 a9 s2)
		(s13 a9 s13)
		(s13 a11 s2)
		(s13 a11 s13)
		(s13 a12 s2)
		(s13 a12 s13)
		(s13 a13 s2)
		(s13 a13 s13)
		(s13 a14 s2)
		(s13 a14 s13)
		(s13 a15 s2)
		(s13 a15 s13)
		(s13 a16 s2)
		(s13 a16 s13)
		(s13 a17 s2)
		(s13 a17 s13)
		(s13 a18 s2)
		(s13 a18 s13)
		(s13 a20 s2)
		(s13 a20 s13)
		(s13 a21 s2)
		(s13 a21 s13)
		(s13 a23 s2)
		(s13 a23 s13)
		(s13 a24 s2)
		(s13 a24 s13)
		(s13 a25 s7)
		(s13 a25 s13)
		(s13 a26 s2)
		(s13 a26 s13)
		(s13 a27 s2)
		(s13 a27 s13)
		(s13 a28 s5)
		(s13 a28 s13)
		(s13 a29 s2)
		(s13 a29 s13)
		(s13 a30 s2)
		(s13 a30 s13)
		(s13 a31 s2)
		(s13 a31 s13)
	}
);
