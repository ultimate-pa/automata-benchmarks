// Testfile dumped by Ultimate at 2017/06/12 01:03:28
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 },
	initialStates = {s51 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s39 s41 s42 s43 s44 s45 s46 s47 s49 s50 s51 },
	transitions = {
		(s0 a18 s1)
		(s1 a82 s14)
		(s2 a35 s3)
		(s3 a37 s21)
		(s3 a39 s6)
		(s4 a55 s5)
		(s5 a57 s10)
		(s5 a62 s32)
		(s6 a32 s2)
		(s7 a46 s4)
		(s7 a47 s8)
		(s8 a48 s9)
		(s9 a51 s4)
		(s9 a53 s4)
		(s10 a59 s11)
		(s11 a60 s32)
		(s12 a78 s13)
		(s13 a79 s1)
		(s13 a80 s1)
		(s14 a83 s15)
		(s15 a85 s22)
		(s16 a8 s17)
		(s17 a9 s25)
		(s18 a0 s19)
		(s18 a2 s20)
		(s19 a13 s28)
		(s20 a4 s42)
		(s20 a6 s42)
		(s21 a44 s7)
		(s22 a86 s23)
		(s23 a87 s27)
		(s24 a30 s6)
		(s25 a11 s26)
		(s26 a12 s35)
		(s27 a88 s28)
		(s27 a89 s18)
		(s28 a14 s0)
		(s29 a76 s30)
		(s29 a75 s13)
		(s30 a77 s12)
		(s31 a7 s16)
		(s32 a65 s33)
		(s32 a66 s34)
		(s33 a73 s43)
		(s34 a70 s46)
		(s34 a67 s50)
		(s35 a15 s48)
		(s35 a15 s47)
		(s36 a19 s37)
		(s37 a25 s49)
		(s38 a19 s39)
		(s38 a21 s40)
		(s39 a25 s45)
		(s40 a15 s48)
		(s40 a15 s47)
		(s41 a72 s33)
		(s41 a81 s1)
		(s42 a10 s19)
		(s43 a74 s29)
		(s44 a3 s31)
		(s45 a26 s24)
		(s46 a71 s41)
		(s47 a17 s36)
		(s48 a17 s38)
		(s49 a29 s24)
		(s50 a69 s1)
		(s51 a1 s44)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:32
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a75 a76 a77 a78 a79 a80 a81 a82 a83 a84 a85 a86 a87 a88 a89 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s2 },
	finalStates = {s1 s7 s11 },
	transitions = {
		(s0 a57 s0)
		(s0 a0 s0)
		(s0 a59 s0)
		(s0 a60 s0)
		(s0 a2 s0)
		(s0 a62 s0)
		(s0 a4 s0)
		(s0 a6 s0)
		(s0 a65 s0)
		(s0 a10 s0)
		(s0 a66 s0)
		(s0 a13 s0)
		(s0 a67 s0)
		(s0 a14 s0)
		(s0 a69 s0)
		(s0 a18 s3)
		(s0 a70 s0)
		(s0 a71 s0)
		(s0 a72 s0)
		(s0 a73 s0)
		(s0 a74 s0)
		(s0 a75 s0)
		(s0 a76 s0)
		(s0 a77 s0)
		(s0 a78 s0)
		(s0 a79 s3)
		(s0 a80 s0)
		(s0 a37 s0)
		(s0 a81 s0)
		(s0 a39 s3)
		(s0 a82 s0)
		(s0 a44 s0)
		(s0 a83 s0)
		(s0 a46 s3)
		(s0 a47 s0)
		(s0 a48 s0)
		(s0 a85 s0)
		(s0 a86 s0)
		(s0 a87 s0)
		(s0 a51 s3)
		(s0 a53 s0)
		(s0 a88 s0)
		(s0 a55 s0)
		(s0 a89 s0)
		(s1 a60 s0)
		(s1 a78 s0)
		(s1 a37 s0)
		(s1 a81 s0)
		(s1 a39 s3)
		(s1 a46 s3)
		(s1 a47 s0)
		(s1 a85 s0)
		(s1 a72 s0)
		(s1 a87 s0)
		(s1 a51 s3)
		(s1 a53 s0)
		(s1 a74 s0)
		(s2 a1 s2)
		(s2 a1 s7)
		(s2 a3 s2)
		(s2 a3 s7)
		(s2 a7 s4)
		(s2 a7 s7)
		(s3 a57 s3)
		(s3 a59 s5)
		(s3 a62 s3)
		(s3 a32 s3)
		(s3 a35 s5)
		(s3 a65 s3)
		(s3 a66 s3)
		(s3 a67 s3)
		(s3 a82 s3)
		(s3 a83 s5)
		(s3 a69 s3)
		(s3 a70 s3)
		(s3 a71 s5)
		(s3 a73 s5)
		(s3 a55 s3)
		(s4 a8 s4)
		(s4 a8 s7)
		(s4 a9 s4)
		(s4 a9 s7)
		(s4 a11 s4)
		(s4 a11 s7)
		(s4 a12 s7)
		(s4 a12 s10)
		(s5 a57 s5)
		(s5 a0 s5)
		(s5 a59 s5)
		(s5 a60 s5)
		(s5 a2 s5)
		(s5 a62 s5)
		(s5 a4 s5)
		(s5 a6 s5)
		(s5 a65 s5)
		(s5 a10 s5)
		(s5 a66 s5)
		(s5 a13 s5)
		(s5 a67 s5)
		(s5 a14 s5)
		(s5 a69 s5)
		(s5 a18 s3)
		(s5 a70 s5)
		(s5 a71 s5)
		(s5 a72 s5)
		(s5 a73 s5)
		(s5 a74 s5)
		(s5 a75 s5)
		(s5 a76 s5)
		(s5 a77 s5)
		(s5 a78 s5)
		(s5 a79 s3)
		(s5 a80 s5)
		(s5 a37 s5)
		(s5 a81 s5)
		(s5 a39 s3)
		(s5 a82 s5)
		(s5 a44 s5)
		(s5 a83 s5)
		(s5 a46 s3)
		(s5 a47 s5)
		(s5 a48 s5)
		(s5 a85 s5)
		(s5 a86 s5)
		(s5 a87 s5)
		(s5 a51 s3)
		(s5 a53 s5)
		(s5 a88 s5)
		(s5 a55 s5)
		(s5 a89 s5)
		(s6 a57 s6)
		(s6 a59 s8)
		(s6 a62 s6)
		(s6 a35 s8)
		(s6 a65 s6)
		(s6 a66 s6)
		(s6 a67 s6)
		(s6 a82 s6)
		(s6 a83 s8)
		(s6 a69 s6)
		(s6 a70 s6)
		(s6 a71 s8)
		(s6 a73 s8)
		(s7 a57 s9)
		(s7 a0 s9)
		(s7 a59 s0)
		(s7 a2 s9)
		(s7 a62 s9)
		(s7 a4 s9)
		(s7 a6 s9)
		(s7 a8 s9)
		(s7 a65 s9)
		(s7 a10 s9)
		(s7 a11 s9)
		(s7 a66 s9)
		(s7 a12 s9)
		(s7 a13 s9)
		(s7 a67 s9)
		(s7 a14 s9)
		(s7 a15 s9)
		(s7 a17 s9)
		(s7 a69 s9)
		(s7 a18 s3)
		(s7 a19 s9)
		(s7 a70 s9)
		(s7 a71 s0)
		(s7 a21 s9)
		(s7 a25 s9)
		(s7 a73 s0)
		(s7 a26 s9)
		(s7 a75 s9)
		(s7 a29 s9)
		(s7 a76 s9)
		(s7 a77 s0)
		(s7 a32 s9)
		(s7 a79 s3)
		(s7 a35 s0)
		(s7 a80 s9)
		(s7 a82 s9)
		(s7 a44 s0)
		(s7 a83 s0)
		(s7 a48 s0)
		(s7 a86 s0)
		(s7 a88 s9)
		(s7 a55 s9)
		(s7 a89 s9)
		(s8 a57 s8)
		(s8 a0 s8)
		(s8 a59 s8)
		(s8 a60 s8)
		(s8 a2 s8)
		(s8 a62 s8)
		(s8 a4 s8)
		(s8 a6 s8)
		(s8 a65 s8)
		(s8 a10 s8)
		(s8 a66 s8)
		(s8 a13 s8)
		(s8 a67 s8)
		(s8 a14 s8)
		(s8 a69 s8)
		(s8 a18 s11)
		(s8 a70 s8)
		(s8 a71 s8)
		(s8 a72 s8)
		(s8 a73 s8)
		(s8 a74 s8)
		(s8 a75 s8)
		(s8 a76 s8)
		(s8 a77 s8)
		(s8 a78 s8)
		(s8 a79 s11)
		(s8 a80 s8)
		(s8 a37 s8)
		(s8 a81 s8)
		(s8 a39 s11)
		(s8 a82 s8)
		(s8 a44 s8)
		(s8 a83 s8)
		(s8 a46 s11)
		(s8 a47 s8)
		(s8 a48 s8)
		(s8 a85 s8)
		(s8 a86 s8)
		(s8 a87 s8)
		(s8 a51 s11)
		(s8 a53 s8)
		(s8 a88 s8)
		(s8 a55 s8)
		(s8 a89 s8)
		(s9 a57 s9)
		(s9 a0 s9)
		(s9 a59 s0)
		(s9 a2 s9)
		(s9 a62 s9)
		(s9 a4 s9)
		(s9 a6 s9)
		(s9 a65 s9)
		(s9 a10 s9)
		(s9 a66 s9)
		(s9 a12 s9)
		(s9 a13 s9)
		(s9 a67 s9)
		(s9 a14 s9)
		(s9 a15 s9)
		(s9 a17 s9)
		(s9 a69 s9)
		(s9 a18 s3)
		(s9 a19 s9)
		(s9 a70 s9)
		(s9 a71 s0)
		(s9 a21 s9)
		(s9 a25 s9)
		(s9 a73 s0)
		(s9 a26 s9)
		(s9 a29 s9)
		(s9 a77 s0)
		(s9 a79 s3)
		(s9 a35 s0)
		(s9 a80 s9)
		(s9 a82 s9)
		(s9 a83 s0)
		(s10 a0 s7)
		(s10 a0 s10)
		(s10 a2 s7)
		(s10 a2 s10)
		(s10 a4 s7)
		(s10 a4 s10)
		(s10 a6 s7)
		(s10 a6 s10)
		(s10 a10 s7)
		(s10 a10 s10)
		(s10 a13 s7)
		(s10 a13 s10)
		(s10 a14 s7)
		(s10 a14 s10)
		(s10 a15 s7)
		(s10 a15 s10)
		(s10 a17 s7)
		(s10 a17 s10)
		(s10 a18 s7)
		(s10 a18 s10)
		(s10 a19 s7)
		(s10 a19 s10)
		(s10 a21 s7)
		(s10 a21 s10)
		(s10 a25 s7)
		(s10 a25 s10)
		(s10 a26 s7)
		(s10 a26 s10)
		(s10 a29 s7)
		(s10 a29 s10)
		(s10 a30 s11)
		(s10 a30 s10)
		(s10 a32 s7)
		(s10 a32 s10)
		(s10 a35 s1)
		(s10 a35 s10)
		(s10 a37 s7)
		(s10 a37 s10)
		(s10 a39 s7)
		(s10 a39 s10)
		(s10 a44 s1)
		(s10 a44 s10)
		(s10 a46 s7)
		(s10 a46 s10)
		(s10 a47 s7)
		(s10 a47 s10)
		(s10 a48 s1)
		(s10 a48 s10)
		(s10 a51 s7)
		(s10 a51 s10)
		(s10 a53 s7)
		(s10 a53 s10)
		(s10 a55 s7)
		(s10 a55 s10)
		(s10 a57 s7)
		(s10 a57 s10)
		(s10 a59 s1)
		(s10 a59 s10)
		(s10 a60 s7)
		(s10 a60 s10)
		(s10 a62 s7)
		(s10 a62 s10)
		(s10 a65 s7)
		(s10 a65 s10)
		(s10 a66 s7)
		(s10 a66 s10)
		(s10 a67 s7)
		(s10 a67 s10)
		(s10 a69 s7)
		(s10 a69 s10)
		(s10 a70 s7)
		(s10 a70 s10)
		(s10 a71 s1)
		(s10 a71 s10)
		(s10 a72 s7)
		(s10 a72 s10)
		(s10 a73 s1)
		(s10 a73 s10)
		(s10 a74 s7)
		(s10 a74 s10)
		(s10 a75 s7)
		(s10 a75 s10)
		(s10 a76 s7)
		(s10 a76 s10)
		(s10 a77 s1)
		(s10 a77 s10)
		(s10 a78 s7)
		(s10 a78 s10)
		(s10 a79 s7)
		(s10 a79 s10)
		(s10 a80 s7)
		(s10 a80 s10)
		(s10 a81 s7)
		(s10 a81 s10)
		(s10 a82 s7)
		(s10 a82 s10)
		(s10 a83 s1)
		(s10 a83 s10)
		(s10 a85 s7)
		(s10 a85 s10)
		(s10 a86 s1)
		(s10 a86 s10)
		(s10 a87 s7)
		(s10 a87 s10)
		(s10 a88 s7)
		(s10 a88 s10)
		(s10 a89 s7)
		(s10 a89 s10)
		(s11 a32 s6)
		(s11 a55 s6)
		(s11 a82 s6)
	}
);
