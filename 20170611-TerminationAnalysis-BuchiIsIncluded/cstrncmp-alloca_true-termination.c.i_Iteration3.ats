// Testfile dumped by Ultimate at 2017/06/12 01:37:59
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s9 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	transitions = {
		(s0 a10 s2)
		(s0 a11 s2)
		(s1 a23 s14)
		(s2 a12 s3)
		(s3 a13 s4)
		(s4 a14 s5)
		(s5 a15 s6)
		(s6 a17 s13)
		(s7 a19 s8)
		(s8 a20 s10)
		(s9 a0 s18)
		(s10 a21 s11)
		(s11 a22 s1)
		(s12 a32 s13)
		(s13 a18 s7)
		(s14 a26 s15)
		(s15 a28 s16)
		(s16 a29 s17)
		(s17 a30 s12)
		(s18 a2 s19)
		(s19 a4 s0)
		(s19 a6 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:38:00
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s4 },
	finalStates = {s0 s2 },
	transitions = {
		(s0 a2 s6)
		(s0 a22 s6)
		(s0 a23 s6)
		(s0 a4 s6)
		(s0 a6 s6)
		(s0 a10 s6)
		(s0 a26 s6)
		(s0 a11 s6)
		(s0 a12 s6)
		(s0 a13 s6)
		(s0 a28 s6)
		(s0 a14 s6)
		(s0 a29 s6)
		(s0 a30 s6)
		(s0 a17 s3)
		(s0 a32 s6)
		(s0 a18 s6)
		(s0 a19 s1)
		(s1 a20 s2)
		(s2 a20 s5)
		(s2 a21 s5)
		(s3 a18 s3)
		(s3 a19 s1)
		(s4 a0 s0)
		(s4 a0 s4)
		(s4 a20 s2)
		(s4 a20 s4)
		(s4 a21 s0)
		(s4 a21 s4)
		(s4 a2 s0)
		(s4 a2 s4)
		(s4 a22 s0)
		(s4 a22 s4)
		(s4 a23 s0)
		(s4 a23 s4)
		(s4 a4 s0)
		(s4 a4 s4)
		(s4 a6 s0)
		(s4 a6 s4)
		(s4 a10 s0)
		(s4 a10 s4)
		(s4 a26 s0)
		(s4 a26 s4)
		(s4 a11 s0)
		(s4 a11 s4)
		(s4 a12 s0)
		(s4 a12 s4)
		(s4 a13 s0)
		(s4 a13 s4)
		(s4 a28 s0)
		(s4 a28 s4)
		(s4 a14 s0)
		(s4 a14 s4)
		(s4 a29 s0)
		(s4 a29 s4)
		(s4 a15 s0)
		(s4 a15 s4)
		(s4 a30 s0)
		(s4 a30 s4)
		(s4 a17 s0)
		(s4 a17 s4)
		(s4 a32 s0)
		(s4 a32 s4)
		(s4 a18 s0)
		(s4 a18 s4)
		(s4 a19 s2)
		(s4 a19 s4)
		(s5 a21 s5)
		(s5 a22 s5)
		(s5 a23 s6)
		(s6 a23 s6)
		(s6 a4 s6)
		(s6 a6 s6)
		(s6 a10 s6)
		(s6 a26 s6)
		(s6 a11 s6)
		(s6 a12 s6)
		(s6 a13 s6)
		(s6 a28 s6)
		(s6 a14 s6)
		(s6 a29 s6)
		(s6 a30 s6)
		(s6 a32 s6)
		(s6 a18 s6)
		(s6 a19 s1)
	}
);
