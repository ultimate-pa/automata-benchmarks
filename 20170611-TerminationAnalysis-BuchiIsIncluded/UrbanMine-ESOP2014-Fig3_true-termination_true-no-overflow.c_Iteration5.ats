// Testfile dumped by Ultimate at 2017/06/12 00:01:36
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 },
	initialStates = {s6 },
	finalStates = {s0 s6 s7 },
	transitions = {
		(s0 a5 s1)
		(s1 a9 s5)
		(s2 a5 s1)
		(s3 a8 s4)
		(s4 a3 s10)
		(s4 a3 s11)
		(s5 a10 s8)
		(s5 a11 s9)
		(s6 a0 s7)
		(s7 a3 s10)
		(s7 a3 s11)
		(s7 a3 s2)
		(s8 a3 s2)
		(s9 a3 s10)
		(s9 a3 s11)
		(s9 a3 s2)
		(s10 a5 s14)
		(s11 a5 s15)
		(s12 a3 s10)
		(s12 a3 s11)
		(s12 a3 s0)
		(s13 a7 s12)
		(s14 a6 s13)
		(s15 a6 s3)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 00:01:36
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 },
	initialStates = {s3 },
	finalStates = {s6 s7 s9 s15 },
	transitions = {
		(s0 a9 s10)
		(s0 a6 s12)
		(s1 a7 s14)
		(s1 a8 s1)
		(s1 a3 s1)
		(s1 a9 s9)
		(s1 a5 s1)
		(s1 a6 s1)
		(s2 a3 s2)
		(s2 a5 s5)
		(s3 a0 s3)
		(s3 a0 s7)
		(s3 a7 s3)
		(s3 a7 s7)
		(s3 a8 s3)
		(s3 a8 s7)
		(s3 a3 s3)
		(s3 a3 s7)
		(s3 a9 s3)
		(s3 a9 s7)
		(s3 a10 s3)
		(s3 a10 s7)
		(s3 a5 s3)
		(s3 a5 s15)
		(s3 a11 s3)
		(s3 a11 s7)
		(s3 a6 s3)
		(s3 a6 s6)
		(s4 a3 s4)
		(s4 a5 s0)
		(s5 a9 s5)
		(s5 a10 s2)
		(s5 a11 s2)
		(s5 a6 s6)
		(s6 a7 s16)
		(s6 a8 s12)
		(s7 a3 s4)
		(s7 a10 s4)
		(s7 a5 s0)
		(s7 a11 s8)
		(s8 a3 s8)
		(s8 a5 s11)
		(s9 a7 s9)
		(s9 a8 s9)
		(s9 a3 s9)
		(s9 a9 s9)
		(s9 a10 s9)
		(s9 a11 s9)
		(s9 a5 s9)
		(s9 a6 s9)
		(s10 a10 s7)
		(s10 a11 s2)
		(s11 a9 s11)
		(s11 a10 s8)
		(s11 a11 s8)
		(s11 a6 s13)
		(s12 a7 s16)
		(s12 a8 s12)
		(s12 a3 s12)
		(s12 a5 s12)
		(s12 a6 s12)
		(s13 a7 s14)
		(s13 a8 s13)
		(s13 a3 s13)
		(s13 a9 s9)
		(s13 a5 s13)
		(s13 a6 s13)
		(s14 a3 s14)
		(s14 a5 s13)
		(s15 a9 s10)
		(s15 a6 s12)
		(s16 a3 s16)
		(s16 a5 s1)
	}
);
