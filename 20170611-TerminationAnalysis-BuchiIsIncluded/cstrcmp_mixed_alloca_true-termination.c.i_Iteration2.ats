// Testfile dumped by Ultimate at 2017/06/11 23:19:04
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 },
	initialStates = {s15 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 },
	transitions = {
		(s0 a10 s1)
		(s1 a11 s7)
		(s2 a15 s3)
		(s3 a16 s10)
		(s4 a1 s5)
		(s5 a2 s6)
		(s5 a3 s6)
		(s6 a4 s11)
		(s6 a5 s11)
		(s7 a12 s8)
		(s8 a13 s9)
		(s9 a14 s2)
		(s10 a19 s0)
		(s11 a6 s12)
		(s12 a7 s13)
		(s13 a8 s14)
		(s14 a9 s0)
		(s15 a0 s4)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:05
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 },
	initialStates = {s4 },
	finalStates = {s2 s5 s7 },
	transitions = {
		(s0 a19 s3)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s1 a7 s1)
		(s1 a7 s7)
		(s1 a8 s1)
		(s1 a8 s7)
		(s1 a9 s1)
		(s1 a9 s2)
		(s1 a10 s1)
		(s1 a10 s7)
		(s1 a19 s1)
		(s1 a19 s7)
		(s1 a11 s1)
		(s1 a11 s5)
		(s1 a12 s1)
		(s1 a12 s7)
		(s1 a13 s1)
		(s1 a13 s7)
		(s1 a14 s1)
		(s1 a14 s5)
		(s1 a15 s1)
		(s1 a15 s7)
		(s1 a16 s1)
		(s1 a16 s7)
		(s2 a10 s6)
		(s3 a10 s3)
		(s3 a11 s0)
		(s4 a0 s4)
		(s4 a0 s7)
		(s4 a1 s4)
		(s4 a1 s7)
		(s4 a2 s4)
		(s4 a2 s7)
		(s4 a3 s4)
		(s4 a3 s7)
		(s4 a4 s4)
		(s4 a4 s7)
		(s4 a5 s4)
		(s4 a5 s7)
		(s4 a6 s1)
		(s4 a6 s7)
		(s5 a12 s10)
		(s5 a15 s10)
		(s6 a11 s8)
		(s7 a7 s9)
		(s7 a8 s9)
		(s7 a2 s9)
		(s7 a10 s9)
		(s7 a3 s9)
		(s7 a19 s3)
		(s7 a11 s10)
		(s7 a4 s9)
		(s7 a13 s9)
		(s7 a5 s9)
		(s7 a14 s10)
		(s7 a16 s9)
		(s8 a19 s2)
		(s8 a12 s8)
		(s8 a13 s8)
		(s8 a14 s8)
		(s8 a15 s8)
		(s8 a16 s8)
		(s9 a8 s9)
		(s9 a19 s3)
		(s9 a11 s10)
		(s9 a4 s9)
		(s9 a5 s9)
		(s9 a14 s10)
		(s10 a19 s3)
		(s10 a12 s10)
		(s10 a13 s10)
		(s10 a14 s10)
		(s10 a15 s10)
		(s10 a16 s10)
	}
);
