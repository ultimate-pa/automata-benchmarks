// Testfile dumped by Ultimate at 2017/06/12 01:26:39
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	initialStates = {s3 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 },
	transitions = {
		(s0 a20 s1)
		(s1 a21 s23)
		(s2 a14 s24)
		(s3 a0 s26)
		(s4 a10 s5)
		(s5 a11 s18)
		(s6 a26 s7)
		(s7 a27 s22)
		(s8 a4 s9)
		(s9 a5 s12)
		(s10 a16 s11)
		(s11 a17 s27)
		(s12 a6 s17)
		(s13 a29 s14)
		(s14 a30 s25)
		(s15 a32 s16)
		(s16 a33 s22)
		(s17 a7 s4)
		(s18 a12 s19)
		(s18 a23 s20)
		(s19 a19 s0)
		(s19 a13 s2)
		(s20 a28 s13)
		(s20 a24 s21)
		(s21 a25 s6)
		(s22 a2 s28)
		(s23 a22 s22)
		(s24 a15 s10)
		(s25 a31 s15)
		(s26 a1 s22)
		(s27 a18 s22)
		(s28 a3 s8)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:26:41
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 },
	initialStates = {s1 },
	finalStates = {s5 s8 s14 s15 },
	transitions = {
		(s0 a21 s5)
		(s1 a0 s1)
		(s1 a0 s5)
		(s1 a1 s1)
		(s1 a1 s5)
		(s1 a2 s1)
		(s1 a2 s5)
		(s1 a3 s1)
		(s1 a3 s5)
		(s1 a4 s1)
		(s1 a4 s5)
		(s1 a5 s1)
		(s1 a5 s5)
		(s1 a6 s14)
		(s1 a6 s1)
		(s1 a7 s1)
		(s1 a7 s5)
		(s1 a10 s1)
		(s1 a10 s5)
		(s1 a11 s1)
		(s1 a11 s5)
		(s1 a12 s1)
		(s1 a12 s5)
		(s1 a13 s1)
		(s1 a13 s5)
		(s1 a14 s1)
		(s1 a14 s5)
		(s1 a15 s1)
		(s1 a15 s5)
		(s1 a16 s1)
		(s1 a16 s5)
		(s1 a17 s1)
		(s1 a17 s5)
		(s1 a18 s1)
		(s1 a18 s5)
		(s1 a19 s1)
		(s1 a19 s5)
		(s1 a20 s1)
		(s1 a20 s8)
		(s1 a21 s1)
		(s1 a21 s5)
		(s1 a22 s1)
		(s1 a22 s5)
		(s1 a23 s1)
		(s1 a23 s5)
		(s1 a24 s1)
		(s1 a24 s5)
		(s1 a25 s1)
		(s1 a25 s5)
		(s1 a26 s1)
		(s1 a26 s5)
		(s1 a27 s1)
		(s1 a27 s5)
		(s1 a28 s1)
		(s1 a28 s5)
		(s1 a29 s1)
		(s1 a29 s5)
		(s1 a30 s1)
		(s1 a30 s5)
		(s1 a31 s1)
		(s1 a31 s5)
		(s1 a32 s1)
		(s1 a32 s5)
		(s1 a33 s1)
		(s1 a33 s5)
		(s2 a19 s2)
		(s2 a20 s13)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a26 s7)
		(s2 a28 s2)
		(s2 a29 s2)
		(s2 a30 s7)
		(s2 a11 s2)
		(s2 a12 s2)
		(s2 a13 s2)
		(s2 a14 s2)
		(s2 a15 s7)
		(s3 a10 s15)
		(s4 a19 s4)
		(s4 a20 s16)
		(s4 a2 s4)
		(s4 a3 s4)
		(s4 a4 s4)
		(s4 a23 s4)
		(s4 a5 s4)
		(s4 a6 s9)
		(s4 a24 s4)
		(s4 a25 s4)
		(s4 a28 s4)
		(s4 a29 s4)
		(s4 a11 s4)
		(s4 a12 s4)
		(s4 a13 s4)
		(s4 a14 s4)
		(s5 a16 s4)
		(s5 a18 s4)
		(s5 a19 s4)
		(s5 a20 s16)
		(s5 a2 s4)
		(s5 a22 s4)
		(s5 a3 s4)
		(s5 a4 s4)
		(s5 a23 s4)
		(s5 a5 s4)
		(s5 a6 s9)
		(s5 a24 s4)
		(s5 a25 s4)
		(s5 a27 s4)
		(s5 a28 s4)
		(s5 a29 s4)
		(s5 a31 s4)
		(s5 a10 s4)
		(s5 a11 s4)
		(s5 a33 s4)
		(s5 a12 s4)
		(s5 a13 s4)
		(s5 a14 s4)
		(s6 a2 s6)
		(s6 a22 s6)
		(s6 a3 s6)
		(s6 a4 s6)
		(s6 a5 s6)
		(s6 a6 s10)
		(s7 a16 s7)
		(s7 a17 s7)
		(s7 a18 s7)
		(s7 a2 s7)
		(s7 a22 s7)
		(s7 a3 s7)
		(s7 a4 s7)
		(s7 a5 s7)
		(s7 a6 s17)
		(s7 a27 s7)
		(s7 a31 s7)
		(s7 a32 s7)
		(s7 a33 s7)
		(s8 a21 s6)
		(s9 a7 s18)
		(s10 a7 s3)
		(s11 a10 s2)
		(s12 a19 s12)
		(s12 a20 s0)
		(s12 a23 s12)
		(s12 a24 s12)
		(s12 a25 s12)
		(s12 a26 s7)
		(s12 a28 s12)
		(s12 a29 s12)
		(s12 a30 s7)
		(s12 a11 s12)
		(s12 a12 s12)
		(s12 a13 s12)
		(s12 a14 s12)
		(s12 a15 s7)
		(s13 a21 s7)
		(s14 a7 s18)
		(s15 a11 s12)
		(s16 a21 s6)
		(s17 a7 s11)
		(s18 a10 s12)
	}
);
