// Testfile dumped by Ultimate at 2017/06/11 23:18:46
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 },
	initialStates = {s38 },
	finalStates = {s0 s1 s2 s5 s6 s8 s9 s12 s14 s15 s16 s17 s18 s19 s21 s23 s24 s27 s30 s32 s33 s36 s38 },
	transitions = {
		(s0 a11 s1)
		(s1 a12 s2)
		(s2 a13 s3)
		(s3 a15 s7)
		(s4 a13 s3)
		(s5 a14 s6)
		(s6 a21 s18)
		(s7 a16 s11)
		(s8 a19 s9)
		(s9 a13 s5)
		(s10 a19 s4)
		(s11 a17 s12)
		(s11 a17 s13)
		(s12 a18 s8)
		(s13 a18 s10)
		(s14 a3 s15)
		(s15 a7 s16)
		(s16 a8 s17)
		(s17 a10 s0)
		(s18 a22 s19)
		(s19 a24 s28)
		(s20 a22 s21)
		(s20 a22 s22)
		(s21 a24 s24)
		(s22 a24 s26)
		(s23 a32 s24)
		(s24 a25 s27)
		(s25 a32 s26)
		(s26 a25 s41)
		(s27 a26 s30)
		(s28 a25 s29)
		(s29 a26 s31)
		(s30 a28 s32)
		(s31 a27 s39)
		(s32 a29 s33)
		(s33 a30 s36)
		(s34 a29 s35)
		(s35 a30 s37)
		(s36 a31 s23)
		(s37 a31 s25)
		(s38 a1 s14)
		(s39 a34 s20)
		(s40 a27 s39)
		(s40 a28 s34)
		(s41 a26 s40)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:18:47
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s4 },
	finalStates = {s0 s7 s8 s11 },
	transitions = {
		(s0 a29 s13)
		(s1 a26 s10)
		(s1 a32 s1)
		(s1 a25 s1)
		(s2 a31 s1)
		(s3 a31 s7)
		(s4 a1 s4)
		(s4 a1 s7)
		(s4 a3 s4)
		(s4 a3 s7)
		(s4 a7 s4)
		(s4 a7 s7)
		(s4 a8 s4)
		(s4 a8 s7)
		(s4 a10 s4)
		(s4 a10 s7)
		(s4 a11 s4)
		(s4 a11 s7)
		(s4 a12 s4)
		(s4 a12 s7)
		(s4 a13 s4)
		(s4 a13 s7)
		(s4 a14 s4)
		(s4 a14 s7)
		(s4 a15 s4)
		(s4 a15 s7)
		(s4 a16 s4)
		(s4 a16 s7)
		(s4 a17 s4)
		(s4 a17 s7)
		(s4 a18 s4)
		(s4 a18 s7)
		(s4 a19 s4)
		(s4 a19 s7)
		(s4 a21 s4)
		(s4 a21 s7)
		(s4 a22 s4)
		(s4 a22 s7)
		(s4 a24 s4)
		(s4 a24 s7)
		(s4 a25 s4)
		(s4 a25 s7)
		(s4 a26 s4)
		(s4 a26 s8)
		(s4 a27 s4)
		(s4 a27 s7)
		(s4 a28 s4)
		(s4 a28 s7)
		(s4 a29 s4)
		(s4 a29 s11)
		(s4 a30 s4)
		(s4 a30 s7)
		(s4 a31 s4)
		(s4 a31 s7)
		(s4 a32 s4)
		(s4 a32 s7)
		(s4 a34 s4)
		(s4 a34 s7)
		(s5 a26 s6)
		(s5 a13 s5)
		(s5 a14 s5)
		(s5 a15 s5)
		(s5 a16 s5)
		(s5 a24 s5)
		(s5 a19 s5)
		(s5 a25 s5)
		(s6 a27 s5)
		(s6 a28 s9)
		(s7 a22 s5)
		(s7 a7 s5)
		(s7 a24 s5)
		(s7 a10 s5)
		(s7 a25 s5)
		(s7 a12 s5)
		(s7 a26 s6)
		(s7 a13 s5)
		(s7 a14 s5)
		(s7 a29 s12)
		(s7 a15 s5)
		(s7 a16 s5)
		(s7 a32 s5)
		(s7 a18 s5)
		(s7 a19 s5)
		(s8 a27 s5)
		(s8 a28 s9)
		(s9 a29 s13)
		(s10 a27 s1)
		(s10 a28 s0)
		(s11 a30 s2)
		(s12 a30 s2)
		(s13 a30 s3)
	}
);
