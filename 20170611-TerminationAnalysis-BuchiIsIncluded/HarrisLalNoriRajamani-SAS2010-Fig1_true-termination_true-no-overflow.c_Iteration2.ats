// Testfile dumped by Ultimate at 2017/06/11 23:50:33
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 },
	initialStates = {s10 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s9 s10 s11 s12 s13 s14 s15 s16 s17 s20 s21 },
	transitions = {
		(s0 a7 s1)
		(s0 a10 s20)
		(s1 a8 s20)
		(s2 a2 s14)
		(s2 a24 s3)
		(s3 a26 s4)
		(s3 a26 s5)
		(s4 a27 s7)
		(s5 a27 s6)
		(s6 a28 s20)
		(s7 a29 s8)
		(s8 a27 s6)
		(s8 a27 s7)
		(s9 a19 s11)
		(s10 a1 s2)
		(s11 a20 s12)
		(s11 a22 s13)
		(s12 a21 s13)
		(s13 a17 s9)
		(s14 a6 s15)
		(s14 a6 s16)
		(s15 a9 s19)
		(s16 a9 s17)
		(s17 a12 s13)
		(s18 a9 s17)
		(s18 a9 s19)
		(s19 a13 s18)
		(s20 a0 s21)
		(s21 a5 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:50:34
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 },
	initialStates = {s8 },
	finalStates = {s1 s3 s5 },
	transitions = {
		(s0 a20 s0)
		(s0 a21 s4)
		(s0 a22 s3)
		(s0 a7 s0)
		(s0 a8 s4)
		(s0 a10 s3)
		(s1 a2 s4)
		(s1 a24 s4)
		(s2 a20 s2)
		(s2 a21 s4)
		(s2 a22 s4)
		(s2 a7 s2)
		(s2 a8 s4)
		(s2 a10 s4)
		(s3 a0 s7)
		(s3 a21 s4)
		(s3 a5 s0)
		(s3 a6 s7)
		(s3 a8 s4)
		(s3 a9 s7)
		(s3 a26 s7)
		(s3 a12 s7)
		(s3 a13 s7)
		(s3 a27 s7)
		(s3 a28 s7)
		(s3 a17 s7)
		(s3 a29 s7)
		(s3 a19 s0)
		(s4 a26 s4)
		(s4 a12 s4)
		(s4 a0 s4)
		(s4 a13 s4)
		(s4 a27 s4)
		(s4 a5 s2)
		(s4 a6 s4)
		(s4 a28 s4)
		(s4 a17 s4)
		(s4 a29 s4)
		(s4 a9 s4)
		(s4 a19 s2)
		(s5 a20 s0)
		(s5 a22 s3)
		(s5 a7 s0)
		(s5 a10 s3)
		(s6 a0 s3)
		(s6 a0 s6)
		(s6 a20 s3)
		(s6 a20 s6)
		(s6 a21 s3)
		(s6 a21 s6)
		(s6 a22 s3)
		(s6 a22 s6)
		(s6 a5 s5)
		(s6 a5 s6)
		(s6 a6 s3)
		(s6 a6 s6)
		(s6 a7 s3)
		(s6 a7 s6)
		(s6 a8 s3)
		(s6 a8 s6)
		(s6 a9 s3)
		(s6 a9 s6)
		(s6 a10 s3)
		(s6 a10 s6)
		(s6 a26 s3)
		(s6 a26 s6)
		(s6 a12 s3)
		(s6 a12 s6)
		(s6 a13 s3)
		(s6 a13 s6)
		(s6 a27 s3)
		(s6 a27 s6)
		(s6 a28 s3)
		(s6 a28 s6)
		(s6 a17 s3)
		(s6 a17 s6)
		(s6 a29 s3)
		(s6 a29 s6)
		(s6 a19 s5)
		(s6 a19 s6)
		(s7 a12 s7)
		(s7 a0 s7)
		(s7 a13 s7)
		(s7 a27 s7)
		(s7 a5 s0)
		(s7 a28 s7)
		(s7 a17 s7)
		(s7 a29 s7)
		(s7 a9 s7)
		(s7 a19 s0)
		(s8 a1 s1)
		(s8 a1 s8)
		(s8 a2 s3)
		(s8 a2 s6)
		(s8 a24 s3)
		(s8 a24 s6)
	}
);
