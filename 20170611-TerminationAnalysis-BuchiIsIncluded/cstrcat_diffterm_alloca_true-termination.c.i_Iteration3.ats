// Testfile dumped by Ultimate at 2017/06/11 23:18:51
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 },
	initialStates = {s22 },
	finalStates = {s0 s1 s4 s5 s6 s7 s8 s9 s12 s13 s15 s16 s20 s21 s22 },
	transitions = {
		(s0 a1 s1)
		(s1 a2 s21)
		(s1 a3 s21)
		(s2 a14 s3)
		(s3 a15 s19)
		(s4 a10 s5)
		(s5 a11 s6)
		(s6 a12 s7)
		(s7 a13 s23)
		(s7 a13 s24)
		(s8 a18 s9)
		(s9 a19 s13)
		(s10 a18 s11)
		(s11 a19 s14)
		(s12 a9 s4)
		(s13 a20 s15)
		(s14 a20 s17)
		(s14 a20 s15)
		(s15 a21 s16)
		(s16 a23 s8)
		(s17 a21 s18)
		(s18 a23 s10)
		(s19 a18 s9)
		(s19 a18 s11)
		(s20 a6 s12)
		(s20 a7 s12)
		(s21 a4 s20)
		(s21 a5 s20)
		(s22 a0 s0)
		(s23 a14 s31)
		(s24 a14 s27)
		(s25 a13 s2)
		(s25 a13 s26)
		(s26 a14 s32)
		(s27 a16 s28)
		(s28 a13 s2)
		(s28 a13 s30)
		(s29 a15 s19)
		(s29 a16 s28)
		(s30 a14 s29)
		(s31 a16 s25)
		(s32 a15 s33)
		(s32 a16 s25)
		(s33 a18 s37)
		(s33 a18 s43)
		(s34 a21 s16)
		(s34 a21 s35)
		(s35 a23 s40)
		(s36 a20 s34)
		(s36 a20 s15)
		(s37 a19 s38)
		(s38 a20 s17)
		(s38 a20 s34)
		(s38 a20 s41)
		(s38 a20 s15)
		(s39 a18 s37)
		(s40 a18 s43)
		(s41 a21 s18)
		(s41 a21 s42)
		(s42 a23 s39)
		(s43 a19 s36)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:18:53
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 },
	initialStates = {s9 },
	finalStates = {s4 s5 s8 },
	transitions = {
		(s0 a13 s0)
		(s0 a13 s8)
		(s0 a20 s0)
		(s0 a20 s8)
		(s0 a21 s0)
		(s0 a21 s8)
		(s0 a14 s0)
		(s0 a14 s8)
		(s0 a15 s0)
		(s0 a15 s8)
		(s0 a23 s0)
		(s0 a23 s8)
		(s0 a16 s0)
		(s0 a16 s8)
		(s0 a18 s0)
		(s0 a18 s8)
		(s0 a19 s0)
		(s0 a19 s5)
		(s1 a20 s5)
		(s2 a10 s2)
		(s2 a10 s4)
		(s2 a11 s2)
		(s2 a11 s4)
		(s2 a12 s0)
		(s2 a12 s8)
		(s3 a6 s3)
		(s3 a7 s3)
		(s3 a4 s3)
		(s3 a11 s3)
		(s3 a5 s3)
		(s4 a6 s3)
		(s4 a7 s3)
		(s4 a2 s3)
		(s4 a3 s3)
		(s4 a10 s3)
		(s4 a4 s3)
		(s4 a11 s3)
		(s4 a5 s3)
		(s5 a20 s6)
		(s5 a21 s6)
		(s6 a21 s6)
		(s6 a23 s7)
		(s7 a13 s7)
		(s7 a14 s7)
		(s7 a15 s7)
		(s7 a23 s7)
		(s7 a16 s7)
		(s7 a18 s7)
		(s7 a19 s1)
		(s8 a13 s7)
		(s8 a21 s7)
		(s8 a14 s7)
		(s8 a15 s7)
		(s8 a23 s7)
		(s8 a16 s7)
		(s8 a18 s7)
		(s8 a19 s1)
		(s9 a0 s4)
		(s9 a0 s9)
		(s9 a6 s4)
		(s9 a6 s9)
		(s9 a1 s4)
		(s9 a1 s9)
		(s9 a7 s4)
		(s9 a7 s9)
		(s9 a2 s4)
		(s9 a2 s9)
		(s9 a3 s4)
		(s9 a3 s9)
		(s9 a9 s2)
		(s9 a9 s4)
		(s9 a4 s4)
		(s9 a4 s9)
		(s9 a5 s4)
		(s9 a5 s9)
	}
);
