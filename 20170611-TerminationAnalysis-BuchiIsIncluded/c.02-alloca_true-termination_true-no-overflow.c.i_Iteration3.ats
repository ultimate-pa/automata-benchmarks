// Testfile dumped by Ultimate at 2017/06/12 01:36:09
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 },
	initialStates = {s25 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 },
	transitions = {
		(s0 a24 s1)
		(s1 a25 s14)
		(s2 a7 s3)
		(s3 a8 s13)
		(s4 a13 s5)
		(s5 a14 s22)
		(s6 a21 s7)
		(s6 a22 s8)
		(s7 a27 s11)
		(s8 a23 s0)
		(s9 a16 s10)
		(s10 a17 s14)
		(s11 a28 s12)
		(s12 a29 s17)
		(s13 a9 s20)
		(s14 a18 s15)
		(s15 a19 s16)
		(s16 a20 s6)
		(s17 a5 s21)
		(s18 a1 s19)
		(s19 a2 s23)
		(s20 a10 s4)
		(s21 a6 s2)
		(s22 a15 s9)
		(s23 a3 s24)
		(s24 a4 s17)
		(s25 a0 s18)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:36:21
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 },
	initialStates = {s72 },
	finalStates = {s11 s15 s34 s40 s41 s53 s55 s64 s75 },
	transitions = {
		(s0 a7 s66)
		(s1 a7 s68)
		(s2 a18 s2)
		(s2 a19 s4)
		(s2 a23 s2)
		(s2 a24 s25)
		(s3 a18 s3)
		(s3 a19 s26)
		(s3 a23 s3)
		(s3 a24 s36)
		(s4 a20 s70)
		(s5 a20 s5)
		(s5 a21 s36)
		(s5 a22 s36)
		(s6 a20 s71)
		(s7 a8 s40)
		(s8 a28 s36)
		(s9 a29 s9)
		(s9 a5 s9)
		(s9 a6 s38)
		(s10 a8 s40)
		(s11 a20 s14)
		(s12 a15 s79)
		(s13 a8 s40)
		(s14 a20 s14)
		(s14 a21 s73)
		(s14 a22 s73)
		(s15 a15 s79)
		(s15 a16 s73)
		(s16 a8 s40)
		(s17 a28 s25)
		(s18 a15 s79)
		(s19 a8 s64)
		(s20 a28 s65)
		(s21 a15 s27)
		(s22 a14 s76)
		(s23 a21 s25)
		(s23 a22 s25)
		(s24 a14 s74)
		(s25 a27 s17)
		(s25 a18 s25)
		(s25 a29 s25)
		(s25 a19 s57)
		(s25 a4 s36)
		(s25 a5 s25)
		(s25 a23 s25)
		(s25 a24 s25)
		(s25 a6 s0)
		(s25 a25 s25)
		(s26 a20 s67)
		(s27 a16 s65)
		(s28 a27 s60)
		(s29 a27 s46)
		(s30 a27 s49)
		(s31 a27 s50)
		(s32 a2 s36)
		(s33 a9 s33)
		(s33 a10 s33)
		(s33 a13 s22)
		(s34 a7 s52)
		(s35 a9 s35)
		(s35 a10 s35)
		(s35 a13 s24)
		(s36 a27 s8)
		(s36 a18 s36)
		(s36 a29 s36)
		(s36 a19 s5)
		(s36 a3 s36)
		(s36 a4 s36)
		(s36 a5 s36)
		(s36 a23 s36)
		(s36 a6 s48)
		(s36 a24 s36)
		(s36 a25 s36)
		(s36 a17 s3)
		(s37 a7 s52)
		(s38 a7 s7)
		(s39 a7 s10)
		(s40 a18 s40)
		(s40 a19 s40)
		(s40 a20 s40)
		(s40 a21 s40)
		(s40 a22 s40)
		(s40 a5 s40)
		(s40 a23 s40)
		(s40 a24 s40)
		(s40 a6 s40)
		(s40 a25 s40)
		(s40 a7 s40)
		(s40 a8 s40)
		(s40 a9 s40)
		(s40 a27 s40)
		(s40 a10 s40)
		(s40 a28 s40)
		(s40 a29 s40)
		(s40 a13 s40)
		(s40 a14 s40)
		(s40 a15 s40)
		(s40 a16 s40)
		(s40 a17 s40)
		(s41 a29 s43)
		(s42 a7 s13)
		(s43 a5 s43)
		(s43 a6 s39)
		(s44 a7 s16)
		(s45 a29 s45)
		(s45 a5 s45)
		(s45 a6 s42)
		(s46 a28 s45)
		(s47 a29 s47)
		(s47 a5 s47)
		(s47 a6 s44)
		(s48 a7 s54)
		(s49 a28 s47)
		(s50 a28 s9)
		(s51 a28 s56)
		(s52 a8 s61)
		(s53 a28 s56)
		(s54 a8 s63)
		(s55 a18 s58)
		(s56 a29 s56)
		(s56 a5 s56)
		(s56 a6 s62)
		(s57 a20 s23)
		(s58 a19 s6)
		(s58 a23 s58)
		(s58 a24 s25)
		(s59 a20 s59)
		(s59 a21 s65)
		(s59 a22 s65)
		(s60 a28 s41)
		(s61 a9 s61)
		(s61 a10 s61)
		(s61 a13 s81)
		(s62 a7 s19)
		(s63 a9 s63)
		(s63 a10 s63)
		(s63 a13 s78)
		(s64 a9 s61)
		(s65 a27 s20)
		(s65 a18 s65)
		(s65 a29 s65)
		(s65 a19 s59)
		(s65 a5 s65)
		(s65 a23 s65)
		(s65 a24 s65)
		(s65 a6 s1)
		(s65 a25 s65)
		(s65 a17 s77)
		(s66 a8 s35)
		(s67 a21 s31)
		(s67 a22 s3)
		(s68 a8 s33)
		(s69 a21 s28)
		(s69 a22 s77)
		(s70 a21 s29)
		(s70 a22 s2)
		(s71 a21 s30)
		(s71 a22 s58)
		(s72 a0 s72)
		(s72 a0 s75)
		(s72 a1 s72)
		(s72 a1 s75)
		(s72 a2 s72)
		(s72 a2 s75)
		(s72 a3 s72)
		(s72 a3 s75)
		(s72 a4 s72)
		(s72 a4 s75)
		(s72 a5 s72)
		(s72 a5 s75)
		(s72 a6 s72)
		(s72 a6 s34)
		(s72 a7 s72)
		(s72 a7 s75)
		(s72 a8 s72)
		(s72 a8 s75)
		(s72 a9 s72)
		(s72 a9 s75)
		(s72 a10 s72)
		(s72 a10 s75)
		(s72 a13 s72)
		(s72 a13 s75)
		(s72 a14 s15)
		(s72 a14 s72)
		(s72 a15 s15)
		(s72 a15 s72)
		(s72 a16 s72)
		(s72 a16 s75)
		(s72 a17 s72)
		(s72 a17 s55)
		(s72 a18 s72)
		(s72 a18 s75)
		(s72 a19 s11)
		(s72 a19 s72)
		(s72 a20 s72)
		(s72 a20 s75)
		(s72 a21 s72)
		(s72 a21 s75)
		(s72 a22 s72)
		(s72 a22 s75)
		(s72 a23 s72)
		(s72 a23 s75)
		(s72 a24 s72)
		(s72 a24 s75)
		(s72 a25 s72)
		(s72 a25 s75)
		(s72 a27 s72)
		(s72 a27 s53)
		(s72 a28 s72)
		(s72 a28 s75)
		(s72 a29 s72)
		(s72 a29 s75)
		(s73 a9 s73)
		(s73 a27 s51)
		(s73 a10 s73)
		(s73 a18 s73)
		(s73 a19 s14)
		(s73 a13 s73)
		(s73 a5 s73)
		(s73 a14 s18)
		(s73 a23 s73)
		(s73 a6 s37)
		(s73 a24 s25)
		(s73 a17 s2)
		(s74 a15 s79)
		(s75 a18 s73)
		(s75 a1 s32)
		(s75 a2 s36)
		(s75 a19 s14)
		(s75 a3 s25)
		(s75 a4 s36)
		(s75 a21 s73)
		(s75 a5 s73)
		(s75 a22 s73)
		(s75 a23 s73)
		(s75 a6 s37)
		(s75 a24 s25)
		(s75 a25 s73)
		(s75 a8 s73)
		(s75 a9 s73)
		(s75 a27 s51)
		(s75 a10 s73)
		(s75 a29 s73)
		(s75 a13 s73)
		(s75 a14 s18)
		(s75 a17 s2)
		(s76 a15 s27)
		(s77 a18 s77)
		(s77 a19 s80)
		(s77 a23 s77)
		(s77 a24 s65)
		(s78 a14 s12)
		(s79 a16 s36)
		(s80 a20 s69)
		(s81 a14 s21)
	}
);
