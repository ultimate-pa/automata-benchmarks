// Testfile dumped by Ultimate at 2017/06/11 23:18:44
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 },
	initialStates = {s33 },
	finalStates = {s0 s1 s4 s5 s8 s9 s10 s11 s14 s15 s17 s21 s22 s24 s25 s26 s28 s30 s31 s33 s38 s39 s40 s41 s42 },
	transitions = {
		(s0 a28 s1)
		(s1 a29 s4)
		(s2 a28 s3)
		(s3 a29 s6)
		(s4 a30 s5)
		(s5 a31 s10)
		(s6 a30 s7)
		(s7 a31 s12)
		(s8 a20 s9)
		(s9 a21 s16)
		(s9 a21 s17)
		(s10 a24 s11)
		(s11 a25 s28)
		(s12 a24 s13)
		(s13 a25 s29)
		(s14 a11 s15)
		(s15 a12 s19)
		(s16 a23 s12)
		(s17 a23 s10)
		(s18 a21 s16)
		(s18 a21 s17)
		(s19 a14 s23)
		(s20 a12 s19)
		(s21 a13 s22)
		(s22 a20 s39)
		(s23 a15 s36)
		(s23 a16 s36)
		(s24 a3 s25)
		(s25 a5 s26)
		(s25 a7 s26)
		(s26 a9 s14)
		(s27 a0 s18)
		(s28 a27 s0)
		(s29 a26 s27)
		(s29 a27 s2)
		(s30 a18 s31)
		(s31 a12 s40)
		(s32 a18 s20)
		(s33 a1 s24)
		(s34 a15 s35)
		(s34 a16 s35)
		(s35 a17 s32)
		(s35 a17 s42)
		(s36 a17 s30)
		(s36 a17 s37)
		(s37 a18 s44)
		(s38 a23 s12)
		(s39 a21 s17)
		(s39 a21 s38)
		(s40 a13 s8)
		(s41 a12 s21)
		(s42 a18 s41)
		(s43 a14 s34)
		(s44 a12 s43)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:18:45
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s6 },
	finalStates = {s0 s7 s10 s12 },
	transitions = {
		(s0 a28 s1)
		(s1 a29 s3)
		(s2 a26 s5)
		(s2 a27 s0)
		(s3 a30 s10)
		(s4 a30 s5)
		(s5 a24 s5)
		(s5 a25 s2)
		(s5 a31 s5)
		(s6 a1 s6)
		(s6 a1 s10)
		(s6 a0 s6)
		(s6 a0 s10)
		(s6 a3 s6)
		(s6 a3 s10)
		(s6 a5 s6)
		(s6 a5 s10)
		(s6 a7 s6)
		(s6 a7 s10)
		(s6 a9 s6)
		(s6 a9 s10)
		(s6 a11 s6)
		(s6 a11 s10)
		(s6 a12 s6)
		(s6 a12 s10)
		(s6 a13 s6)
		(s6 a13 s10)
		(s6 a14 s6)
		(s6 a14 s10)
		(s6 a15 s6)
		(s6 a15 s10)
		(s6 a16 s6)
		(s6 a16 s10)
		(s6 a17 s6)
		(s6 a17 s10)
		(s6 a18 s6)
		(s6 a18 s10)
		(s6 a20 s6)
		(s6 a20 s10)
		(s6 a21 s6)
		(s6 a21 s10)
		(s6 a23 s6)
		(s6 a23 s10)
		(s6 a24 s6)
		(s6 a24 s10)
		(s6 a25 s6)
		(s6 a25 s12)
		(s6 a26 s6)
		(s6 a26 s10)
		(s6 a27 s6)
		(s6 a27 s10)
		(s6 a28 s6)
		(s6 a28 s7)
		(s6 a29 s6)
		(s6 a29 s10)
		(s6 a30 s6)
		(s6 a30 s10)
		(s6 a31 s6)
		(s6 a31 s10)
		(s7 a29 s4)
		(s8 a24 s8)
		(s8 a12 s8)
		(s8 a25 s11)
		(s8 a13 s8)
		(s8 a14 s8)
		(s8 a15 s8)
		(s8 a16 s8)
		(s8 a23 s8)
		(s9 a29 s4)
		(s10 a18 s8)
		(s10 a5 s8)
		(s10 a7 s8)
		(s10 a21 s8)
		(s10 a23 s8)
		(s10 a11 s8)
		(s10 a24 s8)
		(s10 a12 s8)
		(s10 a25 s11)
		(s10 a13 s8)
		(s10 a14 s8)
		(s10 a28 s9)
		(s10 a15 s8)
		(s10 a16 s8)
		(s10 a31 s8)
		(s11 a26 s8)
		(s11 a27 s13)
		(s12 a26 s8)
		(s12 a27 s13)
		(s13 a28 s1)
	}
);
