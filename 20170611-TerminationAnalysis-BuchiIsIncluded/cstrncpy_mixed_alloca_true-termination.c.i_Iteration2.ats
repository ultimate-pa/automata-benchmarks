// Testfile dumped by Ultimate at 2017/06/11 23:19:52
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s8 },
	finalStates = {s0 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s15 s16 s18 s19 },
	transitions = {
		(s0 a15 s4)
		(s1 a22 s13)
		(s2 a1 s3)
		(s3 a2 s9)
		(s3 a3 s9)
		(s4 a16 s5)
		(s5 a18 s6)
		(s6 a19 s7)
		(s7 a20 s0)
		(s8 a0 s2)
		(s9 a4 s10)
		(s9 a5 s10)
		(s10 a6 s15)
		(s11 a9 s12)
		(s12 a11 s14)
		(s13 a9 s12)
		(s14 a12 s17)
		(s14 a12 s18)
		(s15 a7 s16)
		(s16 a8 s11)
		(s17 a13 s1)
		(s17 a13 s19)
		(s18 a13 s19)
		(s19 a14 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:53
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 },
	initialStates = {s7 },
	finalStates = {s2 s4 s6 },
	transitions = {
		(s0 a22 s0)
		(s0 a15 s0)
		(s0 a2 s0)
		(s0 a9 s0)
		(s0 a16 s0)
		(s0 a3 s0)
		(s0 a4 s0)
		(s0 a11 s0)
		(s0 a18 s1)
		(s0 a12 s0)
		(s0 a5 s0)
		(s0 a13 s0)
		(s1 a19 s4)
		(s2 a1 s0)
		(s2 a15 s0)
		(s2 a2 s0)
		(s2 a16 s0)
		(s2 a3 s0)
		(s2 a4 s0)
		(s2 a18 s1)
		(s2 a5 s0)
		(s2 a20 s0)
		(s2 a7 s0)
		(s2 a22 s0)
		(s2 a9 s0)
		(s2 a11 s0)
		(s2 a12 s0)
		(s2 a13 s0)
		(s3 a15 s3)
		(s3 a16 s3)
		(s3 a18 s8)
		(s4 a20 s3)
		(s5 a20 s3)
		(s6 a19 s5)
		(s7 a0 s2)
		(s7 a0 s7)
		(s7 a14 s2)
		(s7 a14 s7)
		(s7 a1 s2)
		(s7 a1 s7)
		(s7 a15 s2)
		(s7 a15 s7)
		(s7 a2 s2)
		(s7 a2 s7)
		(s7 a16 s2)
		(s7 a16 s7)
		(s7 a3 s2)
		(s7 a3 s7)
		(s7 a4 s2)
		(s7 a4 s7)
		(s7 a18 s6)
		(s7 a18 s7)
		(s7 a19 s2)
		(s7 a19 s7)
		(s7 a5 s2)
		(s7 a5 s7)
		(s7 a20 s2)
		(s7 a20 s7)
		(s7 a6 s2)
		(s7 a6 s7)
		(s7 a7 s2)
		(s7 a7 s7)
		(s7 a8 s2)
		(s7 a8 s7)
		(s7 a22 s2)
		(s7 a22 s7)
		(s7 a9 s2)
		(s7 a9 s7)
		(s7 a11 s2)
		(s7 a11 s7)
		(s7 a12 s2)
		(s7 a12 s7)
		(s7 a13 s2)
		(s7 a13 s7)
		(s8 a19 s4)
	}
);
