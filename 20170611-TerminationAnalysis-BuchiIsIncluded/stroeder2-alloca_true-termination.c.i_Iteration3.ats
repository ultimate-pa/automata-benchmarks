// Testfile dumped by Ultimate at 2017/06/12 01:58:47
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 },
	initialStates = {s20 },
	finalStates = {s0 s1 s2 s5 s6 s7 s8 s10 s11 s14 s16 s18 s20 s23 },
	transitions = {
		(s0 a13 s7)
		(s0 a13 s8)
		(s1 a21 s2)
		(s2 a22 s14)
		(s3 a21 s4)
		(s4 a22 s15)
		(s5 a3 s6)
		(s6 a6 s23)
		(s6 a8 s23)
		(s7 a16 s10)
		(s8 a16 s12)
		(s9 a16 s12)
		(s10 a17 s11)
		(s11 a18 s16)
		(s12 a17 s13)
		(s13 a18 s17)
		(s14 a0 s18)
		(s15 a0 s19)
		(s16 a20 s1)
		(s17 a19 s21)
		(s17 a20 s3)
		(s18 a2 s10)
		(s19 a2 s12)
		(s20 a1 s5)
		(s21 a5 s22)
		(s22 a13 s7)
		(s22 a13 s9)
		(s23 a9 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:58:48
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s10 },
	finalStates = {s4 s7 s12 s13 },
	transitions = {
		(s0 a22 s6)
		(s1 a19 s11)
		(s1 a20 s3)
		(s2 a19 s9)
		(s2 a20 s7)
		(s3 a21 s5)
		(s4 a19 s11)
		(s4 a20 s3)
		(s5 a22 s8)
		(s6 a0 s9)
		(s7 a21 s5)
		(s8 a0 s12)
		(s9 a2 s9)
		(s9 a5 s9)
		(s9 a17 s9)
		(s9 a18 s2)
		(s9 a13 s9)
		(s10 a1 s10)
		(s10 a1 s12)
		(s10 a0 s10)
		(s10 a0 s12)
		(s10 a2 s10)
		(s10 a2 s12)
		(s10 a3 s10)
		(s10 a3 s12)
		(s10 a6 s10)
		(s10 a6 s12)
		(s10 a5 s10)
		(s10 a5 s12)
		(s10 a8 s10)
		(s10 a8 s12)
		(s10 a9 s10)
		(s10 a9 s12)
		(s10 a13 s10)
		(s10 a13 s12)
		(s10 a16 s10)
		(s10 a16 s12)
		(s10 a17 s10)
		(s10 a17 s12)
		(s10 a18 s10)
		(s10 a18 s4)
		(s10 a19 s10)
		(s10 a19 s12)
		(s10 a20 s10)
		(s10 a20 s12)
		(s10 a21 s10)
		(s10 a21 s13)
		(s10 a22 s10)
		(s10 a22 s12)
		(s11 a6 s11)
		(s11 a5 s11)
		(s11 a17 s11)
		(s11 a8 s11)
		(s11 a18 s1)
		(s11 a13 s11)
		(s12 a2 s11)
		(s12 a3 s11)
		(s12 a6 s11)
		(s12 a5 s11)
		(s12 a17 s11)
		(s12 a8 s11)
		(s12 a18 s1)
		(s12 a13 s11)
		(s12 a21 s0)
		(s13 a22 s6)
	}
);
