// Testfile dumped by Ultimate at 2017/06/12 01:02:36
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 },
	initialStates = {s27 },
	finalStates = {s0 s1 s2 s3 s4 s7 s8 s9 s10 s11 s12 s13 s14 s18 s19 s20 s21 s24 s27 s32 s38 },
	transitions = {
		(s0 a29 s38)
		(s1 a13 s2)
		(s2 a16 s11)
		(s2 a16 s12)
		(s2 a17 s12)
		(s2 a17 s13)
		(s3 a34 s4)
		(s4 a35 s7)
		(s5 a26 s6)
		(s6 a19 s28)
		(s7 a3 s8)
		(s8 a33 s3)
		(s9 a29 s10)
		(s10 a32 s8)
		(s11 a18 s22)
		(s11 a28 s14)
		(s12 a28 s9)
		(s13 a28 s14)
		(s14 a29 s32)
		(s15 a21 s16)
		(s15 a21 s17)
		(s16 a22 s14)
		(s16 a23 s33)
		(s17 a22 s0)
		(s17 a23 s25)
		(s18 a2 s19)
		(s19 a6 s20)
		(s20 a7 s21)
		(s21 a9 s1)
		(s22 a19 s23)
		(s23 a20 s36)
		(s24 a31 s8)
		(s25 a24 s26)
		(s26 a25 s0)
		(s26 a26 s35)
		(s27 a0 s18)
		(s28 a20 s29)
		(s29 a21 s30)
		(s29 a21 s16)
		(s30 a23 s31)
		(s31 a24 s5)
		(s32 a30 s24)
		(s33 a24 s34)
		(s34 a25 s14)
		(s34 a26 s35)
		(s35 a19 s37)
		(s36 a21 s30)
		(s36 a21 s17)
		(s37 a20 s15)
		(s38 a30 s24)
		(s38 a32 s8)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:02:37
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s2 },
	finalStates = {s6 s7 s10 },
	transitions = {
		(s0 a3 s5)
		(s1 a9 s1)
		(s1 a13 s3)
		(s2 a0 s2)
		(s2 a0 s6)
		(s2 a2 s2)
		(s2 a2 s6)
		(s2 a6 s2)
		(s2 a6 s6)
		(s2 a7 s2)
		(s2 a7 s6)
		(s2 a9 s2)
		(s2 a9 s6)
		(s2 a13 s4)
		(s2 a13 s7)
		(s3 a22 s3)
		(s3 a23 s3)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a28 s3)
		(s3 a16 s3)
		(s3 a29 s3)
		(s3 a17 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a18 s3)
		(s3 a32 s3)
		(s3 a19 s3)
		(s3 a20 s3)
		(s3 a33 s3)
		(s3 a21 s3)
		(s3 a34 s8)
		(s4 a22 s4)
		(s4 a22 s7)
		(s4 a23 s4)
		(s4 a23 s7)
		(s4 a24 s4)
		(s4 a24 s7)
		(s4 a3 s4)
		(s4 a3 s7)
		(s4 a25 s4)
		(s4 a25 s7)
		(s4 a26 s4)
		(s4 a26 s7)
		(s4 a28 s4)
		(s4 a28 s7)
		(s4 a16 s4)
		(s4 a16 s7)
		(s4 a29 s4)
		(s4 a29 s7)
		(s4 a17 s4)
		(s4 a17 s7)
		(s4 a30 s4)
		(s4 a30 s7)
		(s4 a31 s4)
		(s4 a31 s7)
		(s4 a18 s4)
		(s4 a18 s7)
		(s4 a32 s4)
		(s4 a32 s7)
		(s4 a19 s4)
		(s4 a19 s7)
		(s4 a20 s4)
		(s4 a20 s7)
		(s4 a33 s4)
		(s4 a33 s7)
		(s4 a21 s4)
		(s4 a21 s7)
		(s4 a34 s4)
		(s4 a34 s10)
		(s4 a35 s4)
		(s4 a35 s7)
		(s5 a22 s5)
		(s5 a23 s5)
		(s5 a24 s5)
		(s5 a25 s5)
		(s5 a26 s5)
		(s5 a28 s5)
		(s5 a29 s5)
		(s5 a30 s5)
		(s5 a31 s5)
		(s5 a18 s5)
		(s5 a32 s5)
		(s5 a19 s11)
		(s5 a33 s5)
		(s5 a21 s5)
		(s5 a34 s9)
		(s6 a2 s1)
		(s6 a7 s1)
		(s6 a9 s1)
		(s6 a13 s3)
		(s7 a22 s5)
		(s7 a23 s5)
		(s7 a24 s5)
		(s7 a3 s5)
		(s7 a25 s5)
		(s7 a26 s5)
		(s7 a28 s5)
		(s7 a16 s5)
		(s7 a29 s5)
		(s7 a17 s5)
		(s7 a30 s5)
		(s7 a31 s5)
		(s7 a18 s5)
		(s7 a32 s5)
		(s7 a19 s11)
		(s7 a20 s5)
		(s7 a33 s5)
		(s7 a21 s5)
		(s7 a34 s9)
		(s8 a3 s3)
		(s8 a35 s8)
		(s9 a35 s10)
		(s10 a3 s5)
		(s10 a35 s0)
		(s11 a22 s11)
		(s11 a23 s11)
		(s11 a24 s11)
		(s11 a25 s11)
		(s11 a26 s11)
		(s11 a29 s11)
		(s11 a30 s11)
		(s11 a31 s11)
		(s11 a32 s11)
		(s11 a19 s11)
		(s11 a20 s11)
		(s11 a33 s11)
		(s11 a21 s11)
		(s11 a34 s9)
	}
);
