// Testfile dumped by Ultimate at 2017/06/12 01:03:04
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 },
	initialStates = {s3 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 },
	transitions = {
		(s0 a15 s15)
		(s1 a30 s20)
		(s2 a37 s8)
		(s3 a0 s44)
		(s4 a38 s9)
		(s4 a39 s36)
		(s5 a37 s4)
		(s6 a44 s7)
		(s7 a45 s14)
		(s8 a38 s9)
		(s9 a42 s25)
		(s10 a8 s11)
		(s11 a9 s30)
		(s12 a50 s13)
		(s13 a51 s27)
		(s14 a46 s39)
		(s15 a16 s16)
		(s15 a19 s17)
		(s16 a17 s31)
		(s17 a20 s35)
		(s18 a25 s19)
		(s19 a26 s26)
		(s20 a31 s21)
		(s21 a33 s5)
		(s21 a34 s38)
		(s22 a22 s23)
		(s23 a23 s9)
		(s23 a24 s18)
		(s24 a6 s10)
		(s25 a43 s6)
		(s26 a27 s32)
		(s27 a52 s28)
		(s27 a53 s29)
		(s28 a60 s37)
		(s29 a54 s43)
		(s30 a13 s45)
		(s31 a18 s17)
		(s32 a32 s33)
		(s32 a28 s34)
		(s33 a33 s2)
		(s34 a29 s1)
		(s35 a21 s22)
		(s36 a40 s35)
		(s37 a61 s14)
		(s38 a35 s18)
		(s39 a47 s40)
		(s40 a49 s12)
		(s41 a57 s42)
		(s42 a58 s12)
		(s43 a55 s41)
		(s44 a2 s24)
		(s45 a14 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:08
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s7 },
	finalStates = {s1 s10 s11 },
	transitions = {
		(s0 a38 s0)
		(s0 a39 s0)
		(s0 a40 s8)
		(s0 a42 s0)
		(s0 a9 s0)
		(s0 a43 s0)
		(s0 a44 s0)
		(s0 a45 s0)
		(s0 a15 s0)
		(s0 a46 s0)
		(s0 a16 s0)
		(s0 a47 s0)
		(s0 a17 s0)
		(s0 a18 s0)
		(s0 a19 s0)
		(s0 a49 s0)
		(s0 a50 s0)
		(s0 a51 s0)
		(s0 a22 s2)
		(s0 a52 s0)
		(s0 a53 s0)
		(s0 a54 s0)
		(s0 a55 s0)
		(s0 a25 s0)
		(s0 a26 s0)
		(s0 a27 s0)
		(s0 a57 s0)
		(s0 a58 s0)
		(s0 a28 s0)
		(s0 a29 s2)
		(s0 a60 s0)
		(s0 a32 s0)
		(s0 a61 s0)
		(s0 a33 s0)
		(s0 a34 s0)
		(s0 a35 s0)
		(s0 a37 s0)
		(s1 a21 s5)
		(s2 a38 s2)
		(s2 a39 s2)
		(s2 a40 s8)
		(s2 a42 s2)
		(s2 a43 s2)
		(s2 a44 s2)
		(s2 a45 s2)
		(s2 a46 s2)
		(s2 a47 s2)
		(s2 a49 s2)
		(s2 a50 s2)
		(s2 a51 s2)
		(s2 a52 s2)
		(s2 a23 s2)
		(s2 a53 s2)
		(s2 a24 s2)
		(s2 a54 s2)
		(s2 a55 s2)
		(s2 a25 s2)
		(s2 a26 s2)
		(s2 a27 s2)
		(s2 a57 s2)
		(s2 a58 s2)
		(s2 a28 s2)
		(s2 a29 s2)
		(s2 a30 s2)
		(s2 a31 s2)
		(s2 a60 s2)
		(s2 a32 s2)
		(s2 a61 s2)
		(s2 a33 s2)
		(s2 a34 s2)
		(s2 a35 s2)
		(s2 a37 s2)
		(s3 a38 s3)
		(s3 a38 s10)
		(s3 a39 s3)
		(s3 a39 s10)
		(s3 a40 s3)
		(s3 a40 s10)
		(s3 a8 s3)
		(s3 a8 s10)
		(s3 a42 s3)
		(s3 a42 s10)
		(s3 a9 s3)
		(s3 a9 s10)
		(s3 a43 s3)
		(s3 a43 s10)
		(s3 a44 s3)
		(s3 a44 s10)
		(s3 a13 s3)
		(s3 a13 s10)
		(s3 a45 s3)
		(s3 a45 s10)
		(s3 a14 s3)
		(s3 a14 s10)
		(s3 a15 s4)
		(s3 a15 s10)
		(s3 a46 s3)
		(s3 a46 s10)
		(s3 a47 s3)
		(s3 a47 s10)
		(s3 a49 s3)
		(s3 a49 s10)
		(s3 a20 s3)
		(s3 a20 s10)
		(s3 a50 s3)
		(s3 a50 s10)
		(s3 a21 s3)
		(s3 a21 s10)
		(s3 a51 s3)
		(s3 a51 s10)
		(s3 a22 s3)
		(s3 a22 s11)
		(s3 a52 s3)
		(s3 a52 s10)
		(s3 a23 s3)
		(s3 a23 s10)
		(s3 a53 s3)
		(s3 a53 s10)
		(s3 a24 s3)
		(s3 a24 s10)
		(s3 a54 s3)
		(s3 a54 s10)
		(s3 a55 s3)
		(s3 a55 s10)
		(s3 a25 s3)
		(s3 a25 s10)
		(s3 a26 s3)
		(s3 a26 s10)
		(s3 a27 s3)
		(s3 a27 s10)
		(s3 a57 s3)
		(s3 a57 s10)
		(s3 a58 s3)
		(s3 a58 s10)
		(s3 a28 s3)
		(s3 a28 s10)
		(s3 a29 s3)
		(s3 a29 s11)
		(s3 a30 s3)
		(s3 a30 s10)
		(s3 a31 s3)
		(s3 a31 s10)
		(s3 a60 s3)
		(s3 a60 s10)
		(s3 a32 s3)
		(s3 a32 s10)
		(s3 a61 s3)
		(s3 a61 s10)
		(s3 a33 s3)
		(s3 a33 s10)
		(s3 a34 s3)
		(s3 a34 s10)
		(s3 a35 s3)
		(s3 a35 s10)
		(s3 a37 s3)
		(s3 a37 s10)
		(s4 a38 s4)
		(s4 a38 s10)
		(s4 a39 s4)
		(s4 a39 s10)
		(s4 a40 s4)
		(s4 a40 s10)
		(s4 a42 s4)
		(s4 a42 s10)
		(s4 a43 s4)
		(s4 a43 s10)
		(s4 a44 s4)
		(s4 a44 s10)
		(s4 a45 s4)
		(s4 a45 s10)
		(s4 a46 s4)
		(s4 a46 s10)
		(s4 a16 s4)
		(s4 a16 s10)
		(s4 a47 s4)
		(s4 a47 s10)
		(s4 a17 s4)
		(s4 a17 s10)
		(s4 a18 s3)
		(s4 a18 s10)
		(s4 a19 s4)
		(s4 a19 s10)
		(s4 a49 s4)
		(s4 a49 s10)
		(s4 a20 s1)
		(s4 a20 s4)
		(s4 a50 s4)
		(s4 a50 s10)
		(s4 a21 s4)
		(s4 a21 s10)
		(s4 a51 s4)
		(s4 a51 s10)
		(s4 a22 s4)
		(s4 a22 s11)
		(s4 a52 s4)
		(s4 a52 s10)
		(s4 a23 s4)
		(s4 a23 s10)
		(s4 a53 s4)
		(s4 a53 s10)
		(s4 a24 s4)
		(s4 a24 s10)
		(s4 a54 s4)
		(s4 a54 s10)
		(s4 a55 s4)
		(s4 a55 s10)
		(s4 a25 s4)
		(s4 a25 s10)
		(s4 a26 s4)
		(s4 a26 s10)
		(s4 a27 s4)
		(s4 a27 s10)
		(s4 a57 s4)
		(s4 a57 s10)
		(s4 a58 s4)
		(s4 a58 s10)
		(s4 a28 s4)
		(s4 a28 s10)
		(s4 a29 s4)
		(s4 a29 s11)
		(s4 a30 s4)
		(s4 a30 s10)
		(s4 a31 s4)
		(s4 a31 s10)
		(s4 a60 s4)
		(s4 a60 s10)
		(s4 a32 s4)
		(s4 a32 s10)
		(s4 a61 s4)
		(s4 a61 s10)
		(s4 a33 s4)
		(s4 a33 s10)
		(s4 a34 s4)
		(s4 a34 s10)
		(s4 a35 s4)
		(s4 a35 s10)
		(s4 a37 s4)
		(s4 a37 s10)
		(s5 a22 s9)
		(s6 a38 s6)
		(s6 a39 s6)
		(s6 a40 s8)
		(s6 a42 s6)
		(s6 a43 s6)
		(s6 a44 s6)
		(s6 a45 s6)
		(s6 a46 s6)
		(s6 a47 s6)
		(s6 a49 s6)
		(s6 a50 s6)
		(s6 a51 s6)
		(s6 a52 s6)
		(s6 a23 s6)
		(s6 a53 s6)
		(s6 a24 s6)
		(s6 a54 s6)
		(s6 a55 s6)
		(s6 a25 s6)
		(s6 a26 s6)
		(s6 a27 s6)
		(s6 a57 s6)
		(s6 a58 s6)
		(s6 a28 s6)
		(s6 a29 s6)
		(s6 a30 s6)
		(s6 a31 s6)
		(s6 a60 s6)
		(s6 a32 s6)
		(s6 a61 s6)
		(s6 a33 s6)
		(s6 a34 s6)
		(s6 a35 s6)
		(s6 a37 s6)
		(s7 a0 s7)
		(s7 a0 s10)
		(s7 a2 s7)
		(s7 a2 s10)
		(s7 a6 s3)
		(s7 a6 s10)
		(s8 a21 s8)
		(s8 a22 s6)
		(s9 a38 s9)
		(s9 a39 s9)
		(s9 a40 s1)
		(s9 a42 s9)
		(s9 a43 s9)
		(s9 a44 s9)
		(s9 a45 s9)
		(s9 a46 s9)
		(s9 a47 s9)
		(s9 a49 s9)
		(s9 a50 s9)
		(s9 a51 s9)
		(s9 a52 s9)
		(s9 a23 s9)
		(s9 a53 s9)
		(s9 a24 s9)
		(s9 a54 s9)
		(s9 a55 s9)
		(s9 a25 s9)
		(s9 a26 s9)
		(s9 a27 s9)
		(s9 a57 s9)
		(s9 a58 s9)
		(s9 a28 s9)
		(s9 a29 s9)
		(s9 a30 s9)
		(s9 a31 s9)
		(s9 a60 s9)
		(s9 a32 s9)
		(s9 a61 s9)
		(s9 a33 s9)
		(s9 a34 s9)
		(s9 a35 s9)
		(s9 a37 s9)
		(s10 a38 s0)
		(s10 a39 s0)
		(s10 a40 s8)
		(s10 a8 s0)
		(s10 a42 s0)
		(s10 a9 s0)
		(s10 a43 s0)
		(s10 a44 s0)
		(s10 a45 s0)
		(s10 a14 s0)
		(s10 a15 s0)
		(s10 a46 s0)
		(s10 a16 s0)
		(s10 a47 s0)
		(s10 a17 s0)
		(s10 a18 s0)
		(s10 a19 s0)
		(s10 a49 s0)
		(s10 a50 s0)
		(s10 a21 s0)
		(s10 a51 s0)
		(s10 a22 s2)
		(s10 a52 s0)
		(s10 a53 s0)
		(s10 a54 s0)
		(s10 a55 s0)
		(s10 a25 s0)
		(s10 a26 s0)
		(s10 a27 s0)
		(s10 a57 s0)
		(s10 a58 s0)
		(s10 a28 s0)
		(s10 a29 s2)
		(s10 a31 s0)
		(s10 a60 s0)
		(s10 a32 s0)
		(s10 a61 s0)
		(s10 a33 s0)
		(s10 a34 s0)
		(s10 a35 s0)
		(s10 a37 s0)
		(s11 a23 s2)
		(s11 a24 s2)
		(s11 a30 s2)
	}
);
