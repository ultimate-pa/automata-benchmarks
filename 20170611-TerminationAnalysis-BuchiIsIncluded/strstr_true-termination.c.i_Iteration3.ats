// Testfile dumped by Ultimate at 2017/06/12 01:03:00
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 },
	initialStates = {s43 },
	finalStates = {s0 s1 s4 s8 s9 s10 s14 s15 s16 s18 s21 s22 s24 s25 s29 s30 s31 s32 s35 s38 s43 s66 s67 },
	transitions = {
		(s0 a28 s1)
		(s1 a29 s4)
		(s2 a28 s3)
		(s3 a29 s5)
		(s4 a30 s16)
		(s5 a30 s17)
		(s6 a14 s7)
		(s6 a14 s8)
		(s7 a26 s2)
		(s8 a26 s0)
		(s9 a32 s10)
		(s10 a33 s18)
		(s11 a4 s12)
		(s11 a32 s13)
		(s12 a12 s6)
		(s13 a33 s48)
		(s14 a7 s15)
		(s15 a9 s66)
		(s16 a31 s9)
		(s17 a31 s11)
		(s18 a34 s24)
		(s19 a33 s20)
		(s20 a34 s34)
		(s21 a21 s22)
		(s22 a25 s23)
		(s23 a26 s62)
		(s24 a36 s25)
		(s25 a37 s35)
		(s26 a36 s27)
		(s27 a37 s64)
		(s28 a2 s12)
		(s29 a17 s21)
		(s30 a3 s31)
		(s31 a6 s14)
		(s32 a41 s10)
		(s33 a40 s28)
		(s34 a36 s53)
		(s35 a38 s38)
		(s36 a37 s37)
		(s37 a38 s39)
		(s38 a39 s32)
		(s39 a39 s33)
		(s40 a0 s28)
		(s41 a38 s42)
		(s42 a39 s65)
		(s43 a1 s30)
		(s44 a35 s40)
		(s44 a36 s45)
		(s45 a37 s41)
		(s46 a34 s47)
		(s47 a35 s40)
		(s47 a36 s36)
		(s48 a34 s44)
		(s49 a41 s19)
		(s50 a39 s49)
		(s50 a39 s51)
		(s51 a41 s56)
		(s52 a38 s50)
		(s53 a37 s52)
		(s54 a34 s26)
		(s55 a34 s34)
		(s55 a34 s26)
		(s56 a33 s54)
		(s56 a33 s46)
		(s57 a33 s55)
		(s57 a33 s46)
		(s58 a4 s12)
		(s58 a32 s57)
		(s59 a31 s58)
		(s60 a30 s59)
		(s61 a29 s60)
		(s62 a28 s61)
		(s63 a39 s51)
		(s64 a38 s63)
		(s65 a40 s28)
		(s65 a41 s13)
		(s66 a13 s67)
		(s67 a15 s29)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:03
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s3 },
	finalStates = {s2 s7 s8 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s8)
		(s0 a2 s0)
		(s0 a2 s8)
		(s0 a28 s0)
		(s0 a28 s8)
		(s0 a29 s0)
		(s0 a29 s8)
		(s0 a4 s0)
		(s0 a4 s8)
		(s0 a30 s0)
		(s0 a30 s8)
		(s0 a31 s0)
		(s0 a31 s8)
		(s0 a32 s0)
		(s0 a32 s7)
		(s0 a12 s0)
		(s0 a12 s8)
		(s0 a33 s0)
		(s0 a33 s8)
		(s0 a14 s0)
		(s0 a14 s8)
		(s0 a34 s0)
		(s0 a34 s8)
		(s0 a35 s0)
		(s0 a35 s8)
		(s0 a36 s0)
		(s0 a36 s8)
		(s0 a21 s0)
		(s0 a21 s8)
		(s0 a37 s0)
		(s0 a37 s2)
		(s0 a38 s0)
		(s0 a38 s8)
		(s0 a39 s0)
		(s0 a39 s8)
		(s0 a25 s0)
		(s0 a25 s8)
		(s0 a40 s0)
		(s0 a40 s8)
		(s0 a41 s0)
		(s0 a41 s8)
		(s0 a26 s0)
		(s0 a26 s8)
		(s1 a0 s1)
		(s1 a2 s1)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a4 s1)
		(s1 a30 s1)
		(s1 a31 s1)
		(s1 a12 s1)
		(s1 a33 s1)
		(s1 a14 s1)
		(s1 a34 s1)
		(s1 a35 s1)
		(s1 a36 s1)
		(s1 a37 s4)
		(s1 a26 s1)
		(s2 a38 s6)
		(s3 a1 s3)
		(s3 a1 s8)
		(s3 a3 s3)
		(s3 a3 s8)
		(s3 a6 s8)
		(s3 a6 s9)
		(s4 a2 s4)
		(s4 a28 s4)
		(s4 a29 s4)
		(s4 a4 s4)
		(s4 a30 s4)
		(s4 a31 s4)
		(s4 a12 s4)
		(s4 a14 s4)
		(s4 a38 s4)
		(s4 a39 s4)
		(s4 a40 s4)
		(s4 a41 s1)
		(s4 a26 s4)
		(s5 a2 s5)
		(s5 a28 s5)
		(s5 a29 s5)
		(s5 a4 s5)
		(s5 a30 s5)
		(s5 a31 s5)
		(s5 a12 s5)
		(s5 a14 s5)
		(s5 a38 s5)
		(s5 a39 s5)
		(s5 a40 s5)
		(s5 a41 s7)
		(s5 a26 s5)
		(s6 a2 s6)
		(s6 a28 s6)
		(s6 a29 s6)
		(s6 a4 s6)
		(s6 a30 s6)
		(s6 a31 s6)
		(s6 a12 s6)
		(s6 a14 s6)
		(s6 a38 s6)
		(s6 a39 s6)
		(s6 a40 s6)
		(s6 a41 s1)
		(s6 a26 s6)
		(s7 a33 s10)
		(s8 a0 s11)
		(s8 a2 s11)
		(s8 a28 s11)
		(s8 a29 s11)
		(s8 a4 s11)
		(s8 a30 s11)
		(s8 a31 s11)
		(s8 a7 s11)
		(s8 a9 s11)
		(s8 a12 s11)
		(s8 a33 s11)
		(s8 a14 s11)
		(s8 a15 s11)
		(s8 a34 s11)
		(s8 a17 s11)
		(s8 a35 s11)
		(s8 a36 s11)
		(s8 a21 s11)
		(s8 a37 s6)
		(s8 a39 s11)
		(s8 a25 s11)
		(s8 a40 s11)
		(s8 a41 s1)
		(s8 a26 s11)
		(s9 a17 s0)
		(s9 a17 s8)
		(s9 a7 s8)
		(s9 a7 s9)
		(s9 a9 s8)
		(s9 a9 s9)
		(s9 a13 s8)
		(s9 a13 s9)
		(s9 a15 s8)
		(s9 a15 s9)
		(s10 a0 s10)
		(s10 a2 s10)
		(s10 a28 s10)
		(s10 a29 s10)
		(s10 a4 s10)
		(s10 a30 s10)
		(s10 a31 s10)
		(s10 a12 s10)
		(s10 a14 s10)
		(s10 a34 s10)
		(s10 a35 s10)
		(s10 a36 s10)
		(s10 a37 s5)
		(s10 a26 s10)
		(s11 a0 s11)
		(s11 a2 s11)
		(s11 a28 s11)
		(s11 a29 s11)
		(s11 a4 s11)
		(s11 a30 s11)
		(s11 a31 s11)
		(s11 a9 s11)
		(s11 a12 s11)
		(s11 a14 s11)
		(s11 a34 s11)
		(s11 a17 s11)
		(s11 a35 s11)
		(s11 a36 s11)
		(s11 a21 s11)
		(s11 a37 s6)
		(s11 a25 s11)
		(s11 a40 s11)
		(s11 a41 s1)
		(s11 a26 s11)
	}
);
