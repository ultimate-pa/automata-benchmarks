// Testfile dumped by Ultimate at 2017/06/12 01:03:12
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 s107 s108 s109 s110 s111 s112 s113 s114 s115 s116 s117 s118 s119 s120 s121 s122 s123 s124 s125 s126 s127 s128 s129 s130 s131 s132 s133 s134 s135 s136 s137 s138 s139 s140 s141 s142 s143 s144 s145 s146 s147 s148 s149 s150 s151 s152 s153 s154 s155 s156 s157 s158 },
	initialStates = {s30 },
	finalStates = {s1 s2 s3 s4 s6 s9 s11 s12 s13 s14 s15 s16 s17 s20 s21 s22 s24 s27 s30 s32 s35 s36 s37 s38 s121 s122 s125 s126 s127 s128 s129 s130 s131 s132 s133 s134 s136 s140 s141 s144 s148 s149 s154 s155 s156 s157 },
	transitions = {
		(s0 a29 s108)
		(s1 a52 s2)
		(s1 a53 s3)
		(s2 a60 s9)
		(s3 a54 s15)
		(s4 a27 s156)
		(s5 a28 s0)
		(s5 a28 s31)
		(s6 a21 s144)
		(s6 a21 s17)
		(s7 a40 s8)
		(s8 a21 s81)
		(s8 a21 s40)
		(s9 a61 s133)
		(s10 a35 s137)
		(s11 a47 s12)
		(s12 a49 s129)
		(s13 a57 s14)
		(s14 a58 s129)
		(s15 a55 s13)
		(s16 a2 s148)
		(s17 a22 s27)
		(s18 a21 s19)
		(s18 a21 s147)
		(s19 a22 s146)
		(s20 a14 s21)
		(s21 a15 s131)
		(s22 a30 s140)
		(s23 a30 s142)
		(s24 a37 s121)
		(s25 a34 s26)
		(s26 a35 s92)
		(s27 a24 s134)
		(s28 a25 s64)
		(s28 a25 s90)
		(s29 a37 s123)
		(s30 a0 s16)
		(s31 a29 s23)
		(s32 a23 s122)
		(s32 a24 s134)
		(s33 a25 s34)
		(s33 a25 s136)
		(s34 a26 s150)
		(s35 a22 s36)
		(s36 a23 s122)
		(s36 a24 s37)
		(s37 a25 s149)
		(s37 a25 s136)
		(s38 a22 s32)
		(s39 a21 s35)
		(s39 a21 s40)
		(s40 a22 s91)
		(s41 a21 s19)
		(s41 a21 s38)
		(s42 a40 s39)
		(s43 a40 s41)
		(s44 a39 s42)
		(s45 a39 s43)
		(s46 a35 s33)
		(s47 a37 s44)
		(s48 a33 s49)
		(s48 a33 s47)
		(s49 a37 s45)
		(s50 a31 s48)
		(s51 a33 s49)
		(s52 a34 s46)
		(s53 a31 s51)
		(s54 a31 s52)
		(s55 a30 s56)
		(s56 a31 s51)
		(s56 a31 s68)
		(s57 a30 s54)
		(s58 a29 s55)
		(s59 a29 s57)
		(s60 a28 s58)
		(s60 a28 s61)
		(s61 a29 s66)
		(s62 a28 s59)
		(s63 a27 s60)
		(s64 a26 s65)
		(s65 a27 s74)
		(s66 a30 s67)
		(s67 a31 s48)
		(s67 a31 s71)
		(s68 a33 s29)
		(s69 a29 s70)
		(s70 a30 s50)
		(s71 a33 s83)
		(s71 a33 s29)
		(s72 a30 s53)
		(s73 a29 s72)
		(s74 a28 s69)
		(s74 a28 s73)
		(s75 a28 s61)
		(s76 a27 s75)
		(s77 a26 s76)
		(s77 a26 s63)
		(s78 a25 s77)
		(s78 a25 s79)
		(s79 a26 s103)
		(s79 a26 s104)
		(s80 a24 s78)
		(s81 a22 s80)
		(s82 a39 s7)
		(s83 a37 s82)
		(s84 a26 s63)
		(s85 a25 s84)
		(s85 a25 s139)
		(s86 a28 s69)
		(s87 a27 s86)
		(s88 a26 s65)
		(s88 a26 s87)
		(s89 a25 s88)
		(s89 a25 s90)
		(s90 a26 s153)
		(s90 a26 s109)
		(s91 a24 s89)
		(s92 a25 s64)
		(s92 a25 s93)
		(s93 a26 s109)
		(s94 a25 s84)
		(s94 a25 s79)
		(s95 a35 s85)
		(s96 a34 s95)
		(s97 a31 s98)
		(s98 a34 s10)
		(s98 a34 s95)
		(s99 a30 s97)
		(s100 a29 s101)
		(s101 a30 s112)
		(s102 a28 s100)
		(s103 a27 s102)
		(s104 a27 s120)
		(s105 a25 s152)
		(s105 a25 s93)
		(s106 a35 s105)
		(s107 a31 s25)
		(s108 a30 s107)
		(s109 a27 s158)
		(s110 a34 s46)
		(s110 a34 s111)
		(s111 a35 s119)
		(s112 a31 s96)
		(s113 a31 s110)
		(s114 a30 s113)
		(s115 a29 s114)
		(s116 a28 s115)
		(s116 a28 s59)
		(s117 a26 s151)
		(s118 a29 s99)
		(s119 a25 s34)
		(s119 a25 s117)
		(s120 a28 s100)
		(s120 a28 s118)
		(s121 a38 s122)
		(s122 a42 s154)
		(s123 a39 s124)
		(s124 a40 s18)
		(s125 a44 s126)
		(s126 a45 s133)
		(s127 a8 s128)
		(s128 a9 s155)
		(s129 a50 s130)
		(s130 a51 s1)
		(s131 a19 s132)
		(s132 a20 s6)
		(s133 a46 s11)
		(s134 a25 s135)
		(s134 a25 s136)
		(s135 a26 s150)
		(s135 a26 s151)
		(s136 a26 s4)
		(s137 a25 s138)
		(s137 a25 s139)
		(s138 a26 s104)
		(s139 a26 s103)
		(s140 a31 s141)
		(s141 a33 s24)
		(s142 a31 s143)
		(s143 a34 s106)
		(s143 a34 s26)
		(s144 a22 s145)
		(s144 a22 s146)
		(s145 a24 s94)
		(s146 a24 s28)
		(s147 a22 s145)
		(s148 a6 s127)
		(s149 a26 s150)
		(s149 a26 s151)
		(s150 a27 s62)
		(s151 a27 s116)
		(s152 a26 s153)
		(s153 a27 s5)
		(s154 a43 s125)
		(s155 a13 s20)
		(s156 a32 s141)
		(s156 a28 s157)
		(s157 a29 s22)
		(s158 a28 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:18
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s2 },
	finalStates = {s0 s1 },
	transitions = {
		(s0 a38 s4)
		(s0 a2 s4)
		(s0 a39 s4)
		(s0 a40 s4)
		(s0 a8 s4)
		(s0 a42 s4)
		(s0 a9 s4)
		(s0 a43 s4)
		(s0 a44 s4)
		(s0 a14 s4)
		(s0 a15 s4)
		(s0 a46 s4)
		(s0 a47 s3)
		(s0 a19 s4)
		(s0 a20 s4)
		(s0 a50 s4)
		(s0 a21 s4)
		(s0 a51 s4)
		(s0 a22 s4)
		(s0 a52 s4)
		(s0 a23 s4)
		(s0 a53 s4)
		(s0 a24 s4)
		(s0 a54 s3)
		(s0 a25 s4)
		(s0 a26 s4)
		(s0 a27 s4)
		(s0 a57 s4)
		(s0 a58 s4)
		(s0 a28 s4)
		(s0 a29 s4)
		(s0 a30 s4)
		(s0 a31 s4)
		(s0 a60 s4)
		(s0 a32 s4)
		(s0 a61 s5)
		(s0 a33 s4)
		(s0 a34 s4)
		(s0 a35 s4)
		(s0 a37 s4)
		(s1 a55 s3)
		(s1 a49 s3)
		(s2 a0 s0)
		(s2 a0 s2)
		(s2 a38 s0)
		(s2 a38 s2)
		(s2 a2 s0)
		(s2 a2 s2)
		(s2 a39 s0)
		(s2 a39 s2)
		(s2 a40 s0)
		(s2 a40 s2)
		(s2 a6 s0)
		(s2 a6 s2)
		(s2 a8 s0)
		(s2 a8 s2)
		(s2 a42 s0)
		(s2 a42 s2)
		(s2 a9 s0)
		(s2 a9 s2)
		(s2 a43 s0)
		(s2 a43 s2)
		(s2 a44 s0)
		(s2 a44 s2)
		(s2 a13 s0)
		(s2 a13 s2)
		(s2 a45 s0)
		(s2 a45 s2)
		(s2 a14 s0)
		(s2 a14 s2)
		(s2 a15 s0)
		(s2 a15 s2)
		(s2 a46 s0)
		(s2 a46 s2)
		(s2 a47 s1)
		(s2 a47 s2)
		(s2 a19 s0)
		(s2 a19 s2)
		(s2 a49 s0)
		(s2 a49 s2)
		(s2 a20 s0)
		(s2 a20 s2)
		(s2 a50 s0)
		(s2 a50 s2)
		(s2 a21 s0)
		(s2 a21 s2)
		(s2 a51 s0)
		(s2 a51 s2)
		(s2 a22 s0)
		(s2 a22 s2)
		(s2 a52 s0)
		(s2 a52 s2)
		(s2 a23 s0)
		(s2 a23 s2)
		(s2 a53 s0)
		(s2 a53 s2)
		(s2 a24 s0)
		(s2 a24 s2)
		(s2 a54 s1)
		(s2 a54 s2)
		(s2 a55 s0)
		(s2 a55 s2)
		(s2 a25 s0)
		(s2 a25 s2)
		(s2 a26 s0)
		(s2 a26 s2)
		(s2 a27 s0)
		(s2 a27 s2)
		(s2 a57 s0)
		(s2 a57 s2)
		(s2 a58 s0)
		(s2 a58 s2)
		(s2 a28 s0)
		(s2 a28 s2)
		(s2 a29 s0)
		(s2 a29 s2)
		(s2 a30 s0)
		(s2 a30 s2)
		(s2 a31 s0)
		(s2 a31 s2)
		(s2 a60 s0)
		(s2 a60 s2)
		(s2 a32 s0)
		(s2 a32 s2)
		(s2 a61 s0)
		(s2 a61 s2)
		(s2 a33 s0)
		(s2 a33 s2)
		(s2 a34 s0)
		(s2 a34 s2)
		(s2 a35 s0)
		(s2 a35 s2)
		(s2 a37 s0)
		(s2 a37 s2)
		(s3 a52 s3)
		(s3 a61 s0)
		(s3 a53 s3)
		(s3 a54 s3)
		(s3 a55 s3)
		(s3 a49 s3)
		(s3 a57 s3)
		(s3 a58 s3)
		(s3 a50 s3)
		(s3 a51 s3)
		(s3 a60 s3)
		(s4 a38 s4)
		(s4 a39 s4)
		(s4 a40 s4)
		(s4 a42 s4)
		(s4 a9 s4)
		(s4 a43 s4)
		(s4 a44 s4)
		(s4 a15 s4)
		(s4 a47 s3)
		(s4 a19 s4)
		(s4 a20 s4)
		(s4 a50 s4)
		(s4 a21 s4)
		(s4 a51 s4)
		(s4 a22 s4)
		(s4 a52 s4)
		(s4 a23 s4)
		(s4 a53 s4)
		(s4 a24 s4)
		(s4 a54 s3)
		(s4 a25 s4)
		(s4 a26 s4)
		(s4 a27 s4)
		(s4 a58 s4)
		(s4 a28 s4)
		(s4 a29 s4)
		(s4 a30 s4)
		(s4 a31 s4)
		(s4 a60 s4)
		(s4 a32 s4)
		(s4 a61 s5)
		(s4 a33 s4)
		(s4 a34 s4)
		(s4 a35 s4)
		(s4 a37 s4)
		(s5 a46 s5)
		(s5 a47 s1)
	}
);
