// Testfile dumped by Ultimate at 2017/06/11 23:19:16
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s15 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	transitions = {
		(s0 a5 s1)
		(s0 a8 s1)
		(s1 a11 s2)
		(s1 a12 s2)
		(s2 a13 s3)
		(s3 a14 s8)
		(s4 a24 s5)
		(s5 a25 s6)
		(s6 a26 s20)
		(s6 a29 s19)
		(s7 a2 s0)
		(s8 a15 s13)
		(s9 a23 s4)
		(s10 a33 s16)
		(s11 a18 s12)
		(s12 a20 s21)
		(s13 a16 s14)
		(s14 a17 s11)
		(s15 a0 s7)
		(s16 a35 s17)
		(s17 a36 s14)
		(s18 a28 s19)
		(s19 a30 s10)
		(s19 a31 s9)
		(s20 a27 s18)
		(s21 a21 s22)
		(s22 a22 s9)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:19:17
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 },
	initialStates = {s6 },
	finalStates = {s2 s8 s10 },
	transitions = {
		(s0 a18 s4)
		(s1 a23 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a28 s1)
		(s1 a11 s1)
		(s1 a29 s1)
		(s1 a12 s1)
		(s1 a30 s1)
		(s1 a15 s1)
		(s1 a31 s1)
		(s1 a33 s1)
		(s1 a18 s5)
		(s1 a35 s1)
		(s1 a36 s9)
		(s2 a20 s5)
		(s2 a22 s5)
		(s3 a23 s3)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a33 s3)
		(s3 a35 s3)
		(s3 a20 s3)
		(s3 a21 s3)
		(s3 a36 s9)
		(s3 a22 s3)
		(s4 a23 s4)
		(s4 a24 s4)
		(s4 a25 s4)
		(s4 a26 s4)
		(s4 a27 s4)
		(s4 a28 s4)
		(s4 a29 s4)
		(s4 a30 s4)
		(s4 a31 s4)
		(s4 a33 s4)
		(s4 a35 s4)
		(s4 a20 s4)
		(s4 a21 s4)
		(s4 a36 s8)
		(s4 a22 s4)
		(s5 a23 s5)
		(s5 a24 s5)
		(s5 a25 s5)
		(s5 a26 s5)
		(s5 a27 s5)
		(s5 a28 s5)
		(s5 a29 s5)
		(s5 a30 s5)
		(s5 a31 s5)
		(s5 a33 s5)
		(s5 a35 s5)
		(s5 a20 s5)
		(s5 a21 s5)
		(s5 a36 s9)
		(s5 a22 s5)
		(s6 a0 s6)
		(s6 a0 s10)
		(s6 a2 s6)
		(s6 a2 s10)
		(s6 a5 s6)
		(s6 a5 s10)
		(s6 a8 s6)
		(s6 a8 s10)
		(s6 a11 s6)
		(s6 a11 s10)
		(s6 a12 s6)
		(s6 a12 s10)
		(s6 a13 s7)
		(s6 a13 s10)
		(s7 a23 s7)
		(s7 a23 s10)
		(s7 a24 s7)
		(s7 a24 s10)
		(s7 a25 s7)
		(s7 a25 s10)
		(s7 a26 s7)
		(s7 a26 s10)
		(s7 a27 s7)
		(s7 a27 s10)
		(s7 a28 s7)
		(s7 a28 s10)
		(s7 a29 s7)
		(s7 a29 s10)
		(s7 a14 s7)
		(s7 a14 s10)
		(s7 a30 s7)
		(s7 a30 s10)
		(s7 a15 s7)
		(s7 a15 s10)
		(s7 a16 s7)
		(s7 a16 s8)
		(s7 a31 s7)
		(s7 a31 s10)
		(s7 a17 s7)
		(s7 a17 s10)
		(s7 a33 s7)
		(s7 a33 s10)
		(s7 a18 s2)
		(s7 a18 s7)
		(s7 a35 s7)
		(s7 a35 s10)
		(s7 a20 s7)
		(s7 a20 s10)
		(s7 a21 s2)
		(s7 a21 s7)
		(s7 a36 s7)
		(s7 a36 s10)
		(s7 a22 s7)
		(s7 a22 s10)
		(s8 a17 s0)
		(s9 a17 s9)
		(s9 a18 s3)
		(s10 a23 s1)
		(s10 a24 s1)
		(s10 a5 s1)
		(s10 a25 s1)
		(s10 a8 s1)
		(s10 a26 s1)
		(s10 a27 s1)
		(s10 a28 s1)
		(s10 a11 s1)
		(s10 a29 s1)
		(s10 a12 s1)
		(s10 a14 s1)
		(s10 a30 s1)
		(s10 a15 s1)
		(s10 a31 s1)
		(s10 a33 s1)
		(s10 a17 s1)
		(s10 a18 s5)
		(s10 a35 s1)
		(s10 a21 s5)
		(s10 a36 s9)
	}
);
