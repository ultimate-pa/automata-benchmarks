// Testfile dumped by Ultimate at 2017/06/11 23:20:12
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 },
	initialStates = {s3 },
	finalStates = {s0 s1 s3 s6 s7 s10 s12 s13 s16 s17 s18 s20 s21 s22 s23 s26 s27 s30 s31 s32 s35 },
	transitions = {
		(s0 a14 s1)
		(s0 a14 s31)
		(s1 a15 s34)
		(s2 a14 s31)
		(s2 a14 s33)
		(s3 a0 s26)
		(s4 a33 s2)
		(s5 a32 s4)
		(s6 a25 s7)
		(s7 a28 s27)
		(s8 a25 s9)
		(s9 a27 s28)
		(s9 a28 s29)
		(s10 a24 s6)
		(s11 a24 s8)
		(s12 a18 s13)
		(s13 a19 s27)
		(s14 a18 s15)
		(s15 a19 s29)
		(s16 a4 s17)
		(s16 a7 s17)
		(s17 a8 s20)
		(s17 a9 s20)
		(s18 a23 s10)
		(s19 a23 s11)
		(s20 a10 s21)
		(s21 a11 s30)
		(s22 a21 s23)
		(s23 a22 s18)
		(s24 a21 s25)
		(s25 a22 s19)
		(s26 a2 s16)
		(s27 a20 s22)
		(s28 a30 s5)
		(s29 a20 s24)
		(s30 a12 s35)
		(s31 a15 s32)
		(s32 a17 s12)
		(s33 a15 s34)
		(s34 a17 s14)
		(s35 a13 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:20:14
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s6 },
	finalStates = {s5 s7 s9 },
	transitions = {
		(s0 a12 s0)
		(s0 a13 s10)
		(s0 a20 s0)
		(s0 a21 s1)
		(s0 a30 s1)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a24 s1)
		(s0 a17 s10)
		(s0 a19 s0)
		(s1 a27 s1)
		(s1 a28 s9)
		(s1 a22 s1)
		(s1 a30 s1)
		(s1 a14 s1)
		(s1 a15 s1)
		(s1 a23 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a32 s1)
		(s1 a17 s10)
		(s1 a33 s1)
		(s2 a27 s2)
		(s2 a28 s10)
		(s2 a22 s2)
		(s2 a30 s2)
		(s2 a14 s2)
		(s2 a15 s2)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a32 s2)
		(s2 a17 s10)
		(s2 a33 s2)
		(s3 a10 s4)
		(s3 a10 s9)
		(s4 a20 s4)
		(s4 a20 s9)
		(s4 a21 s4)
		(s4 a21 s5)
		(s4 a22 s4)
		(s4 a22 s9)
		(s4 a23 s4)
		(s4 a23 s9)
		(s4 a24 s4)
		(s4 a24 s5)
		(s4 a25 s4)
		(s4 a25 s9)
		(s4 a11 s4)
		(s4 a11 s9)
		(s4 a27 s4)
		(s4 a27 s9)
		(s4 a12 s4)
		(s4 a12 s9)
		(s4 a13 s4)
		(s4 a13 s9)
		(s4 a28 s4)
		(s4 a28 s9)
		(s4 a14 s4)
		(s4 a14 s9)
		(s4 a30 s4)
		(s4 a30 s5)
		(s4 a15 s4)
		(s4 a15 s9)
		(s4 a32 s4)
		(s4 a32 s9)
		(s4 a17 s4)
		(s4 a17 s9)
		(s4 a18 s4)
		(s4 a18 s9)
		(s4 a33 s4)
		(s4 a33 s9)
		(s4 a19 s4)
		(s4 a19 s9)
		(s5 a22 s1)
		(s5 a25 s1)
		(s5 a32 s1)
		(s6 a0 s6)
		(s6 a0 s7)
		(s6 a2 s6)
		(s6 a2 s7)
		(s6 a4 s6)
		(s6 a4 s7)
		(s6 a7 s6)
		(s6 a7 s7)
		(s6 a8 s3)
		(s6 a8 s7)
		(s6 a9 s3)
		(s6 a9 s7)
		(s7 a2 s8)
		(s7 a4 s8)
		(s7 a7 s8)
		(s7 a8 s8)
		(s7 a9 s8)
		(s8 a4 s8)
		(s8 a7 s8)
		(s8 a8 s8)
		(s8 a9 s8)
		(s9 a20 s0)
		(s9 a21 s1)
		(s9 a23 s0)
		(s9 a24 s1)
		(s9 a11 s0)
		(s9 a27 s0)
		(s9 a12 s0)
		(s9 a13 s10)
		(s9 a28 s11)
		(s9 a14 s0)
		(s9 a30 s1)
		(s9 a15 s0)
		(s9 a17 s10)
		(s9 a18 s0)
		(s9 a33 s0)
		(s9 a19 s0)
		(s10 a20 s10)
		(s10 a21 s2)
		(s10 a14 s10)
		(s10 a15 s10)
		(s10 a17 s10)
		(s10 a18 s10)
		(s10 a19 s10)
		(s11 a20 s11)
		(s11 a21 s5)
	}
);
