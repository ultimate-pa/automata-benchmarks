// Testfile dumped by Ultimate at 2017/06/12 01:02:22
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s19 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	transitions = {
		(s0 a18 s1)
		(s1 a19 s2)
		(s2 a21 s3)
		(s3 a22 s18)
		(s4 a7 s5)
		(s5 a8 s6)
		(s6 a9 s9)
		(s7 a1 s8)
		(s8 a3 s13)
		(s9 a10 s10)
		(s10 a11 s15)
		(s11 a24 s12)
		(s12 a25 s9)
		(s13 a4 s14)
		(s14 a5 s4)
		(s15 a13 s18)
		(s16 a15 s17)
		(s17 a16 s11)
		(s17 a17 s0)
		(s18 a14 s16)
		(s19 a0 s7)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:02:24
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 },
	initialStates = {s8 },
	finalStates = {s1 s6 s9 },
	transitions = {
		(s0 a11 s2)
		(s1 a16 s3)
		(s1 a17 s3)
		(s1 a18 s4)
		(s1 a4 s3)
		(s1 a5 s3)
		(s1 a21 s3)
		(s1 a22 s3)
		(s1 a8 s3)
		(s1 a24 s3)
		(s1 a25 s5)
		(s1 a10 s3)
		(s1 a11 s4)
		(s1 a14 s3)
		(s1 a15 s3)
		(s2 a24 s2)
		(s2 a16 s2)
		(s2 a25 s9)
		(s2 a17 s2)
		(s2 a18 s2)
		(s2 a19 s2)
		(s2 a13 s2)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a14 s2)
		(s2 a15 s2)
		(s3 a24 s3)
		(s3 a16 s3)
		(s3 a25 s5)
		(s3 a17 s3)
		(s3 a18 s4)
		(s3 a11 s4)
		(s3 a5 s3)
		(s3 a22 s3)
		(s3 a14 s3)
		(s3 a15 s3)
		(s4 a24 s4)
		(s4 a16 s4)
		(s4 a25 s5)
		(s4 a17 s4)
		(s4 a18 s4)
		(s4 a19 s4)
		(s4 a13 s4)
		(s4 a21 s4)
		(s4 a22 s4)
		(s4 a14 s4)
		(s4 a15 s4)
		(s5 a10 s5)
		(s5 a11 s7)
		(s6 a19 s4)
		(s6 a13 s4)
		(s7 a24 s7)
		(s7 a16 s7)
		(s7 a25 s5)
		(s7 a17 s7)
		(s7 a18 s7)
		(s7 a19 s7)
		(s7 a13 s7)
		(s7 a21 s7)
		(s7 a22 s7)
		(s7 a14 s7)
		(s7 a15 s7)
		(s8 a0 s1)
		(s8 a0 s8)
		(s8 a1 s1)
		(s8 a1 s8)
		(s8 a3 s1)
		(s8 a3 s10)
		(s9 a10 s0)
		(s10 a16 s1)
		(s10 a16 s10)
		(s10 a17 s1)
		(s10 a17 s10)
		(s10 a18 s6)
		(s10 a18 s10)
		(s10 a19 s1)
		(s10 a19 s10)
		(s10 a4 s1)
		(s10 a4 s10)
		(s10 a5 s1)
		(s10 a5 s10)
		(s10 a21 s1)
		(s10 a21 s10)
		(s10 a22 s1)
		(s10 a22 s10)
		(s10 a7 s1)
		(s10 a7 s10)
		(s10 a8 s1)
		(s10 a8 s10)
		(s10 a9 s9)
		(s10 a9 s10)
		(s10 a24 s1)
		(s10 a24 s10)
		(s10 a25 s1)
		(s10 a25 s10)
		(s10 a10 s1)
		(s10 a10 s10)
		(s10 a11 s6)
		(s10 a11 s10)
		(s10 a13 s1)
		(s10 a13 s10)
		(s10 a14 s1)
		(s10 a14 s10)
		(s10 a15 s1)
		(s10 a15 s10)
	}
);
