// Testfile dumped by Ultimate at 2017/06/12 01:44:37
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 },
	initialStates = {s19 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 },
	transitions = {
		(s0 a10 s1)
		(s1 a11 s18)
		(s2 a15 s3)
		(s2 a16 s4)
		(s3 a22 s8)
		(s4 a17 s9)
		(s5 a13 s2)
		(s6 a1 s7)
		(s7 a2 s11)
		(s7 a3 s11)
		(s8 a23 s10)
		(s9 a18 s13)
		(s10 a5 s12)
		(s11 a4 s10)
		(s12 a7 s14)
		(s13 a19 s16)
		(s14 a8 s15)
		(s15 a9 s0)
		(s16 a20 s17)
		(s17 a10 s20)
		(s18 a12 s5)
		(s19 a0 s6)
		(s20 a11 s18)
		(s20 a14 s2)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:44:38
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s0 },
	finalStates = {s2 s5 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s2)
		(s0 a1 s0)
		(s0 a1 s2)
		(s0 a15 s0)
		(s0 a15 s2)
		(s0 a2 s0)
		(s0 a2 s2)
		(s0 a16 s0)
		(s0 a16 s2)
		(s0 a17 s0)
		(s0 a17 s2)
		(s0 a3 s0)
		(s0 a3 s2)
		(s0 a18 s0)
		(s0 a18 s2)
		(s0 a19 s0)
		(s0 a19 s2)
		(s0 a4 s0)
		(s0 a4 s2)
		(s0 a20 s0)
		(s0 a20 s2)
		(s0 a5 s0)
		(s0 a5 s2)
		(s0 a22 s0)
		(s0 a22 s2)
		(s0 a23 s0)
		(s0 a23 s2)
		(s0 a7 s0)
		(s0 a7 s5)
		(s0 a8 s0)
		(s0 a8 s2)
		(s0 a9 s0)
		(s0 a9 s2)
		(s0 a10 s0)
		(s0 a10 s2)
		(s0 a11 s0)
		(s0 a11 s2)
		(s0 a12 s0)
		(s0 a12 s2)
		(s0 a13 s0)
		(s0 a13 s2)
		(s0 a14 s0)
		(s0 a14 s2)
		(s1 a15 s1)
		(s1 a2 s1)
		(s1 a16 s1)
		(s1 a17 s1)
		(s1 a3 s1)
		(s1 a18 s1)
		(s1 a19 s1)
		(s1 a20 s1)
		(s1 a22 s1)
		(s1 a23 s4)
		(s1 a7 s3)
		(s1 a10 s1)
		(s1 a11 s1)
		(s1 a12 s1)
		(s1 a13 s1)
		(s1 a14 s1)
		(s2 a1 s1)
		(s2 a15 s1)
		(s2 a2 s1)
		(s2 a16 s1)
		(s2 a17 s1)
		(s2 a3 s1)
		(s2 a18 s1)
		(s2 a19 s1)
		(s2 a20 s1)
		(s2 a5 s1)
		(s2 a22 s1)
		(s2 a23 s4)
		(s2 a7 s3)
		(s2 a9 s1)
		(s2 a10 s1)
		(s2 a11 s1)
		(s2 a12 s1)
		(s2 a13 s1)
		(s2 a14 s1)
		(s3 a15 s3)
		(s3 a16 s3)
		(s3 a17 s3)
		(s3 a18 s3)
		(s3 a19 s3)
		(s3 a20 s3)
		(s3 a22 s3)
		(s3 a23 s2)
		(s3 a8 s3)
		(s3 a9 s3)
		(s3 a10 s3)
		(s3 a11 s3)
		(s3 a12 s3)
		(s3 a13 s3)
		(s3 a14 s3)
		(s4 a7 s5)
		(s4 a5 s4)
		(s5 a8 s3)
	}
);
