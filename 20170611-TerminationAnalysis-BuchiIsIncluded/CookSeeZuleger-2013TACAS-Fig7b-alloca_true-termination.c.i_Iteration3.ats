// Testfile dumped by Ultimate at 2017/06/12 01:08:55
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 },
	initialStates = {s27 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 },
	transitions = {
		(s0 a32 s1)
		(s1 a2 s10)
		(s2 a5 s3)
		(s3 a6 s20)
		(s4 a19 s1)
		(s5 a23 s6)
		(s6 a24 s12)
		(s7 a30 s8)
		(s8 a31 s0)
		(s9 a4 s2)
		(s10 a3 s9)
		(s11 a18 s4)
		(s12 a25 s21)
		(s13 a11 s14)
		(s14 a12 s26)
		(s15 a28 s16)
		(s16 a29 s7)
		(s17 a1 s1)
		(s18 a27 s15)
		(s18 a21 s19)
		(s19 a22 s5)
		(s20 a7 s25)
		(s21 a26 s1)
		(s22 a10 s13)
		(s23 a16 s24)
		(s23 a20 s18)
		(s24 a17 s11)
		(s25 a9 s22)
		(s26 a15 s23)
		(s27 a0 s17)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:08:56
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 },
	initialStates = {s6 },
	finalStates = {s0 s11 s17 s19 },
	transitions = {
		(s0 a18 s5)
		(s1 a18 s5)
		(s2 a27 s2)
		(s2 a16 s2)
		(s2 a28 s2)
		(s2 a17 s18)
		(s2 a29 s7)
		(s2 a20 s2)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a23 s7)
		(s3 a5 s8)
		(s4 a18 s7)
		(s5 a19 s5)
		(s5 a2 s5)
		(s5 a3 s12)
		(s6 a0 s6)
		(s6 a0 s11)
		(s6 a1 s6)
		(s6 a1 s11)
		(s6 a2 s6)
		(s6 a2 s11)
		(s6 a3 s6)
		(s6 a3 s17)
		(s6 a4 s6)
		(s6 a4 s11)
		(s6 a5 s6)
		(s6 a5 s11)
		(s6 a6 s6)
		(s6 a6 s11)
		(s6 a7 s6)
		(s6 a7 s11)
		(s6 a9 s6)
		(s6 a9 s11)
		(s6 a10 s6)
		(s6 a10 s11)
		(s6 a11 s6)
		(s6 a11 s11)
		(s6 a12 s6)
		(s6 a12 s11)
		(s6 a15 s6)
		(s6 a15 s11)
		(s6 a16 s6)
		(s6 a16 s11)
		(s6 a17 s0)
		(s6 a17 s6)
		(s6 a18 s6)
		(s6 a18 s11)
		(s6 a19 s6)
		(s6 a19 s11)
		(s6 a20 s6)
		(s6 a20 s11)
		(s6 a21 s6)
		(s6 a21 s11)
		(s6 a22 s6)
		(s6 a22 s11)
		(s6 a23 s6)
		(s6 a23 s11)
		(s6 a24 s6)
		(s6 a24 s11)
		(s6 a25 s6)
		(s6 a25 s11)
		(s6 a26 s6)
		(s6 a26 s11)
		(s6 a27 s6)
		(s6 a27 s11)
		(s6 a28 s6)
		(s6 a28 s11)
		(s6 a29 s6)
		(s6 a29 s11)
		(s6 a30 s6)
		(s6 a30 s11)
		(s6 a31 s6)
		(s6 a31 s11)
		(s6 a32 s6)
		(s6 a32 s11)
		(s7 a30 s7)
		(s7 a31 s7)
		(s7 a19 s7)
		(s7 a32 s7)
		(s7 a2 s7)
		(s7 a3 s14)
		(s7 a24 s7)
		(s7 a25 s7)
		(s7 a26 s7)
		(s8 a9 s8)
		(s8 a10 s8)
		(s8 a11 s8)
		(s8 a12 s8)
		(s8 a6 s8)
		(s8 a7 s8)
		(s8 a15 s2)
		(s9 a16 s9)
		(s9 a17 s1)
		(s9 a2 s9)
		(s9 a20 s9)
		(s9 a3 s15)
		(s9 a21 s9)
		(s9 a22 s9)
		(s9 a6 s9)
		(s9 a7 s9)
		(s9 a27 s9)
		(s9 a9 s9)
		(s9 a28 s9)
		(s9 a10 s9)
		(s9 a11 s9)
		(s9 a12 s9)
		(s9 a15 s9)
		(s10 a9 s10)
		(s10 a10 s10)
		(s10 a11 s10)
		(s10 a12 s10)
		(s10 a6 s10)
		(s10 a7 s10)
		(s10 a15 s16)
		(s11 a16 s9)
		(s11 a17 s1)
		(s11 a19 s9)
		(s11 a2 s9)
		(s11 a20 s9)
		(s11 a3 s15)
		(s11 a21 s9)
		(s11 a22 s9)
		(s11 a5 s9)
		(s11 a6 s9)
		(s11 a24 s9)
		(s11 a7 s9)
		(s11 a26 s9)
		(s11 a27 s9)
		(s11 a9 s9)
		(s11 a28 s9)
		(s11 a30 s9)
		(s11 a10 s9)
		(s11 a11 s9)
		(s11 a32 s9)
		(s11 a12 s9)
		(s11 a15 s9)
		(s12 a4 s13)
		(s13 a5 s19)
		(s14 a4 s20)
		(s15 a4 s3)
		(s16 a27 s16)
		(s16 a16 s16)
		(s16 a28 s16)
		(s16 a17 s4)
		(s16 a29 s7)
		(s16 a20 s16)
		(s16 a21 s16)
		(s16 a22 s16)
		(s16 a23 s7)
		(s17 a4 s3)
		(s18 a18 s11)
		(s19 a6 s8)
		(s20 a5 s10)
	}
);
