// Testfile dumped by Ultimate at 2017/06/12 01:38:06
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 },
	initialStates = {s3 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 },
	transitions = {
		(s0 a7 s17)
		(s1 a10 s6)
		(s2 a10 s7)
		(s3 a0 s13)
		(s4 a23 s0)
		(s5 a18 s15)
		(s5 a22 s4)
		(s6 a11 s5)
		(s6 a12 s9)
		(s7 a11 s20)
		(s7 a12 s9)
		(s8 a12 s9)
		(s9 a13 s10)
		(s10 a14 s19)
		(s11 a4 s12)
		(s11 a5 s12)
		(s12 a6 s0)
		(s13 a1 s14)
		(s14 a2 s11)
		(s14 a3 s11)
		(s15 a19 s16)
		(s16 a20 s21)
		(s17 a9 s18)
		(s18 a10 s8)
		(s19 a15 s1)
		(s19 a16 s2)
		(s20 a18 s15)
		(s21 a21 s4)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:38:07
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s3 },
	finalStates = {s1 s5 },
	transitions = {
		(s0 a11 s0)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s0 a18 s0)
		(s0 a19 s0)
		(s0 a20 s0)
		(s0 a21 s0)
		(s0 a22 s0)
		(s0 a23 s5)
		(s0 a10 s0)
		(s1 a10 s0)
		(s2 a7 s2)
		(s2 a9 s1)
		(s3 a0 s3)
		(s3 a0 s5)
		(s3 a11 s3)
		(s3 a11 s5)
		(s3 a1 s3)
		(s3 a1 s5)
		(s3 a12 s3)
		(s3 a12 s5)
		(s3 a13 s3)
		(s3 a13 s5)
		(s3 a2 s3)
		(s3 a2 s5)
		(s3 a14 s3)
		(s3 a14 s5)
		(s3 a3 s3)
		(s3 a3 s5)
		(s3 a15 s3)
		(s3 a15 s5)
		(s3 a16 s3)
		(s3 a16 s5)
		(s3 a4 s3)
		(s3 a4 s5)
		(s3 a5 s3)
		(s3 a5 s5)
		(s3 a6 s3)
		(s3 a6 s5)
		(s3 a18 s3)
		(s3 a18 s5)
		(s3 a19 s3)
		(s3 a19 s5)
		(s3 a7 s3)
		(s3 a7 s5)
		(s3 a20 s3)
		(s3 a20 s5)
		(s3 a21 s3)
		(s3 a21 s5)
		(s3 a22 s3)
		(s3 a22 s5)
		(s3 a23 s3)
		(s3 a23 s5)
		(s3 a9 s1)
		(s3 a9 s3)
		(s3 a10 s3)
		(s3 a10 s5)
		(s4 a11 s4)
		(s4 a12 s4)
		(s4 a13 s4)
		(s4 a2 s4)
		(s4 a14 s4)
		(s4 a3 s4)
		(s4 a15 s4)
		(s4 a16 s4)
		(s4 a4 s4)
		(s4 a5 s4)
		(s4 a18 s4)
		(s4 a19 s4)
		(s4 a20 s4)
		(s4 a21 s4)
		(s4 a22 s4)
		(s4 a23 s2)
		(s4 a9 s0)
		(s4 a10 s4)
		(s5 a11 s4)
		(s5 a1 s4)
		(s5 a12 s4)
		(s5 a13 s4)
		(s5 a2 s4)
		(s5 a14 s4)
		(s5 a3 s4)
		(s5 a15 s4)
		(s5 a16 s4)
		(s5 a4 s4)
		(s5 a5 s4)
		(s5 a18 s4)
		(s5 a19 s4)
		(s5 a7 s4)
		(s5 a20 s4)
		(s5 a21 s4)
		(s5 a22 s4)
		(s5 a23 s2)
		(s5 a9 s0)
		(s5 a10 s4)
	}
);
