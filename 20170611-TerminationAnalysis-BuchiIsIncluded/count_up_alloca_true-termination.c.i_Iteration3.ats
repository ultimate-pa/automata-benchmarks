// Testfile dumped by Ultimate at 2017/06/11 23:18:43
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 },
	initialStates = {s16 },
	finalStates = {s0 s1 s2 s3 s6 s8 s9 s10 s11 s12 s13 s14 s16 s18 s19 s20 s21 s22 s23 s24 },
	transitions = {
		(s0 a12 s4)
		(s1 a23 s2)
		(s2 a24 s3)
		(s3 a25 s12)
		(s4 a14 s7)
		(s5 a12 s4)
		(s6 a13 s22)
		(s7 a15 s17)
		(s7 a16 s17)
		(s8 a3 s9)
		(s9 a5 s10)
		(s9 a7 s10)
		(s10 a9 s24)
		(s11 a0 s23)
		(s12 a26 s11)
		(s12 a27 s18)
		(s13 a18 s14)
		(s14 a12 s6)
		(s15 a18 s5)
		(s16 a1 s8)
		(s17 a17 s13)
		(s17 a17 s15)
		(s18 a28 s19)
		(s19 a29 s20)
		(s20 a30 s21)
		(s21 a31 s2)
		(s22 a20 s23)
		(s23 a21 s1)
		(s24 a11 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:18:44
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s1 },
	finalStates = {s3 s4 },
	transitions = {
		(s0 a0 s3)
		(s0 a24 s0)
		(s0 a25 s0)
		(s0 a26 s0)
		(s0 a27 s0)
		(s0 a28 s0)
		(s0 a29 s0)
		(s0 a30 s0)
		(s0 a31 s0)
		(s1 a1 s1)
		(s1 a1 s3)
		(s1 a0 s1)
		(s1 a0 s3)
		(s1 a3 s1)
		(s1 a3 s3)
		(s1 a5 s1)
		(s1 a5 s3)
		(s1 a7 s1)
		(s1 a7 s3)
		(s1 a9 s1)
		(s1 a9 s3)
		(s1 a11 s1)
		(s1 a11 s3)
		(s1 a12 s1)
		(s1 a12 s3)
		(s1 a13 s1)
		(s1 a13 s3)
		(s1 a14 s1)
		(s1 a14 s3)
		(s1 a15 s1)
		(s1 a15 s3)
		(s1 a16 s1)
		(s1 a16 s3)
		(s1 a17 s1)
		(s1 a17 s3)
		(s1 a18 s1)
		(s1 a18 s3)
		(s1 a20 s1)
		(s1 a20 s3)
		(s1 a21 s1)
		(s1 a21 s3)
		(s1 a23 s1)
		(s1 a23 s4)
		(s1 a24 s1)
		(s1 a24 s3)
		(s1 a25 s1)
		(s1 a25 s3)
		(s1 a26 s1)
		(s1 a26 s3)
		(s1 a27 s1)
		(s1 a27 s3)
		(s1 a28 s1)
		(s1 a28 s3)
		(s1 a29 s1)
		(s1 a29 s3)
		(s1 a30 s1)
		(s1 a30 s3)
		(s1 a31 s1)
		(s1 a31 s3)
		(s2 a18 s2)
		(s2 a0 s5)
		(s2 a9 s2)
		(s2 a23 s0)
		(s2 a11 s2)
		(s2 a24 s2)
		(s2 a12 s2)
		(s2 a25 s2)
		(s2 a13 s2)
		(s2 a26 s2)
		(s2 a14 s2)
		(s2 a27 s2)
		(s2 a28 s2)
		(s2 a15 s2)
		(s2 a29 s2)
		(s2 a30 s2)
		(s2 a16 s2)
		(s2 a31 s2)
		(s2 a17 s2)
		(s3 a18 s2)
		(s3 a0 s5)
		(s3 a7 s2)
		(s3 a21 s2)
		(s3 a9 s2)
		(s3 a23 s0)
		(s3 a11 s2)
		(s3 a24 s2)
		(s3 a12 s2)
		(s3 a25 s2)
		(s3 a13 s2)
		(s3 a26 s2)
		(s3 a14 s2)
		(s3 a27 s2)
		(s3 a28 s2)
		(s3 a15 s2)
		(s3 a29 s2)
		(s3 a30 s2)
		(s3 a16 s2)
		(s3 a31 s2)
		(s3 a17 s2)
		(s4 a24 s0)
		(s5 a21 s5)
		(s5 a23 s4)
	}
);
