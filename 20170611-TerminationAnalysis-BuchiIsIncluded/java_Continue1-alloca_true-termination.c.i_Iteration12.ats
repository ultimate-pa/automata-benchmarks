// Testfile dumped by Ultimate at 2017/06/12 01:44:55
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 s107 s108 s109 s110 s111 s112 },
	initialStates = {s68 },
	finalStates = {s35 s36 s39 s40 s41 s42 s43 s44 s47 s50 s51 s52 s53 s54 s55 s56 s58 s59 s60 s63 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 },
	transitions = {
		(s0 a14 s112)
		(s1 a13 s0)
		(s2 a12 s1)
		(s3 a11 s2)
		(s4 a9 s3)
		(s5 a17 s4)
		(s6 a16 s5)
		(s7 a15 s6)
		(s8 a14 s7)
		(s9 a13 s8)
		(s10 a12 s9)
		(s11 a11 s10)
		(s12 a9 s11)
		(s13 a17 s12)
		(s14 a16 s13)
		(s15 a15 s14)
		(s16 a14 s15)
		(s17 a13 s16)
		(s18 a12 s17)
		(s19 a11 s18)
		(s20 a9 s19)
		(s21 a17 s20)
		(s22 a16 s21)
		(s23 a15 s22)
		(s24 a14 s23)
		(s25 a13 s24)
		(s26 a12 s25)
		(s27 a11 s26)
		(s28 a9 s27)
		(s29 a17 s28)
		(s30 a16 s29)
		(s31 a15 s30)
		(s32 a14 s31)
		(s33 a13 s32)
		(s34 a12 s33)
		(s35 a14 s36)
		(s36 a15 s76)
		(s37 a14 s38)
		(s38 a15 s45)
		(s39 a5 s40)
		(s40 a8 s63)
		(s41 a3 s42)
		(s42 a4 s39)
		(s43 a16 s44)
		(s44 a17 s56)
		(s45 a16 s46)
		(s46 a17 s57)
		(s47 a8 s48)
		(s48 a9 s86)
		(s49 a8 s48)
		(s50 a22 s51)
		(s50 a22 s47)
		(s51 a8 s80)
		(s52 a19 s53)
		(s53 a20 s58)
		(s54 a15 s55)
		(s55 a16 s75)
		(s56 a9 s66)
		(s57 a9 s65)
		(s58 a21 s69)
		(s59 a12 s60)
		(s60 a13 s35)
		(s61 a12 s62)
		(s62 a13 s37)
		(s63 a9 s64)
		(s64 a11 s61)
		(s65 a11 s34)
		(s66 a11 s67)
		(s67 a12 s78)
		(s68 a0 s41)
		(s69 a22 s49)
		(s69 a22 s70)
		(s70 a8 s56)
		(s71 a21 s50)
		(s72 a20 s71)
		(s73 a19 s72)
		(s74 a18 s52)
		(s75 a18 s73)
		(s76 a16 s74)
		(s77 a14 s54)
		(s78 a13 s77)
		(s79 a11 s59)
		(s80 a9 s79)
		(s81 a15 s82)
		(s81 a15 s43)
		(s82 a16 s87)
		(s83 a14 s81)
		(s84 a13 s83)
		(s85 a12 s84)
		(s86 a11 s85)
		(s87 a17 s48)
		(s88 a15 s82)
		(s89 a14 s88)
		(s90 a13 s89)
		(s91 a12 s90)
		(s92 a11 s91)
		(s93 a9 s92)
		(s94 a17 s93)
		(s95 a16 s94)
		(s96 a15 s95)
		(s97 a14 s96)
		(s98 a13 s97)
		(s99 a12 s98)
		(s100 a11 s99)
		(s101 a9 s100)
		(s102 a17 s101)
		(s103 a16 s102)
		(s104 a15 s103)
		(s105 a14 s104)
		(s106 a13 s105)
		(s107 a12 s106)
		(s108 a11 s107)
		(s109 a9 s108)
		(s110 a17 s109)
		(s111 a16 s110)
		(s112 a15 s111)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:45:13
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 },
	initialStates = {s22 },
	finalStates = {s4 s15 s26 s27 s46 s49 s60 },
	transitions = {
		(s0 a13 s8)
		(s1 a13 s11)
		(s2 a17 s12)
		(s2 a18 s57)
		(s3 a13 s55)
		(s4 a17 s44)
		(s4 a18 s29)
		(s5 a13 s58)
		(s6 a17 s44)
		(s6 a18 s29)
		(s7 a17 s15)
		(s7 a18 s47)
		(s8 a14 s10)
		(s9 a17 s61)
		(s9 a18 s49)
		(s10 a12 s0)
		(s10 a15 s10)
		(s10 a16 s33)
		(s10 a8 s10)
		(s10 a19 s40)
		(s10 a9 s10)
		(s10 a22 s10)
		(s10 a11 s10)
		(s11 a14 s45)
		(s12 a12 s28)
		(s12 a5 s12)
		(s12 a8 s12)
		(s12 a9 s12)
		(s12 a11 s12)
		(s13 a13 s52)
		(s14 a14 s45)
		(s15 a5 s61)
		(s15 a9 s44)
		(s16 a15 s16)
		(s16 a16 s7)
		(s17 a14 s26)
		(s18 a15 s18)
		(s18 a16 s9)
		(s19 a21 s25)
		(s20 a21 s29)
		(s21 a21 s57)
		(s22 a0 s22)
		(s22 a0 s26)
		(s22 a3 s22)
		(s22 a3 s26)
		(s22 a4 s22)
		(s22 a4 s15)
		(s22 a5 s22)
		(s22 a5 s26)
		(s22 a8 s22)
		(s22 a8 s26)
		(s22 a9 s22)
		(s22 a9 s26)
		(s22 a11 s22)
		(s22 a11 s26)
		(s22 a12 s22)
		(s22 a12 s27)
		(s22 a13 s22)
		(s22 a13 s26)
		(s22 a14 s22)
		(s22 a14 s26)
		(s22 a15 s22)
		(s22 a15 s26)
		(s22 a16 s22)
		(s22 a16 s4)
		(s22 a17 s22)
		(s22 a17 s26)
		(s22 a18 s22)
		(s22 a18 s26)
		(s22 a19 s22)
		(s22 a19 s60)
		(s22 a20 s22)
		(s22 a20 s26)
		(s22 a21 s22)
		(s22 a21 s26)
		(s22 a22 s22)
		(s22 a22 s26)
		(s23 a13 s36)
		(s24 a21 s47)
		(s25 a12 s23)
		(s25 a16 s6)
		(s25 a8 s25)
		(s25 a9 s25)
		(s25 a22 s25)
		(s25 a11 s25)
		(s26 a12 s23)
		(s26 a3 s43)
		(s26 a14 s43)
		(s26 a4 s12)
		(s26 a15 s25)
		(s26 a16 s6)
		(s26 a8 s25)
		(s26 a9 s25)
		(s26 a19 s56)
		(s26 a21 s43)
		(s26 a22 s25)
		(s26 a11 s25)
		(s27 a13 s36)
		(s28 a13 s37)
		(s29 a12 s38)
		(s29 a8 s29)
		(s29 a19 s31)
		(s29 a9 s29)
		(s29 a22 s29)
		(s29 a11 s29)
		(s30 a13 s35)
		(s31 a20 s20)
		(s32 a17 s46)
		(s32 a18 s42)
		(s33 a17 s46)
		(s33 a18 s10)
		(s34 a17 s46)
		(s34 a18 s45)
		(s35 a14 s18)
		(s36 a14 s16)
		(s37 a14 s43)
		(s38 a13 s54)
		(s39 a20 s51)
		(s40 a20 s53)
		(s41 a20 s50)
		(s42 a12 s63)
		(s42 a15 s42)
		(s42 a16 s32)
		(s42 a8 s42)
		(s42 a19 s39)
		(s42 a9 s42)
		(s42 a22 s42)
		(s42 a11 s42)
		(s43 a12 s13)
		(s43 a4 s12)
		(s43 a15 s43)
		(s43 a16 s2)
		(s43 a8 s43)
		(s43 a9 s43)
		(s43 a22 s43)
		(s43 a11 s43)
		(s44 a12 s48)
		(s44 a9 s44)
		(s44 a11 s44)
		(s45 a12 s1)
		(s45 a15 s45)
		(s45 a16 s34)
		(s45 a8 s45)
		(s45 a19 s41)
		(s45 a9 s45)
		(s45 a22 s45)
		(s45 a11 s45)
		(s46 a8 s46)
		(s46 a9 s46)
		(s46 a11 s46)
		(s46 a12 s46)
		(s46 a13 s46)
		(s46 a14 s46)
		(s46 a15 s46)
		(s46 a16 s46)
		(s46 a17 s46)
		(s46 a18 s46)
		(s46 a19 s46)
		(s46 a20 s46)
		(s46 a21 s46)
		(s46 a22 s46)
		(s47 a12 s3)
		(s47 a8 s47)
		(s47 a19 s62)
		(s47 a9 s47)
		(s47 a22 s47)
		(s47 a11 s47)
		(s48 a13 s17)
		(s49 a19 s31)
		(s50 a21 s45)
		(s51 a21 s42)
		(s52 a14 s43)
		(s53 a21 s10)
		(s54 a14 s42)
		(s55 a14 s45)
		(s56 a20 s19)
		(s57 a12 s5)
		(s57 a8 s57)
		(s57 a19 s59)
		(s57 a9 s57)
		(s57 a22 s57)
		(s57 a11 s57)
		(s58 a14 s10)
		(s59 a20 s21)
		(s60 a20 s19)
		(s61 a12 s30)
		(s61 a8 s61)
		(s61 a9 s61)
		(s61 a11 s61)
		(s62 a20 s24)
		(s63 a13 s14)
	}
);
