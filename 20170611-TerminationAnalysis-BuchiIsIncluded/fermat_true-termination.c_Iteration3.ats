// Testfile dumped by Ultimate at 2017/06/12 03:33:17
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 },
	initialStates = {s9 },
	finalStates = {s0 s4 s5 s7 s9 s10 s11 s16 },
	transitions = {
		(s0 a7 s1)
		(s1 a10 s34)
		(s1 a11 s33)
		(s2 a7 s3)
		(s3 a11 s6)
		(s4 a11 s5)
		(s5 a3 s7)
		(s6 a3 s7)
		(s6 a3 s8)
		(s7 a2 s11)
		(s8 a2 s2)
		(s9 a0 s10)
		(s10 a2 s2)
		(s10 a2 s37)
		(s10 a2 s38)
		(s10 a2 s11)
		(s11 a7 s4)
		(s12 a7 s4)
		(s12 a7 s13)
		(s13 a11 s33)
		(s14 a2 s15)
		(s15 a7 s1)
		(s15 a7 s4)
		(s16 a2 s15)
		(s17 a2 s18)
		(s17 a2 s19)
		(s17 a2 s11)
		(s17 a2 s0)
		(s18 a7 s26)
		(s19 a7 s24)
		(s20 a1 s17)
		(s21 a3 s22)
		(s21 a3 s16)
		(s22 a2 s30)
		(s23 a10 s20)
		(s23 a11 s6)
		(s24 a10 s20)
		(s24 a11 s25)
		(s25 a1 s17)
		(s25 a3 s7)
		(s25 a3 s8)
		(s26 a10 s27)
		(s26 a11 s21)
		(s27 a3 s22)
		(s27 a3 s7)
		(s27 a3 s8)
		(s27 a3 s16)
		(s28 a7 s23)
		(s28 a7 s29)
		(s29 a10 s35)
		(s29 a11 s32)
		(s30 a7 s23)
		(s30 a7 s26)
		(s31 a2 s28)
		(s32 a3 s14)
		(s32 a3 s31)
		(s33 a3 s14)
		(s34 a3 s7)
		(s34 a3 s14)
		(s35 a3 s7)
		(s35 a3 s8)
		(s35 a3 s14)
		(s35 a3 s31)
		(s36 a2 s12)
		(s37 a7 s3)
		(s37 a7 s44)
		(s38 a7 s4)
		(s38 a7 s45)
		(s39 a3 s36)
		(s40 a11 s32)
		(s41 a7 s3)
		(s41 a7 s40)
		(s42 a2 s41)
		(s43 a3 s36)
		(s43 a3 s42)
		(s44 a11 s43)
		(s45 a11 s39)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 03:33:23
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s4 },
	finalStates = {s0 s2 },
	transitions = {
		(s0 a1 s5)
		(s0 a2 s5)
		(s0 a3 s5)
		(s1 a2 s1)
		(s1 a7 s3)
		(s2 a1 s1)
		(s2 a2 s1)
		(s2 a3 s1)
		(s2 a7 s3)
		(s2 a11 s5)
		(s3 a11 s0)
		(s4 a0 s0)
		(s4 a0 s4)
		(s4 a1 s2)
		(s4 a1 s4)
		(s4 a2 s2)
		(s4 a2 s4)
		(s4 a3 s2)
		(s4 a3 s4)
		(s4 a7 s2)
		(s4 a7 s4)
		(s4 a10 s2)
		(s4 a10 s4)
		(s4 a11 s0)
		(s4 a11 s4)
		(s5 a1 s5)
		(s5 a2 s5)
		(s5 a3 s5)
		(s5 a7 s2)
	}
);
