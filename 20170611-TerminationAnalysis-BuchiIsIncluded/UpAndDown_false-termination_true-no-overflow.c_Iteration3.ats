// Testfile dumped by Ultimate at 2017/06/12 03:34:16
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 },
	initialStates = {s0 },
	finalStates = {s0 s1 s2 s3 s16 s17 s18 s19 s20 s21 s22 s23 s26 s33 s34 s35 s36 s39 s40 s41 s42 s43 s44 s45 s46 s47 s50 s52 s53 s54 s55 s56 s57 s58 s59 s60 s62 s63 s64 s68 s69 s71 s72 },
	transitions = {
		(s0 a0 s1)
		(s1 a4 s20)
		(s1 a4 s15)
		(s2 a6 s68)
		(s3 a6 s47)
		(s4 a4 s5)
		(s4 a4 s6)
		(s5 a6 s37)
		(s6 a6 s61)
		(s7 a6 s70)
		(s8 a4 s51)
		(s8 a4 s15)
		(s9 a11 s10)
		(s9 a12 s11)
		(s10 a4 s20)
		(s10 a4 s15)
		(s11 a4 s32)
		(s11 a4 s31)
		(s12 a9 s9)
		(s12 a10 s67)
		(s13 a7 s14)
		(s13 a8 s12)
		(s14 a10 s24)
		(s15 a6 s13)
		(s16 a6 s13)
		(s17 a4 s16)
		(s17 a4 s18)
		(s18 a6 s33)
		(s19 a11 s72)
		(s19 a12 s17)
		(s20 a6 s39)
		(s21 a11 s22)
		(s21 a12 s1)
		(s22 a4 s2)
		(s22 a4 s50)
		(s23 a10 s19)
		(s24 a11 s4)
		(s25 a12 s11)
		(s26 a10 s21)
		(s27 a9 s25)
		(s28 a9 s63)
		(s28 a10 s25)
		(s29 a8 s27)
		(s30 a8 s28)
		(s31 a6 s29)
		(s32 a6 s30)
		(s33 a7 s26)
		(s33 a8 s34)
		(s34 a9 s55)
		(s34 a10 s21)
		(s35 a4 s18)
		(s36 a11 s72)
		(s36 a12 s35)
		(s37 a7 s14)
		(s37 a8 s14)
		(s38 a10 s73)
		(s39 a7 s23)
		(s39 a8 s40)
		(s40 a9 s63)
		(s40 a10 s19)
		(s41 a4 s20)
		(s42 a11 s22)
		(s42 a12 s41)
		(s43 a4 s58)
		(s43 a4 s59)
		(s44 a10 s36)
		(s45 a10 s42)
		(s46 a7 s44)
		(s46 a8 s44)
		(s47 a7 s45)
		(s47 a8 s45)
		(s48 a7 s38)
		(s48 a8 s49)
		(s49 a9 s63)
		(s49 a10 s73)
		(s50 a6 s46)
		(s51 a6 s48)
		(s52 a11 s22)
		(s52 a12 s53)
		(s53 a4 s7)
		(s53 a4 s57)
		(s54 a9 s55)
		(s54 a10 s52)
		(s55 a12 s53)
		(s56 a8 s54)
		(s57 a6 s60)
		(s58 a6 s56)
		(s59 a6 s70)
		(s60 a8 s62)
		(s61 a7 s38)
		(s61 a8 s38)
		(s62 a9 s63)
		(s62 a10 s64)
		(s63 a12 s43)
		(s64 a11 s72)
		(s64 a12 s43)
		(s65 a9 s66)
		(s65 a10 s67)
		(s66 a11 s10)
		(s66 a12 s43)
		(s67 a11 s8)
		(s68 a7 s69)
		(s68 a8 s69)
		(s69 a10 s71)
		(s70 a8 s65)
		(s71 a11 s72)
		(s72 a4 s2)
		(s72 a4 s3)
		(s73 a11 s72)
		(s73 a12 s74)
		(s74 a4 s15)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 03:34:17
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 },
	initialStates = {s0 },
	finalStates = {s2 s5 s6 s12 s16 s17 s20 s29 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s2)
		(s0 a9 s29)
		(s0 a9 s0)
		(s0 a4 s0)
		(s0 a4 s2)
		(s0 a10 s0)
		(s0 a10 s2)
		(s0 a11 s0)
		(s0 a11 s2)
		(s0 a6 s0)
		(s0 a6 s5)
		(s0 a12 s0)
		(s0 a12 s2)
		(s0 a7 s0)
		(s0 a7 s12)
		(s0 a8 s0)
		(s0 a8 s17)
		(s1 a6 s8)
		(s2 a4 s1)
		(s2 a11 s4)
		(s2 a6 s8)
		(s2 a12 s24)
		(s3 a4 s3)
		(s3 a6 s3)
		(s3 a7 s11)
		(s3 a8 s15)
		(s4 a4 s4)
		(s4 a6 s3)
		(s5 a7 s14)
		(s5 a8 s21)
		(s6 a9 s6)
		(s6 a4 s6)
		(s6 a10 s6)
		(s6 a11 s6)
		(s6 a6 s6)
		(s6 a12 s6)
		(s6 a7 s6)
		(s6 a8 s6)
		(s7 a10 s7)
		(s7 a11 s19)
		(s7 a12 s9)
		(s8 a7 s14)
		(s8 a8 s21)
		(s9 a9 s29)
		(s9 a4 s9)
		(s9 a10 s9)
		(s9 a11 s25)
		(s9 a6 s9)
		(s9 a12 s34)
		(s9 a7 s6)
		(s9 a8 s9)
		(s10 a4 s10)
		(s10 a6 s6)
		(s11 a10 s11)
		(s11 a11 s26)
		(s11 a12 s15)
		(s12 a10 s14)
		(s13 a4 s13)
		(s13 a6 s6)
		(s14 a10 s14)
		(s14 a11 s10)
		(s14 a12 s16)
		(s15 a9 s28)
		(s15 a4 s15)
		(s15 a10 s15)
		(s15 a11 s3)
		(s15 a6 s15)
		(s15 a12 s22)
		(s15 a7 s6)
		(s15 a8 s15)
		(s16 a4 s21)
		(s17 a9 s30)
		(s17 a10 s18)
		(s18 a11 s4)
		(s18 a12 s24)
		(s19 a4 s19)
		(s19 a6 s6)
		(s20 a4 s23)
		(s21 a9 s30)
		(s21 a10 s33)
		(s21 a6 s21)
		(s21 a7 s6)
		(s21 a8 s21)
		(s22 a4 s22)
		(s22 a6 s28)
		(s23 a6 s30)
		(s24 a4 s24)
		(s24 a6 s5)
		(s25 a4 s25)
		(s25 a6 s25)
		(s25 a7 s7)
		(s25 a8 s9)
		(s26 a4 s26)
		(s26 a6 s6)
		(s27 a9 s30)
		(s27 a10 s27)
		(s27 a11 s36)
		(s27 a12 s32)
		(s27 a7 s6)
		(s27 a8 s27)
		(s28 a9 s28)
		(s28 a10 s28)
		(s28 a11 s15)
		(s28 a12 s22)
		(s28 a7 s6)
		(s28 a8 s28)
		(s29 a11 s36)
		(s29 a12 s20)
		(s30 a9 s30)
		(s30 a10 s37)
		(s30 a11 s36)
		(s30 a12 s20)
		(s30 a7 s6)
		(s30 a8 s30)
		(s31 a4 s31)
		(s31 a6 s31)
		(s31 a7 s35)
		(s31 a8 s36)
		(s32 a4 s32)
		(s32 a6 s27)
		(s33 a11 s25)
		(s33 a12 s20)
		(s34 a4 s34)
		(s34 a6 s38)
		(s35 a10 s35)
		(s35 a11 s13)
		(s35 a12 s36)
		(s36 a9 s30)
		(s36 a4 s36)
		(s36 a10 s36)
		(s36 a11 s31)
		(s36 a6 s36)
		(s36 a12 s32)
		(s36 a7 s6)
		(s36 a8 s36)
		(s37 a11 s9)
		(s37 a12 s20)
		(s38 a9 s29)
		(s38 a10 s38)
		(s38 a11 s9)
		(s38 a12 s34)
		(s38 a7 s6)
		(s38 a8 s38)
	}
);
