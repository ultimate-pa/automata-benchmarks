// Testfile dumped by Ultimate at 2017/06/12 01:03:08
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 },
	initialStates = {s8 },
	finalStates = {s0 s3 s7 s8 s19 s20 s21 s22 s25 s26 s27 s28 s29 s30 s31 s32 s33 s36 s37 s41 s45 s46 s47 s49 s50 s51 s52 s55 s56 s57 s58 s60 s61 s63 s64 s65 s66 s67 s68 s69 s71 s72 },
	transitions = {
		(s0 a30 s36)
		(s1 a30 s2)
		(s2 a31 s4)
		(s2 a31 s40)
		(s3 a37 s21)
		(s4 a33 s5)
		(s4 a34 s6)
		(s5 a37 s23)
		(s6 a35 s18)
		(s7 a23 s22)
		(s7 a24 s32)
		(s8 a0 s68)
		(s9 a30 s38)
		(s10 a21 s44)
		(s10 a21 s69)
		(s11 a40 s10)
		(s12 a39 s11)
		(s13 a37 s12)
		(s14 a29 s1)
		(s15 a28 s14)
		(s16 a27 s15)
		(s17 a26 s16)
		(s18 a25 s17)
		(s19 a44 s20)
		(s20 a45 s31)
		(s21 a38 s22)
		(s22 a42 s46)
		(s23 a39 s24)
		(s24 a40 s59)
		(s25 a8 s26)
		(s26 a9 s49)
		(s27 a50 s28)
		(s28 a51 s55)
		(s29 a19 s30)
		(s30 a20 s58)
		(s31 a46 s63)
		(s32 a25 s33)
		(s33 a26 s47)
		(s34 a25 s35)
		(s35 a26 s48)
		(s36 a31 s37)
		(s37 a33 s3)
		(s37 a34 s61)
		(s38 a31 s39)
		(s38 a31 s40)
		(s39 a33 s13)
		(s39 a34 s62)
		(s40 a33 s13)
		(s41 a22 s42)
		(s41 a22 s43)
		(s42 a24 s18)
		(s43 a24 s34)
		(s44 a22 s43)
		(s45 a6 s25)
		(s46 a43 s19)
		(s47 a27 s50)
		(s48 a27 s53)
		(s49 a13 s71)
		(s50 a32 s51)
		(s50 a28 s52)
		(s51 a33 s3)
		(s52 a29 s0)
		(s53 a28 s54)
		(s54 a29 s9)
		(s55 a52 s56)
		(s55 a53 s57)
		(s56 a60 s60)
		(s57 a54 s67)
		(s58 a21 s41)
		(s58 a21 s69)
		(s59 a21 s44)
		(s59 a21 s70)
		(s60 a61 s31)
		(s61 a35 s32)
		(s62 a35 s34)
		(s63 a47 s64)
		(s64 a49 s27)
		(s65 a57 s66)
		(s66 a58 s27)
		(s67 a55 s65)
		(s68 a2 s45)
		(s69 a22 s7)
		(s70 a22 s42)
		(s71 a14 s72)
		(s72 a15 s29)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:03:12
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 },
	initialStates = {s6 },
	finalStates = {s1 s8 s9 },
	transitions = {
		(s0 a42 s0)
		(s0 a9 s0)
		(s0 a43 s0)
		(s0 a44 s0)
		(s0 a45 s0)
		(s0 a15 s0)
		(s0 a46 s0)
		(s0 a47 s0)
		(s0 a19 s0)
		(s0 a49 s0)
		(s0 a50 s0)
		(s0 a51 s0)
		(s0 a21 s0)
		(s0 a22 s0)
		(s0 a52 s0)
		(s0 a23 s0)
		(s0 a53 s0)
		(s0 a54 s0)
		(s0 a55 s0)
		(s0 a26 s10)
		(s0 a57 s0)
		(s0 a58 s0)
		(s0 a29 s0)
		(s0 a30 s10)
		(s0 a60 s0)
		(s0 a61 s0)
		(s0 a33 s0)
		(s0 a35 s11)
		(s0 a37 s10)
		(s1 a25 s7)
		(s2 a19 s2)
		(s2 a19 s8)
		(s2 a20 s5)
		(s2 a20 s8)
		(s3 a38 s3)
		(s3 a39 s3)
		(s3 a40 s3)
		(s3 a42 s3)
		(s3 a43 s3)
		(s3 a44 s3)
		(s3 a45 s3)
		(s3 a46 s3)
		(s3 a47 s3)
		(s3 a49 s3)
		(s3 a50 s3)
		(s3 a21 s3)
		(s3 a51 s3)
		(s3 a22 s3)
		(s3 a52 s3)
		(s3 a23 s3)
		(s3 a53 s3)
		(s3 a54 s3)
		(s3 a55 s3)
		(s3 a27 s3)
		(s3 a57 s3)
		(s3 a58 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a60 s3)
		(s3 a32 s3)
		(s3 a61 s3)
		(s3 a33 s3)
		(s3 a34 s3)
		(s3 a35 s1)
		(s3 a37 s3)
		(s4 a15 s2)
		(s4 a15 s8)
		(s4 a14 s4)
		(s4 a14 s8)
		(s5 a38 s5)
		(s5 a38 s8)
		(s5 a39 s5)
		(s5 a39 s8)
		(s5 a40 s5)
		(s5 a40 s8)
		(s5 a42 s5)
		(s5 a42 s8)
		(s5 a43 s5)
		(s5 a43 s8)
		(s5 a44 s5)
		(s5 a44 s8)
		(s5 a45 s5)
		(s5 a45 s8)
		(s5 a46 s5)
		(s5 a46 s8)
		(s5 a47 s5)
		(s5 a47 s8)
		(s5 a49 s5)
		(s5 a49 s8)
		(s5 a50 s5)
		(s5 a50 s8)
		(s5 a21 s5)
		(s5 a21 s8)
		(s5 a51 s5)
		(s5 a51 s8)
		(s5 a22 s5)
		(s5 a22 s8)
		(s5 a52 s5)
		(s5 a52 s8)
		(s5 a23 s5)
		(s5 a23 s8)
		(s5 a53 s5)
		(s5 a53 s8)
		(s5 a24 s5)
		(s5 a24 s1)
		(s5 a54 s5)
		(s5 a54 s8)
		(s5 a55 s5)
		(s5 a55 s8)
		(s5 a25 s5)
		(s5 a25 s8)
		(s5 a26 s5)
		(s5 a26 s9)
		(s5 a27 s5)
		(s5 a27 s8)
		(s5 a57 s5)
		(s5 a57 s8)
		(s5 a58 s5)
		(s5 a58 s8)
		(s5 a28 s5)
		(s5 a28 s8)
		(s5 a29 s5)
		(s5 a29 s8)
		(s5 a30 s5)
		(s5 a30 s9)
		(s5 a31 s5)
		(s5 a31 s8)
		(s5 a60 s5)
		(s5 a60 s8)
		(s5 a32 s5)
		(s5 a32 s8)
		(s5 a61 s5)
		(s5 a61 s8)
		(s5 a33 s5)
		(s5 a33 s8)
		(s5 a34 s5)
		(s5 a34 s8)
		(s5 a35 s5)
		(s5 a35 s8)
		(s5 a37 s5)
		(s5 a37 s9)
		(s6 a0 s6)
		(s6 a0 s8)
		(s6 a2 s6)
		(s6 a2 s8)
		(s6 a6 s6)
		(s6 a6 s8)
		(s6 a8 s6)
		(s6 a8 s8)
		(s6 a9 s6)
		(s6 a9 s8)
		(s6 a13 s4)
		(s6 a13 s8)
		(s7 a26 s3)
		(s8 a40 s0)
		(s8 a8 s0)
		(s8 a42 s0)
		(s8 a9 s0)
		(s8 a43 s0)
		(s8 a44 s0)
		(s8 a45 s0)
		(s8 a14 s0)
		(s8 a15 s0)
		(s8 a46 s0)
		(s8 a47 s0)
		(s8 a19 s0)
		(s8 a49 s0)
		(s8 a50 s0)
		(s8 a21 s0)
		(s8 a51 s0)
		(s8 a22 s0)
		(s8 a52 s0)
		(s8 a23 s0)
		(s8 a53 s0)
		(s8 a54 s0)
		(s8 a55 s0)
		(s8 a25 s0)
		(s8 a26 s10)
		(s8 a57 s0)
		(s8 a58 s0)
		(s8 a28 s0)
		(s8 a29 s0)
		(s8 a30 s10)
		(s8 a60 s0)
		(s8 a32 s0)
		(s8 a61 s0)
		(s8 a33 s0)
		(s8 a34 s0)
		(s8 a35 s11)
		(s8 a37 s10)
		(s9 a38 s10)
		(s9 a39 s10)
		(s9 a27 s10)
		(s9 a31 s10)
		(s10 a38 s10)
		(s10 a39 s10)
		(s10 a40 s10)
		(s10 a42 s10)
		(s10 a43 s10)
		(s10 a44 s10)
		(s10 a45 s10)
		(s10 a46 s10)
		(s10 a47 s10)
		(s10 a49 s10)
		(s10 a50 s10)
		(s10 a21 s10)
		(s10 a51 s10)
		(s10 a22 s10)
		(s10 a52 s10)
		(s10 a23 s10)
		(s10 a53 s10)
		(s10 a54 s10)
		(s10 a55 s10)
		(s10 a27 s10)
		(s10 a57 s10)
		(s10 a58 s10)
		(s10 a28 s10)
		(s10 a29 s10)
		(s10 a30 s10)
		(s10 a31 s10)
		(s10 a60 s10)
		(s10 a32 s10)
		(s10 a61 s10)
		(s10 a33 s10)
		(s10 a34 s10)
		(s10 a35 s11)
		(s10 a37 s10)
		(s11 a25 s11)
		(s11 a26 s12)
		(s12 a38 s12)
		(s12 a39 s12)
		(s12 a40 s12)
		(s12 a42 s12)
		(s12 a43 s12)
		(s12 a44 s12)
		(s12 a45 s12)
		(s12 a46 s12)
		(s12 a47 s12)
		(s12 a49 s12)
		(s12 a50 s12)
		(s12 a21 s12)
		(s12 a51 s12)
		(s12 a22 s12)
		(s12 a52 s12)
		(s12 a23 s12)
		(s12 a53 s12)
		(s12 a54 s12)
		(s12 a55 s12)
		(s12 a27 s12)
		(s12 a57 s12)
		(s12 a58 s12)
		(s12 a28 s12)
		(s12 a29 s12)
		(s12 a30 s12)
		(s12 a31 s12)
		(s12 a60 s12)
		(s12 a32 s12)
		(s12 a61 s12)
		(s12 a33 s12)
		(s12 a34 s12)
		(s12 a35 s11)
		(s12 a37 s12)
	}
);
