// Testfile dumped by Ultimate at 2017/06/11 23:20:29
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 },
	initialStates = {s3 },
	finalStates = {s0 s1 s3 s6 s7 s10 s12 s13 s16 s17 s18 s20 s21 s22 s23 s26 s27 s30 s31 s32 s35 },
	transitions = {
		(s0 a14 s1)
		(s0 a14 s31)
		(s1 a15 s34)
		(s2 a14 s31)
		(s2 a14 s33)
		(s3 a0 s26)
		(s4 a33 s2)
		(s5 a32 s4)
		(s6 a25 s7)
		(s7 a28 s27)
		(s8 a25 s9)
		(s9 a27 s28)
		(s9 a28 s29)
		(s10 a24 s6)
		(s11 a24 s8)
		(s12 a18 s13)
		(s13 a19 s27)
		(s14 a18 s15)
		(s15 a19 s29)
		(s16 a5 s17)
		(s16 a7 s17)
		(s17 a8 s20)
		(s17 a9 s20)
		(s18 a23 s10)
		(s19 a23 s11)
		(s20 a10 s21)
		(s21 a11 s30)
		(s22 a21 s23)
		(s23 a22 s18)
		(s24 a21 s25)
		(s25 a22 s19)
		(s26 a2 s16)
		(s27 a20 s22)
		(s28 a30 s5)
		(s29 a20 s24)
		(s30 a12 s35)
		(s31 a15 s32)
		(s32 a17 s12)
		(s33 a15 s34)
		(s34 a17 s14)
		(s35 a13 s0)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:20:31
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 },
	initialStates = {s3 },
	finalStates = {s1 s2 s8 s9 },
	transitions = {
		(s0 a11 s0)
		(s0 a11 s8)
		(s0 a12 s0)
		(s0 a12 s8)
		(s0 a13 s10)
		(s0 a13 s8)
		(s1 a22 s12)
		(s1 a25 s12)
		(s1 a32 s12)
		(s2 a27 s7)
		(s2 a20 s7)
		(s2 a28 s5)
		(s2 a21 s12)
		(s2 a30 s12)
		(s2 a14 s7)
		(s2 a15 s7)
		(s2 a23 s7)
		(s2 a24 s12)
		(s2 a18 s7)
		(s2 a33 s7)
		(s2 a19 s7)
		(s3 a0 s3)
		(s3 a0 s8)
		(s3 a2 s3)
		(s3 a2 s8)
		(s3 a5 s3)
		(s3 a5 s8)
		(s3 a7 s3)
		(s3 a7 s8)
		(s3 a8 s3)
		(s3 a8 s8)
		(s3 a9 s3)
		(s3 a9 s8)
		(s3 a10 s0)
		(s3 a10 s8)
		(s4 a20 s2)
		(s4 a20 s4)
		(s4 a21 s1)
		(s4 a21 s4)
		(s4 a22 s2)
		(s4 a22 s4)
		(s4 a23 s2)
		(s4 a23 s4)
		(s4 a24 s1)
		(s4 a24 s4)
		(s4 a25 s2)
		(s4 a25 s4)
		(s4 a27 s2)
		(s4 a27 s4)
		(s4 a28 s2)
		(s4 a28 s4)
		(s4 a30 s1)
		(s4 a30 s4)
		(s4 a14 s2)
		(s4 a14 s4)
		(s4 a15 s2)
		(s4 a15 s4)
		(s4 a32 s2)
		(s4 a32 s4)
		(s4 a17 s2)
		(s4 a17 s4)
		(s4 a18 s2)
		(s4 a18 s4)
		(s4 a33 s2)
		(s4 a33 s4)
		(s4 a19 s2)
		(s4 a19 s4)
		(s5 a20 s5)
		(s5 a21 s1)
		(s6 a12 s6)
		(s6 a5 s6)
		(s6 a7 s6)
		(s6 a15 s6)
		(s6 a8 s6)
		(s6 a9 s6)
		(s7 a20 s7)
		(s7 a21 s12)
		(s7 a30 s12)
		(s7 a14 s7)
		(s7 a15 s7)
		(s7 a24 s12)
		(s7 a19 s7)
		(s8 a11 s6)
		(s8 a12 s6)
		(s8 a2 s6)
		(s8 a5 s6)
		(s8 a14 s6)
		(s8 a7 s6)
		(s8 a15 s6)
		(s8 a8 s6)
		(s8 a9 s6)
		(s9 a20 s11)
		(s10 a14 s10)
		(s10 a14 s8)
		(s10 a15 s10)
		(s10 a15 s8)
		(s10 a17 s2)
		(s10 a17 s4)
		(s11 a21 s12)
		(s12 a27 s12)
		(s12 a28 s9)
		(s12 a22 s12)
		(s12 a30 s12)
		(s12 a14 s12)
		(s12 a15 s12)
		(s12 a23 s12)
		(s12 a24 s12)
		(s12 a25 s12)
		(s12 a32 s12)
		(s12 a33 s12)
	}
);
