// Testfile dumped by Ultimate at 2017/06/11 23:20:11
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	initialStates = {s22 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 },
	transitions = {
		(s0 a32 s1)
		(s1 a33 s21)
		(s2 a25 s3)
		(s3 a27 s17)
		(s3 a28 s16)
		(s4 a24 s2)
		(s5 a18 s6)
		(s6 a19 s16)
		(s7 a4 s8)
		(s7 a7 s8)
		(s8 a8 s9)
		(s8 a9 s9)
		(s9 a10 s10)
		(s10 a11 s15)
		(s11 a21 s12)
		(s12 a22 s13)
		(s13 a23 s4)
		(s14 a2 s7)
		(s15 a12 s20)
		(s16 a20 s11)
		(s17 a30 s0)
		(s18 a15 s19)
		(s19 a17 s5)
		(s20 a13 s21)
		(s21 a14 s18)
		(s22 a0 s14)
	}
);
// Testfile dumped by Ultimate at 2017/06/11 23:20:12
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s0 },
	finalStates = {s1 s3 },
	transitions = {
		(s0 a0 s0)
		(s0 a0 s3)
		(s0 a2 s0)
		(s0 a2 s3)
		(s0 a4 s0)
		(s0 a4 s3)
		(s0 a7 s0)
		(s0 a7 s3)
		(s0 a8 s0)
		(s0 a8 s3)
		(s0 a9 s0)
		(s0 a9 s3)
		(s0 a10 s0)
		(s0 a10 s3)
		(s0 a11 s0)
		(s0 a11 s3)
		(s0 a12 s0)
		(s0 a12 s3)
		(s0 a13 s0)
		(s0 a13 s3)
		(s0 a14 s0)
		(s0 a14 s3)
		(s0 a15 s0)
		(s0 a15 s1)
		(s0 a17 s0)
		(s0 a17 s3)
		(s0 a18 s0)
		(s0 a18 s1)
		(s0 a19 s0)
		(s0 a19 s3)
		(s0 a20 s0)
		(s0 a20 s3)
		(s0 a21 s0)
		(s0 a21 s3)
		(s0 a22 s0)
		(s0 a22 s3)
		(s0 a23 s0)
		(s0 a23 s3)
		(s0 a24 s0)
		(s0 a24 s3)
		(s0 a25 s0)
		(s0 a25 s3)
		(s0 a27 s0)
		(s0 a27 s3)
		(s0 a28 s0)
		(s0 a28 s3)
		(s0 a30 s0)
		(s0 a30 s3)
		(s0 a32 s0)
		(s0 a32 s3)
		(s0 a33 s0)
		(s0 a33 s3)
		(s1 a17 s5)
		(s1 a19 s5)
		(s2 a20 s2)
		(s2 a21 s2)
		(s2 a4 s2)
		(s2 a22 s2)
		(s2 a7 s2)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a8 s2)
		(s2 a9 s2)
		(s2 a10 s2)
		(s2 a11 s2)
		(s2 a27 s2)
		(s2 a12 s2)
		(s2 a28 s2)
		(s2 a30 s2)
		(s2 a15 s5)
		(s2 a32 s2)
		(s2 a33 s4)
		(s3 a2 s2)
		(s3 a20 s2)
		(s3 a21 s2)
		(s3 a4 s2)
		(s3 a22 s2)
		(s3 a7 s2)
		(s3 a23 s2)
		(s3 a24 s2)
		(s3 a25 s2)
		(s3 a8 s2)
		(s3 a9 s2)
		(s3 a10 s2)
		(s3 a11 s2)
		(s3 a27 s2)
		(s3 a12 s2)
		(s3 a28 s2)
		(s3 a14 s2)
		(s3 a30 s2)
		(s3 a15 s5)
		(s3 a32 s2)
		(s3 a18 s5)
		(s3 a33 s4)
		(s4 a14 s4)
		(s4 a15 s1)
		(s5 a20 s5)
		(s5 a21 s5)
		(s5 a22 s5)
		(s5 a23 s5)
		(s5 a24 s5)
		(s5 a25 s5)
		(s5 a27 s5)
		(s5 a28 s5)
		(s5 a30 s5)
		(s5 a32 s5)
		(s5 a17 s5)
		(s5 a18 s5)
		(s5 a33 s3)
		(s5 a19 s5)
	}
);
