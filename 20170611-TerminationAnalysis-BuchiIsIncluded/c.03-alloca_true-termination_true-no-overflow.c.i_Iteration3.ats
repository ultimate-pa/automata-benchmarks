// Testfile dumped by Ultimate at 2017/06/12 01:37:11
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 },
	initialStates = {s38 },
	finalStates = {s0 s1 s4 s5 s8 s11 s12 s15 s16 s17 s18 s19 s20 s22 s23 s24 s26 s28 s29 s31 s32 s34 s36 s37 s38 s39 s40 s41 },
	transitions = {
		(s0 a20 s1)
		(s1 a21 s22)
		(s2 a20 s3)
		(s3 a21 s21)
		(s4 a11 s5)
		(s5 a12 s26)
		(s6 a11 s7)
		(s7 a12 s27)
		(s8 a7 s9)
		(s9 a8 s25)
		(s10 a7 s9)
		(s11 a16 s12)
		(s12 a17 s29)
		(s13 a16 s14)
		(s14 a17 s30)
		(s15 a24 s16)
		(s16 a25 s22)
		(s16 a25 s21)
		(s17 a1 s18)
		(s18 a2 s36)
		(s19 a4 s20)
		(s20 a5 s31)
		(s21 a6 s10)
		(s22 a6 s39)
		(s23 a8 s24)
		(s24 a9 s32)
		(s25 a9 s33)
		(s26 a15 s11)
		(s27 a15 s28)
		(s27 a15 s13)
		(s28 a16 s41)
		(s29 a22 s34)
		(s30 a18 s35)
		(s31 a6 s39)
		(s31 a6 s8)
		(s32 a10 s4)
		(s33 a10 s6)
		(s34 a23 s15)
		(s35 a19 s2)
		(s36 a3 s19)
		(s37 a19 s0)
		(s38 a0 s17)
		(s39 a7 s23)
		(s40 a18 s37)
		(s41 a17 s40)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:37:13
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 },
	initialStates = {s8 },
	finalStates = {s1 s2 s10 s12 },
	transitions = {
		(s0 a24 s3)
		(s1 a16 s11)
		(s2 a24 s3)
		(s3 a10 s3)
		(s3 a11 s13)
		(s3 a25 s3)
		(s3 a6 s3)
		(s3 a7 s3)
		(s3 a8 s3)
		(s3 a9 s3)
		(s4 a15 s11)
		(s5 a24 s10)
		(s6 a12 s4)
		(s7 a15 s1)
		(s8 a0 s8)
		(s8 a0 s10)
		(s8 a18 s8)
		(s8 a18 s10)
		(s8 a19 s8)
		(s8 a19 s10)
		(s8 a1 s8)
		(s8 a1 s10)
		(s8 a20 s8)
		(s8 a20 s10)
		(s8 a2 s8)
		(s8 a2 s10)
		(s8 a21 s8)
		(s8 a21 s10)
		(s8 a3 s8)
		(s8 a3 s10)
		(s8 a4 s8)
		(s8 a4 s10)
		(s8 a22 s8)
		(s8 a22 s10)
		(s8 a5 s8)
		(s8 a5 s10)
		(s8 a23 s8)
		(s8 a23 s2)
		(s8 a24 s8)
		(s8 a24 s10)
		(s8 a25 s8)
		(s8 a25 s10)
		(s8 a6 s8)
		(s8 a6 s10)
		(s8 a7 s8)
		(s8 a7 s10)
		(s8 a8 s8)
		(s8 a8 s10)
		(s8 a9 s8)
		(s8 a9 s10)
		(s8 a10 s8)
		(s8 a10 s10)
		(s8 a11 s8)
		(s8 a11 s12)
		(s8 a12 s8)
		(s8 a12 s10)
		(s8 a15 s8)
		(s8 a15 s10)
		(s8 a16 s8)
		(s8 a16 s10)
		(s8 a17 s8)
		(s8 a17 s10)
		(s9 a18 s9)
		(s9 a10 s9)
		(s9 a19 s9)
		(s9 a11 s6)
		(s9 a22 s9)
		(s9 a23 s0)
		(s9 a6 s9)
		(s9 a7 s9)
		(s9 a16 s9)
		(s9 a8 s9)
		(s9 a17 s9)
		(s9 a9 s9)
		(s10 a18 s9)
		(s10 a19 s9)
		(s10 a21 s9)
		(s10 a22 s9)
		(s10 a23 s0)
		(s10 a25 s9)
		(s10 a6 s9)
		(s10 a7 s9)
		(s10 a8 s9)
		(s10 a9 s9)
		(s10 a10 s9)
		(s10 a11 s6)
		(s10 a15 s9)
		(s10 a16 s9)
		(s10 a17 s9)
		(s11 a18 s11)
		(s11 a19 s11)
		(s11 a22 s11)
		(s11 a23 s5)
		(s11 a16 s11)
		(s11 a17 s11)
		(s12 a12 s4)
		(s13 a12 s7)
	}
);
