// Testfile dumped by Ultimate at 2017/06/12 00:01:41
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	initialStates = {s1 },
	finalStates = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 },
	transitions = {
		(s0 a24 s15)
		(s1 a1 s7)
		(s2 a19 s16)
		(s3 a6 s4)
		(s4 a7 s10)
		(s5 a9 s6)
		(s5 a10 s6)
		(s6 a11 s13)
		(s7 a2 s8)
		(s8 a3 s9)
		(s8 a4 s9)
		(s9 a5 s3)
		(s10 a8 s5)
		(s11 a16 s12)
		(s12 a17 s19)
		(s13 a12 s18)
		(s14 a14 s15)
		(s15 a15 s11)
		(s16 a20 s17)
		(s17 a21 s0)
		(s18 a13 s14)
		(s19 a18 s2)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 00:01:42
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s3 },
	finalStates = {s0 s2 s7 },
	transitions = {
		(s0 a15 s1)
		(s1 a16 s10)
		(s2 a20 s5)
		(s2 a17 s5)
		(s3 a1 s3)
		(s3 a1 s7)
		(s3 a2 s3)
		(s3 a2 s7)
		(s3 a18 s3)
		(s3 a18 s7)
		(s3 a19 s2)
		(s3 a19 s3)
		(s3 a20 s3)
		(s3 a20 s7)
		(s3 a3 s3)
		(s3 a3 s7)
		(s3 a21 s3)
		(s3 a21 s7)
		(s3 a4 s3)
		(s3 a4 s7)
		(s3 a5 s3)
		(s3 a5 s7)
		(s3 a6 s3)
		(s3 a6 s7)
		(s3 a7 s3)
		(s3 a7 s7)
		(s3 a8 s3)
		(s3 a8 s7)
		(s3 a24 s3)
		(s3 a24 s7)
		(s3 a9 s3)
		(s3 a9 s7)
		(s3 a10 s3)
		(s3 a10 s7)
		(s3 a11 s3)
		(s3 a11 s7)
		(s3 a12 s3)
		(s3 a12 s7)
		(s3 a13 s3)
		(s3 a13 s7)
		(s3 a14 s0)
		(s3 a14 s3)
		(s3 a15 s3)
		(s3 a15 s7)
		(s3 a16 s2)
		(s3 a16 s3)
		(s3 a17 s3)
		(s3 a17 s7)
		(s4 a15 s4)
		(s4 a16 s8)
		(s5 a18 s5)
		(s5 a19 s5)
		(s5 a20 s5)
		(s5 a21 s5)
		(s5 a24 s4)
		(s5 a17 s5)
		(s6 a18 s6)
		(s6 a19 s6)
		(s6 a20 s6)
		(s6 a21 s6)
		(s6 a24 s11)
		(s6 a17 s6)
		(s7 a18 s9)
		(s7 a19 s5)
		(s7 a3 s9)
		(s7 a21 s9)
		(s7 a4 s9)
		(s7 a6 s9)
		(s7 a7 s9)
		(s7 a24 s4)
		(s7 a9 s9)
		(s7 a10 s9)
		(s7 a12 s9)
		(s7 a13 s9)
		(s7 a14 s11)
		(s7 a15 s9)
		(s7 a16 s5)
		(s8 a18 s8)
		(s8 a19 s8)
		(s8 a20 s8)
		(s8 a21 s8)
		(s8 a24 s4)
		(s8 a17 s8)
		(s9 a19 s5)
		(s9 a13 s9)
		(s9 a14 s11)
		(s9 a7 s9)
		(s9 a24 s4)
		(s9 a16 s5)
		(s10 a18 s10)
		(s10 a19 s10)
		(s10 a20 s10)
		(s10 a21 s10)
		(s10 a24 s0)
		(s10 a17 s10)
		(s11 a15 s11)
		(s11 a16 s6)
	}
);
