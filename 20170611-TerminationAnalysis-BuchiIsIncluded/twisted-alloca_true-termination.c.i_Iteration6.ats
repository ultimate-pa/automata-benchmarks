// Testfile dumped by Ultimate at 2017/06/12 01:58:52
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 },
	initialStates = {s20 },
	finalStates = {s0 s1 s2 s4 s5 s6 s7 s10 s11 s12 s13 s14 s15 s16 s17 s18 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s37 s38 s43 s44 s45 s48 s49 },
	transitions = {
		(s0 a10 s1)
		(s1 a11 s12)
		(s2 a25 s18)
		(s3 a25 s19)
		(s4 a13 s5)
		(s5 a14 s21)
		(s6 a14 s7)
		(s7 a15 s35)
		(s8 a15 s9)
		(s9 a16 s40)
		(s10 a3 s11)
		(s11 a4 s15)
		(s12 a12 s25)
		(s13 a1 s14)
		(s14 a2 s10)
		(s15 a5 s16)
		(s16 a6 s30)
		(s16 a6 s31)
		(s17 a12 s4)
		(s18 a26 s48)
		(s19 a26 s50)
		(s20 a0 s13)
		(s21 a15 s33)
		(s22 a13 s6)
		(s23 a12 s22)
		(s24 a14 s21)
		(s24 a14 s8)
		(s25 a13 s24)
		(s26 a11 s17)
		(s27 a11 s23)
		(s28 a10 s26)
		(s29 a8 s28)
		(s30 a7 s29)
		(s31 a7 s46)
		(s32 a8 s0)
		(s33 a16 s34)
		(s34 a7 s44)
		(s35 a17 s36)
		(s36 a19 s52)
		(s37 a6 s38)
		(s38 a7 s32)
		(s39 a6 s40)
		(s40 a7 s46)
		(s41 a23 s42)
		(s41 a23 s43)
		(s42 a24 s3)
		(s43 a24 s2)
		(s44 a8 s45)
		(s45 a10 s27)
		(s46 a8 s47)
		(s47 a9 s36)
		(s48 a27 s49)
		(s49 a29 s37)
		(s50 a27 s51)
		(s51 a28 s52)
		(s51 a29 s39)
		(s52 a20 s53)
		(s53 a22 s41)
	}
);
// Testfile dumped by Ultimate at 2017/06/12 01:59:04
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=true]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 },
	initialStates = {s15 },
	finalStates = {s3 s19 s22 s44 s46 s53 s62 },
	transitions = {
		(s0 a24 s41)
		(s1 a13 s36)
		(s2 a9 s60)
		(s2 a10 s49)
		(s3 a9 s17)
		(s3 a10 s17)
		(s4 a24 s8)
		(s5 a24 s29)
		(s6 a9 s55)
		(s6 a10 s43)
		(s7 a9 s45)
		(s7 a10 s43)
		(s8 a25 s55)
		(s9 a25 s39)
		(s10 a12 s18)
		(s11 a28 s11)
		(s11 a19 s11)
		(s11 a29 s11)
		(s11 a20 s11)
		(s11 a22 s11)
		(s11 a6 s11)
		(s11 a23 s4)
		(s11 a7 s16)
		(s11 a26 s11)
		(s11 a27 s11)
		(s12 a8 s13)
		(s13 a9 s36)
		(s13 a10 s71)
		(s14 a24 s51)
		(s15 a0 s15)
		(s15 a0 s19)
		(s15 a1 s15)
		(s15 a1 s22)
		(s15 a2 s15)
		(s15 a2 s19)
		(s15 a3 s15)
		(s15 a3 s19)
		(s15 a4 s15)
		(s15 a4 s19)
		(s15 a5 s15)
		(s15 a5 s19)
		(s15 a6 s15)
		(s15 a6 s19)
		(s15 a7 s15)
		(s15 a7 s62)
		(s15 a8 s15)
		(s15 a8 s3)
		(s15 a9 s15)
		(s15 a9 s19)
		(s15 a10 s15)
		(s15 a10 s19)
		(s15 a11 s15)
		(s15 a11 s46)
		(s15 a12 s15)
		(s15 a12 s19)
		(s15 a13 s15)
		(s15 a13 s19)
		(s15 a14 s15)
		(s15 a14 s19)
		(s15 a15 s15)
		(s15 a15 s19)
		(s15 a16 s15)
		(s15 a16 s19)
		(s15 a17 s15)
		(s15 a17 s19)
		(s15 a19 s15)
		(s15 a19 s19)
		(s15 a20 s15)
		(s15 a20 s19)
		(s15 a22 s15)
		(s15 a22 s19)
		(s15 a23 s53)
		(s15 a23 s15)
		(s15 a24 s15)
		(s15 a24 s19)
		(s15 a25 s15)
		(s15 a25 s19)
		(s15 a26 s15)
		(s15 a26 s19)
		(s15 a27 s15)
		(s15 a27 s19)
		(s15 a28 s15)
		(s15 a28 s19)
		(s15 a29 s15)
		(s15 a29 s19)
		(s16 a8 s20)
		(s17 a19 s17)
		(s17 a20 s17)
		(s17 a22 s17)
		(s17 a23 s5)
		(s17 a6 s17)
		(s17 a7 s65)
		(s17 a26 s17)
		(s17 a27 s17)
		(s17 a28 s17)
		(s17 a11 s57)
		(s17 a29 s17)
		(s17 a15 s17)
		(s17 a16 s17)
		(s17 a17 s17)
		(s18 a13 s60)
		(s19 a1 s28)
		(s19 a19 s17)
		(s19 a3 s55)
		(s19 a20 s17)
		(s19 a4 s55)
		(s19 a5 s55)
		(s19 a22 s17)
		(s19 a6 s17)
		(s19 a23 s5)
		(s19 a7 s65)
		(s19 a25 s55)
		(s19 a26 s17)
		(s19 a27 s17)
		(s19 a28 s17)
		(s19 a11 s57)
		(s19 a29 s17)
		(s19 a13 s55)
		(s19 a14 s17)
		(s19 a15 s17)
		(s19 a16 s17)
		(s19 a17 s17)
		(s20 a9 s11)
		(s20 a10 s23)
		(s21 a8 s2)
		(s22 a2 s45)
		(s22 a14 s25)
		(s23 a11 s30)
		(s24 a8 s54)
		(s25 a19 s25)
		(s25 a20 s25)
		(s25 a15 s25)
		(s25 a22 s25)
		(s25 a16 s25)
		(s25 a23 s14)
		(s25 a7 s32)
		(s25 a17 s25)
		(s26 a24 s9)
		(s27 a24 s61)
		(s28 a2 s45)
		(s29 a25 s11)
		(s30 a12 s1)
		(s31 a25 s55)
		(s32 a8 s35)
		(s33 a25 s45)
		(s34 a9 s39)
		(s34 a10 s23)
		(s35 a9 s25)
		(s35 a10 s71)
		(s36 a19 s36)
		(s36 a20 s36)
		(s36 a14 s36)
		(s36 a15 s36)
		(s36 a22 s36)
		(s36 a16 s36)
		(s36 a23 s26)
		(s36 a7 s12)
		(s37 a25 s45)
		(s38 a8 s34)
		(s39 a28 s39)
		(s39 a19 s39)
		(s39 a29 s39)
		(s39 a20 s39)
		(s39 a22 s39)
		(s39 a6 s39)
		(s39 a23 s27)
		(s39 a7 s38)
		(s39 a26 s39)
		(s39 a27 s39)
		(s40 a8 s42)
		(s41 a25 s60)
		(s42 a9 s59)
		(s42 a10 s44)
		(s43 a11 s52)
		(s44 a11 s72)
		(s45 a19 s45)
		(s45 a3 s45)
		(s45 a20 s45)
		(s45 a4 s45)
		(s45 a5 s45)
		(s45 a22 s45)
		(s45 a6 s45)
		(s45 a23 s58)
		(s45 a7 s64)
		(s45 a26 s45)
		(s45 a27 s45)
		(s45 a28 s45)
		(s45 a29 s45)
		(s45 a14 s45)
		(s45 a15 s45)
		(s45 a16 s45)
		(s45 a17 s45)
		(s46 a12 s66)
		(s47 a28 s47)
		(s47 a19 s47)
		(s47 a29 s47)
		(s47 a20 s47)
		(s47 a22 s47)
		(s47 a6 s47)
		(s47 a23 s48)
		(s47 a7 s24)
		(s47 a26 s47)
		(s47 a27 s47)
		(s48 a24 s37)
		(s49 a11 s10)
		(s50 a25 s17)
		(s51 a25 s47)
		(s52 a12 s70)
		(s53 a24 s29)
		(s54 a9 s47)
		(s54 a10 s23)
		(s55 a19 s55)
		(s55 a20 s55)
		(s55 a4 s55)
		(s55 a5 s55)
		(s55 a22 s55)
		(s55 a6 s55)
		(s55 a23 s56)
		(s55 a7 s63)
		(s55 a26 s55)
		(s55 a27 s55)
		(s55 a28 s55)
		(s55 a29 s55)
		(s55 a14 s55)
		(s55 a15 s55)
		(s55 a16 s55)
		(s55 a17 s55)
		(s56 a24 s31)
		(s57 a12 s66)
		(s58 a24 s33)
		(s59 a19 s59)
		(s59 a20 s59)
		(s59 a14 s59)
		(s59 a15 s59)
		(s59 a22 s59)
		(s59 a16 s59)
		(s59 a23 s69)
		(s59 a7 s40)
		(s59 a17 s59)
		(s60 a19 s60)
		(s60 a20 s60)
		(s60 a22 s60)
		(s60 a6 s60)
		(s60 a23 s0)
		(s60 a7 s21)
		(s60 a26 s60)
		(s60 a27 s60)
		(s60 a28 s60)
		(s60 a29 s60)
		(s60 a14 s60)
		(s60 a15 s60)
		(s60 a16 s60)
		(s60 a17 s60)
		(s61 a25 s60)
		(s62 a8 s68)
		(s63 a8 s6)
		(s64 a8 s7)
		(s65 a8 s68)
		(s66 a13 s59)
		(s67 a13 s22)
		(s68 a9 s17)
		(s68 a10 s71)
		(s69 a24 s50)
		(s70 a13 s45)
		(s71 a11 s72)
		(s72 a12 s67)
	}
);
