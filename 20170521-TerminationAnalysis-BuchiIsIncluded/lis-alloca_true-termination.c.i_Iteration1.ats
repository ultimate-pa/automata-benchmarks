// Testfile dumped by Ultimate at 2017/05/21 21:28:11
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 },
	initialStates = {s15 },
	finalStates = {s0 s1 s2 s3 s4 s6 s7 s8 s9 s10 s11 s12 s13 s15 s16 s17 s18 s19 s21 s23 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 },
	transitions = {
		(s0 a40 s1)
		(s1 a41 s16)
		(s2 a24 s9)
		(s3 a35 s28)
		(s4 a21 s29)
		(s5 a9 s24)
		(s6 a33 s7)
		(s7 a34 s3)
		(s7 a16 s11)
		(s8 a28 s32)
		(s9 a25 s31)
		(s10 a1 s25)
		(s11 a17 s3)
		(s11 a18 s12)
		(s12 a19 s13)
		(s13 a20 s4)
		(s14 a8 s5)
		(s15 a0 s10)
		(s16 a42 s17)
		(s16 a45 s18)
		(s17 a43 s23)
		(s18 a46 s37)
		(s19 a5 s20)
		(s19 a5 s21)
		(s20 a7 s14)
		(s21 a6 s27)
		(s22 a5 s20)
		(s22 a5 s21)
		(s23 a44 s18)
		(s24 a10 s22)
		(s25 a2 s26)
		(s25 a3 s26)
		(s26 a4 s19)
		(s27 a12 s28)
		(s28 a36 s34)
		(s28 a13 s35)
		(s29 a22 s30)
		(s29 a26 s31)
		(s30 a23 s2)
		(s31 a32 s6)
		(s31 a27 s8)
		(s32 a29 s33)
		(s33 a30 s36)
		(s34 a37 s37)
		(s35 a14 s34)
		(s35 a15 s7)
		(s36 a31 s6)
		(s37 a38 s0)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 21:28:11
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s4 },
	finalStates = {s1 s2 },
	transitions = {
		(s0 a6 s0)
		(s0 a7 s0)
		(s0 a8 s3)
		(s1 a11 s2)
		(s1 a5 s0)
		(s2 a32 s2)
		(s2 a33 s2)
		(s2 a34 s2)
		(s2 a35 s2)
		(s2 a36 s2)
		(s2 a37 s2)
		(s2 a38 s2)
		(s2 a39 s2)
		(s2 a40 s2)
		(s2 a41 s2)
		(s2 a42 s2)
		(s2 a43 s2)
		(s2 a12 s2)
		(s2 a44 s2)
		(s2 a45 s2)
		(s2 a13 s2)
		(s2 a46 s2)
		(s2 a47 s2)
		(s2 a14 s2)
		(s2 a48 s2)
		(s2 a15 s2)
		(s2 a49 s2)
		(s2 a50 s2)
		(s2 a16 s2)
		(s2 a51 s2)
		(s2 a17 s2)
		(s2 a18 s2)
		(s2 a19 s2)
		(s2 a20 s2)
		(s2 a21 s2)
		(s2 a22 s2)
		(s2 a23 s2)
		(s2 a24 s2)
		(s2 a25 s2)
		(s2 a26 s2)
		(s2 a27 s2)
		(s2 a28 s2)
		(s2 a29 s2)
		(s2 a30 s2)
		(s2 a31 s2)
		(s3 a9 s3)
		(s3 a10 s1)
		(s4 a0 s4)
		(s4 a1 s4)
		(s4 a2 s4)
		(s4 a3 s4)
		(s4 a4 s1)
	}
);
