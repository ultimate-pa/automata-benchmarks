// Testfile dumped by Ultimate at 2017/05/21 20:25:13
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s0 },
	finalStates = {s2 s4 },
	transitions = {
		(s0 a0 s0)
		(s0 a2 s0)
		(s0 a4 s0)
		(s0 a6 s0)
		(s0 a9 s0)
		(s0 a11 s0)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s0 a17 s0)
		(s0 a18 s0)
		(s0 a19 s0)
		(s0 a20 s2)
		(s1 a1 s3)
		(s1 a22 s3)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a30 s3)
		(s1 a32 s1)
		(s1 a33 s1)
		(s1 a34 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a35 s4)
		(s2 a21 s1)
		(s2 a25 s4)
		(s2 a26 s1)
		(s2 a35 s4)
		(s3 a1 s3)
		(s3 a3 s3)
		(s3 a23 s3)
		(s3 a5 s3)
		(s3 a24 s2)
		(s3 a7 s3)
		(s3 a8 s3)
		(s3 a10 s3)
		(s3 a26 s3)
		(s3 a12 s3)
		(s3 a13 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a32 s3)
		(s3 a33 s3)
		(s3 a34 s2)
		(s3 a35 s4)
		(s4 a1 s4)
		(s4 a3 s4)
		(s4 a5 s4)
		(s4 a7 s4)
		(s4 a8 s4)
		(s4 a10 s4)
		(s4 a26 s4)
		(s4 a12 s4)
		(s4 a13 s4)
		(s4 a27 s4)
		(s4 a28 s4)
		(s4 a29 s4)
		(s4 a30 s4)
		(s4 a31 s4)
		(s4 a32 s4)
		(s4 a33 s4)
		(s4 a34 s4)
		(s4 a35 s4)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:25:13
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s0 },
	finalStates = {s2 s4 },
	transitions = {
		(s0 a0 s0)
		(s0 a2 s0)
		(s0 a4 s0)
		(s0 a6 s0)
		(s0 a9 s0)
		(s0 a11 s0)
		(s0 a12 s0)
		(s0 a13 s0)
		(s0 a14 s0)
		(s0 a15 s0)
		(s0 a16 s0)
		(s0 a17 s0)
		(s0 a18 s0)
		(s0 a19 s0)
		(s0 a20 s2)
		(s1 a1 s3)
		(s1 a22 s3)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a30 s3)
		(s1 a32 s1)
		(s1 a33 s1)
		(s1 a34 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a35 s4)
		(s2 a21 s1)
		(s2 a25 s4)
		(s2 a26 s1)
		(s2 a35 s4)
		(s3 a1 s3)
		(s3 a3 s3)
		(s3 a23 s3)
		(s3 a5 s3)
		(s3 a24 s2)
		(s3 a7 s3)
		(s3 a8 s3)
		(s3 a10 s3)
		(s3 a26 s3)
		(s3 a12 s3)
		(s3 a13 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a32 s3)
		(s3 a33 s3)
		(s3 a34 s2)
		(s3 a35 s4)
		(s4 a1 s4)
		(s4 a3 s4)
		(s4 a5 s4)
		(s4 a7 s4)
		(s4 a8 s4)
		(s4 a10 s4)
		(s4 a26 s4)
		(s4 a12 s4)
		(s4 a13 s4)
		(s4 a27 s4)
		(s4 a28 s4)
		(s4 a29 s4)
		(s4 a30 s4)
		(s4 a31 s4)
		(s4 a32 s4)
		(s4 a33 s4)
		(s4 a34 s4)
		(s4 a35 s4)
	}
);
