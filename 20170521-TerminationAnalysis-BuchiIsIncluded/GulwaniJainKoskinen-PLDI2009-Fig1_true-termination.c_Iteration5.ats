// Testfile dumped by Ultimate at 2017/05/21 20:34:55
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 },
	initialStates = {s6 },
	finalStates = {s2 s3 s5 s6 s7 },
	transitions = {
		(s0 a10 s4)
		(s1 a5 s0)
		(s1 a5 s2)
		(s2 a10 s3)
		(s3 a2 s7)
		(s4 a0 s1)
		(s5 a3 s7)
		(s6 a1 s5)
		(s7 a5 s0)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:35:28
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=true, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 },
	initialStates = {s2 },
	finalStates = {s1 s6 s8 },
	transitions = {
		(s0 a5 s0)
		(s0 a5 s6)
		(s0 a10 s5)
		(s0 a10 s6)
		(s1 a0 s1)
		(s1 a2 s1)
		(s1 a5 s1)
		(s1 a10 s1)
		(s2 a1 s2)
		(s2 a1 s8)
		(s2 a3 s3)
		(s2 a3 s6)
		(s3 a0 s3)
		(s3 a0 s6)
		(s3 a2 s3)
		(s3 a2 s6)
		(s3 a5 s3)
		(s3 a5 s6)
		(s3 a10 s3)
		(s3 a10 s6)
		(s4 a2 s0)
		(s4 a2 s6)
		(s4 a5 s4)
		(s4 a10 s4)
		(s5 a0 s6)
		(s5 a0 s7)
		(s6 a2 s0)
		(s6 a2 s6)
		(s6 a5 s4)
		(s6 a10 s4)
		(s7 a0 s4)
		(s7 a2 s1)
		(s7 a5 s6)
		(s7 a5 s7)
		(s7 a10 s6)
		(s7 a10 s7)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:35:02
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 },
	initialStates = {s15 },
	finalStates = {s5 s10 s11 s13 s14 s15 },
	transitions = {
		(s0 a0 s16)
		(s1 a5 s17)
		(s2 a0 s1)
		(s3 a5 s6)
		(s3 a5 s7)
		(s4 a2 s3)
		(s5 a5 s6)
		(s5 a5 s7)
		(s6 a10 s12)
		(s7 a10 s2)
		(s8 a5 s9)
		(s9 a10 s4)
		(s10 a2 s11)
		(s11 a5 s17)
		(s12 a0 s8)
		(s13 a10 s10)
		(s14 a3 s5)
		(s15 a1 s14)
		(s16 a5 s13)
		(s16 a5 s17)
		(s17 a10 s0)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:35:28
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=true, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 },
	initialStates = {s2 },
	finalStates = {s1 s6 s8 },
	transitions = {
		(s0 a5 s0)
		(s0 a5 s6)
		(s0 a10 s5)
		(s0 a10 s6)
		(s1 a0 s1)
		(s1 a2 s1)
		(s1 a5 s1)
		(s1 a10 s1)
		(s2 a1 s2)
		(s2 a1 s8)
		(s2 a3 s3)
		(s2 a3 s6)
		(s3 a0 s3)
		(s3 a0 s6)
		(s3 a2 s3)
		(s3 a2 s6)
		(s3 a5 s3)
		(s3 a5 s6)
		(s3 a10 s3)
		(s3 a10 s6)
		(s4 a2 s0)
		(s4 a2 s6)
		(s4 a5 s4)
		(s4 a10 s4)
		(s5 a0 s6)
		(s5 a0 s7)
		(s6 a2 s0)
		(s6 a2 s6)
		(s6 a5 s4)
		(s6 a10 s4)
		(s7 a0 s4)
		(s7 a2 s1)
		(s7 a5 s6)
		(s7 a5 s7)
		(s7 a10 s6)
		(s7 a10 s7)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:35:02
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 },
	initialStates = {s15 },
	finalStates = {s5 s10 s11 s13 s14 s15 },
	transitions = {
		(s0 a0 s16)
		(s1 a5 s17)
		(s2 a0 s1)
		(s3 a5 s6)
		(s3 a5 s7)
		(s4 a2 s3)
		(s5 a5 s6)
		(s5 a5 s7)
		(s6 a10 s12)
		(s7 a10 s2)
		(s8 a5 s9)
		(s9 a10 s4)
		(s10 a2 s11)
		(s11 a5 s17)
		(s12 a0 s8)
		(s13 a10 s10)
		(s14 a3 s5)
		(s15 a1 s14)
		(s16 a5 s13)
		(s16 a5 s17)
		(s17 a10 s0)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:35:28
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=true, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 },
	initialStates = {s2 },
	finalStates = {s1 s6 s8 },
	transitions = {
		(s0 a5 s0)
		(s0 a5 s6)
		(s0 a10 s5)
		(s0 a10 s6)
		(s1 a0 s1)
		(s1 a2 s1)
		(s1 a5 s1)
		(s1 a10 s1)
		(s2 a1 s2)
		(s2 a1 s8)
		(s2 a3 s3)
		(s2 a3 s6)
		(s3 a0 s3)
		(s3 a0 s6)
		(s3 a2 s3)
		(s3 a2 s6)
		(s3 a5 s3)
		(s3 a5 s6)
		(s3 a10 s3)
		(s3 a10 s6)
		(s4 a2 s0)
		(s4 a2 s6)
		(s4 a5 s4)
		(s4 a10 s4)
		(s5 a0 s6)
		(s5 a0 s7)
		(s6 a2 s0)
		(s6 a2 s6)
		(s6 a5 s4)
		(s6 a10 s4)
		(s7 a0 s4)
		(s7 a2 s1)
		(s7 a5 s6)
		(s7 a5 s7)
		(s7 a10 s6)
		(s7 a10 s7)
	}
);
