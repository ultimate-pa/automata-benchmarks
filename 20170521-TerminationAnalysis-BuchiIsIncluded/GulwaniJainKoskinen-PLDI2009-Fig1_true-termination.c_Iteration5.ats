// Testfile dumped by Ultimate at 2017/05/21 20:35:28
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 },
	initialStates = {s11 },
	finalStates = {s0 s1 s4 s7 s8 s11 s13 s24 s41 s52 s53 },
	transitions = {
		(s0 a2 s1)
		(s1 a5 s4)
		(s2 a2 s3)
		(s2 a2 s1)
		(s3 a5 s42)
		(s4 a10 s8)
		(s5 a5 s6)
		(s5 a5 s7)
		(s6 a10 s0)
		(s6 a10 s2)
		(s7 a10 s0)
		(s8 a0 s41)
		(s9 a3 s10)
		(s10 a5 s20)
		(s10 a5 s33)
		(s11 a1 s9)
		(s11 a1 s12)
		(s12 a3 s10)
		(s12 a3 s48)
		(s13 a10 s14)
		(s14 a2 s39)
		(s15 a5 s13)
		(s15 a5 s16)
		(s16 a10 s17)
		(s17 a0 s15)
		(s18 a5 s16)
		(s19 a0 s18)
		(s20 a10 s19)
		(s21 a5 s20)
		(s22 a0 s23)
		(s22 a0 s24)
		(s23 a5 s6)
		(s23 a5 s7)
		(s23 a5 s30)
		(s24 a5 s7)
		(s25 a0 s26)
		(s25 a0 s18)
		(s26 a5 s30)
		(s27 a2 s21)
		(s28 a10 s27)
		(s29 a5 s28)
		(s30 a10 s31)
		(s31 a0 s23)
		(s31 a0 s44)
		(s32 a0 s29)
		(s33 a10 s32)
		(s34 a10 s35)
		(s35 a0 s36)
		(s36 a5 s51)
		(s37 a10 s22)
		(s38 a5 s37)
		(s39 a5 s34)
		(s40 a0 s38)
		(s40 a0 s41)
		(s41 a5 s53)
		(s42 a10 s40)
		(s43 a10 s14)
		(s44 a5 s43)
		(s44 a5 s16)
		(s45 a5 s43)
		(s46 a0 s5)
		(s46 a0 s45)
		(s47 a10 s46)
		(s48 a5 s47)
		(s48 a5 s49)
		(s49 a10 s25)
		(s50 a0 s44)
		(s51 a10 s50)
		(s52 a0 s24)
		(s53 a10 s52)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:35:28
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=false, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=true, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 },
	initialStates = {s2 },
	finalStates = {s1 s6 s8 },
	transitions = {
		(s0 a5 s0)
		(s0 a5 s6)
		(s0 a10 s5)
		(s0 a10 s6)
		(s1 a0 s1)
		(s1 a2 s1)
		(s1 a5 s1)
		(s1 a10 s1)
		(s2 a1 s2)
		(s2 a1 s8)
		(s2 a3 s3)
		(s2 a3 s6)
		(s3 a0 s3)
		(s3 a0 s6)
		(s3 a2 s3)
		(s3 a2 s6)
		(s3 a5 s3)
		(s3 a5 s6)
		(s3 a10 s3)
		(s3 a10 s6)
		(s4 a2 s0)
		(s4 a2 s6)
		(s4 a5 s4)
		(s4 a10 s4)
		(s5 a0 s6)
		(s5 a0 s7)
		(s6 a2 s0)
		(s6 a2 s6)
		(s6 a5 s4)
		(s6 a10 s4)
		(s7 a0 s4)
		(s7 a2 s1)
		(s7 a5 s6)
		(s7 a5 s7)
		(s7 a10 s6)
		(s7 a10 s7)
	}
);
