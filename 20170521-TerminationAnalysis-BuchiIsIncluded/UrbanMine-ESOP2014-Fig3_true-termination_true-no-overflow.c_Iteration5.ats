// Testfile dumped by Ultimate at 2017/05/21 20:48:15
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 s96 s97 s98 s99 s100 s101 s102 s103 s104 s105 s106 s107 s108 s109 s110 s111 s112 s113 s114 s115 s116 s117 s118 s119 s120 s121 s122 s123 s124 s125 s126 s127 s128 s129 s130 s131 s132 s133 s134 s135 s136 s137 s138 s139 s140 s141 s142 s143 s144 s145 s146 s147 s148 s149 s150 s151 s152 s153 s154 s155 s156 s157 },
	initialStates = {s18 },
	finalStates = {s5 s6 s7 s8 s9 s12 s13 s16 s18 s19 s20 s21 s24 s26 s27 s31 s36 s38 s39 s40 s49 s55 s56 s57 s58 s59 s60 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s74 s77 s92 s99 s100 s101 s102 s105 s108 s109 s110 s113 s114 s123 s150 s153 },
	transitions = {
		(s0 a9 s22)
		(s0 a9 s155)
		(s0 a6 s82)
		(s1 a5 s157)
		(s2 a5 s111)
		(s3 a3 s151)
		(s4 a3 s25)
		(s5 a7 s66)
		(s5 a8 s15)
		(s6 a6 s5)
		(s7 a5 s6)
		(s8 a5 s9)
		(s9 a6 s67)
		(s10 a5 s11)
		(s11 a6 s14)
		(s11 a6 s67)
		(s12 a7 s13)
		(s13 a3 s40)
		(s14 a8 s15)
		(s15 a3 s10)
		(s16 a6 s12)
		(s17 a6 s14)
		(s18 a0 s19)
		(s19 a3 s104)
		(s19 a3 s105)
		(s20 a10 s21)
		(s21 a3 s8)
		(s22 a10 s23)
		(s23 a3 s1)
		(s23 a3 s2)
		(s24 a3 s25)
		(s25 a5 s17)
		(s26 a9 s27)
		(s26 a6 s12)
		(s27 a10 s114)
		(s28 a9 s20)
		(s28 a9 s29)
		(s28 a6 s30)
		(s28 a6 s31)
		(s29 a10 s4)
		(s29 a11 s47)
		(s30 a8 s61)
		(s31 a7 s56)
		(s32 a5 s28)
		(s33 a3 s34)
		(s34 a5 s107)
		(s35 a8 s33)
		(s36 a7 s13)
		(s36 a8 s33)
		(s37 a11 s33)
		(s38 a9 s39)
		(s38 a6 s36)
		(s39 a10 s13)
		(s39 a11 s13)
		(s40 a5 s38)
		(s41 a9 s42)
		(s41 a6 s35)
		(s42 a10 s44)
		(s42 a11 s33)
		(s43 a5 s41)
		(s44 a3 s43)
		(s45 a10 s46)
		(s45 a11 s47)
		(s46 a3 s53)
		(s47 a3 s151)
		(s47 a3 s121)
		(s48 a9 s49)
		(s48 a9 s45)
		(s48 a6 s31)
		(s48 a6 s50)
		(s49 a10 s110)
		(s50 a8 s54)
		(s51 a9 s45)
		(s51 a6 s50)
		(s52 a5 s48)
		(s53 a5 s51)
		(s54 a3 s52)
		(s55 a7 s56)
		(s55 a8 s54)
		(s56 a3 s59)
		(s57 a9 s58)
		(s57 a6 s55)
		(s58 a10 s56)
		(s58 a11 s62)
		(s59 a5 s57)
		(s60 a7 s56)
		(s60 a8 s61)
		(s61 a3 s32)
		(s62 a3 s86)
		(s62 a3 s71)
		(s63 a9 s64)
		(s63 a6 s60)
		(s64 a10 s77)
		(s64 a11 s62)
		(s65 a5 s63)
		(s66 a3 s65)
		(s67 a7 s66)
		(s68 a11 s13)
		(s69 a9 s68)
		(s69 a6 s70)
		(s70 a7 s13)
		(s70 a8 s149)
		(s71 a5 s69)
		(s72 a3 s71)
		(s72 a3 s73)
		(s73 a5 s80)
		(s74 a3 s71)
		(s74 a3 s73)
		(s75 a10 s76)
		(s76 a3 s86)
		(s76 a3 s71)
		(s77 a3 s7)
		(s78 a10 s79)
		(s78 a10 s77)
		(s78 a11 s62)
		(s79 a3 s88)
		(s80 a9 s81)
		(s80 a6 s82)
		(s81 a10 s72)
		(s82 a8 s3)
		(s83 a9 s84)
		(s83 a6 s85)
		(s84 a10 s90)
		(s84 a10 s77)
		(s84 a11 s74)
		(s85 a7 s97)
		(s85 a8 s138)
		(s86 a5 s87)
		(s87 a9 s75)
		(s87 a6 s128)
		(s88 a5 s89)
		(s89 a9 s78)
		(s89 a6 s85)
		(s90 a3 s91)
		(s91 a5 s83)
		(s92 a10 s79)
		(s92 a10 s77)
		(s92 a11 s62)
		(s93 a10 s79)
		(s94 a9 s93)
		(s94 a6 s95)
		(s95 a8 s148)
		(s96 a5 s94)
		(s97 a3 s96)
		(s98 a7 s97)
		(s99 a9 s100)
		(s100 a10 s90)
		(s100 a10 s77)
		(s100 a11 s74)
		(s101 a5 s102)
		(s102 a9 s92)
		(s103 a3 s101)
		(s103 a3 s104)
		(s104 a5 s115)
		(s105 a5 s99)
		(s106 a7 s103)
		(s107 a9 s42)
		(s107 a9 s27)
		(s107 a6 s35)
		(s107 a6 s12)
		(s108 a9 s49)
		(s108 a6 s31)
		(s109 a5 s108)
		(s110 a3 s109)
		(s111 a9 s37)
		(s111 a6 s112)
		(s112 a8 s149)
		(s113 a5 s26)
		(s114 a3 s113)
		(s115 a6 s116)
		(s116 a7 s103)
		(s116 a8 s117)
		(s117 a3 s118)
		(s118 a5 s120)
		(s119 a8 s117)
		(s120 a6 s119)
		(s120 a6 s106)
		(s121 a5 s122)
		(s122 a9 s37)
		(s122 a6 s112)
		(s122 a6 s12)
		(s123 a5 s111)
		(s124 a3 s123)
		(s124 a3 s125)
		(s125 a5 s127)
		(s126 a10 s124)
		(s127 a9 s126)
		(s127 a6 s128)
		(s128 a8 s131)
		(s129 a5 s130)
		(s130 a9 s126)
		(s130 a9 s155)
		(s130 a6 s128)
		(s131 a3 s129)
		(s132 a9 s133)
		(s132 a6 s98)
		(s133 a10 s21)
		(s133 a10 s136)
		(s134 a5 s135)
		(s135 a9 s133)
		(s135 a9 s141)
		(s135 a6 s98)
		(s135 a6 s139)
		(s136 a3 s137)
		(s137 a5 s132)
		(s138 a3 s134)
		(s139 a8 s138)
		(s140 a10 s136)
		(s141 a10 s144)
		(s141 a10 s24)
		(s141 a11 s150)
		(s142 a9 s141)
		(s142 a6 s139)
		(s143 a5 s142)
		(s144 a3 s143)
		(s145 a10 s144)
		(s146 a9 s145)
		(s146 a9 s140)
		(s146 a6 s95)
		(s147 a5 s146)
		(s148 a3 s147)
		(s149 a3 s121)
		(s150 a3 s151)
		(s150 a3 s121)
		(s151 a5 s0)
		(s152 a3 s153)
		(s152 a3 s154)
		(s153 a5 s16)
		(s154 a5 s156)
		(s155 a10 s152)
		(s156 a9 s155)
		(s157 a9 s22)
		(s157 a6 s82)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 20:48:15
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 },
	states = {s0 s1 s2 s3 },
	initialStates = {s1 },
	finalStates = {s3 },
	transitions = {
		(s0 a3 s0)
		(s0 a5 s3)
		(s1 a0 s1)
		(s1 a7 s1)
		(s1 a8 s1)
		(s1 a3 s1)
		(s1 a9 s1)
		(s1 a10 s1)
		(s1 a5 s1)
		(s1 a11 s1)
		(s1 a6 s1)
		(s1 a6 s3)
		(s2 a8 s0)
		(s2 a3 s2)
		(s2 a9 s2)
		(s2 a10 s2)
		(s2 a11 s0)
		(s2 a5 s2)
		(s2 a6 s2)
		(s3 a8 s0)
		(s3 a9 s2)
		(s3 a6 s2)
	}
);
