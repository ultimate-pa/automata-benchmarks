// Testfile dumped by Ultimate at 2017/05/21 21:43:45
//
// 

FiniteAutomaton inclusionLHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 },
	initialStates = {s24 },
	finalStates = {s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s15 s17 s18 s19 s20 s21 s22 s23 s24 },
	transitions = {
		(s0 a10 s1)
		(s1 a4 s14)
		(s1 a4 s15)
		(s2 a18 s3)
		(s3 a19 s17)
		(s4 a26 s5)
		(s5 a27 s2)
		(s6 a3 s7)
		(s7 a4 s14)
		(s7 a4 s15)
		(s8 a16 s9)
		(s9 a17 s2)
		(s10 a1 s11)
		(s11 a2 s6)
		(s12 a7 s13)
		(s13 a8 s16)
		(s14 a6 s12)
		(s15 a5 s18)
		(s16 a9 s0)
		(s17 a20 s23)
		(s17 a23 s21)
		(s18 a12 s19)
		(s18 a14 s20)
		(s19 a13 s8)
		(s20 a15 s8)
		(s21 a25 s4)
		(s22 a22 s21)
		(s23 a21 s22)
		(s24 a0 s10)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 21:43:45
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s0 },
	finalStates = {s2 s3 },
	transitions = {
		(s0 a0 s0)
		(s0 a1 s0)
		(s0 a2 s0)
		(s0 a3 s2)
		(s1 a17 s1)
		(s1 a18 s1)
		(s1 a19 s1)
		(s1 a20 s1)
		(s1 a21 s1)
		(s1 a5 s1)
		(s1 a22 s1)
		(s1 a6 s4)
		(s1 a23 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a27 s1)
		(s1 a28 s3)
		(s1 a12 s1)
		(s1 a13 s1)
		(s1 a29 s1)
		(s1 a14 s1)
		(s1 a30 s1)
		(s1 a15 s1)
		(s1 a31 s1)
		(s1 a16 s1)
		(s2 a11 s3)
		(s2 a4 s1)
		(s3 a17 s3)
		(s3 a18 s3)
		(s3 a19 s3)
		(s3 a20 s3)
		(s3 a21 s3)
		(s3 a22 s3)
		(s3 a23 s3)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a12 s3)
		(s3 a13 s3)
		(s3 a29 s3)
		(s3 a14 s3)
		(s3 a30 s3)
		(s3 a15 s3)
		(s3 a31 s3)
		(s3 a16 s3)
		(s4 a9 s4)
		(s4 a10 s2)
		(s4 a7 s4)
		(s4 a8 s4)
	}
);
