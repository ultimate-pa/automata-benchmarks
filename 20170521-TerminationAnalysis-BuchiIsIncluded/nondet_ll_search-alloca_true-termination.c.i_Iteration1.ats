// Testfile dumped by Ultimate at 2017/05/21 21:44:27
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s0 },
	finalStates = {s2 s3 },
	transitions = {
		(s0 a0 s0)
		(s0 a2 s0)
		(s0 a5 s0)
		(s0 a4 s0)
		(s0 a6 s0)
		(s0 a7 s0)
		(s0 a8 s0)
		(s0 a9 s2)
		(s1 a20 s1)
		(s1 a21 s1)
		(s1 a1 s3)
		(s1 a22 s1)
		(s1 a3 s1)
		(s1 a23 s1)
		(s1 a4 s1)
		(s1 a6 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a11 s1)
		(s1 a27 s1)
		(s1 a12 s4)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a30 s1)
		(s1 a31 s1)
		(s1 a32 s1)
		(s1 a18 s1)
		(s1 a33 s1)
		(s1 a19 s1)
		(s1 a34 s1)
		(s1 a35 s1)
		(s2 a17 s3)
		(s2 a10 s1)
		(s3 a20 s3)
		(s3 a21 s3)
		(s3 a1 s3)
		(s3 a22 s3)
		(s3 a3 s3)
		(s3 a23 s3)
		(s3 a4 s3)
		(s3 a6 s3)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a32 s3)
		(s3 a18 s3)
		(s3 a33 s3)
		(s3 a19 s3)
		(s3 a34 s3)
		(s3 a35 s3)
		(s4 a13 s4)
		(s4 a14 s4)
		(s4 a15 s4)
		(s4 a16 s2)
	}
);
// Testfile dumped by Ultimate at 2017/05/21 21:44:27
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

FiniteAutomaton inclusionRHS = (
	alphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a29 a30 a31 a32 a33 a34 a35 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s0 },
	finalStates = {s2 s3 },
	transitions = {
		(s0 a0 s0)
		(s0 a2 s0)
		(s0 a5 s0)
		(s0 a4 s0)
		(s0 a6 s0)
		(s0 a7 s0)
		(s0 a8 s0)
		(s0 a9 s2)
		(s1 a20 s1)
		(s1 a21 s1)
		(s1 a1 s3)
		(s1 a22 s1)
		(s1 a3 s1)
		(s1 a23 s1)
		(s1 a4 s1)
		(s1 a6 s1)
		(s1 a24 s1)
		(s1 a25 s1)
		(s1 a26 s1)
		(s1 a11 s1)
		(s1 a27 s1)
		(s1 a12 s4)
		(s1 a28 s1)
		(s1 a29 s1)
		(s1 a30 s1)
		(s1 a31 s1)
		(s1 a32 s1)
		(s1 a18 s1)
		(s1 a33 s1)
		(s1 a19 s1)
		(s1 a34 s1)
		(s1 a35 s1)
		(s2 a17 s3)
		(s2 a10 s1)
		(s3 a20 s3)
		(s3 a21 s3)
		(s3 a1 s3)
		(s3 a22 s3)
		(s3 a3 s3)
		(s3 a23 s3)
		(s3 a4 s3)
		(s3 a6 s3)
		(s3 a24 s3)
		(s3 a25 s3)
		(s3 a26 s3)
		(s3 a27 s3)
		(s3 a28 s3)
		(s3 a29 s3)
		(s3 a30 s3)
		(s3 a31 s3)
		(s3 a32 s3)
		(s3 a18 s3)
		(s3 a33 s3)
		(s3 a19 s3)
		(s3 a34 s3)
		(s3 a35 s3)
		(s4 a13 s4)
		(s4 a14 s4)
		(s4 a15 s4)
		(s4 a16 s2)
	}
);
